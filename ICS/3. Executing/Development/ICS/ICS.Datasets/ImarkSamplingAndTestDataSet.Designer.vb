'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ImarkSamplingAndTestDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ImarkSamplingAndTestDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableDEFAULTVALUES_VIEW As DEFAULTVALUES_VIEWDataTable
    
    Private tablePRODUCTDATA_REPORT_VIEW As PRODUCTDATA_REPORT_VIEWDataTable
    
    Private tableCertificate As CertificateDataTable
    
    Private tableMeasureHdr As MeasureHdrDataTable
    
    Private tableMeasureDtl As MeasureDtlDataTable
    
    Private tableTreadWearHdr As TreadWearHdrDataTable
    
    Private tableTreadWearDtl As TreadWearDtlDataTable
    
    Private tableHighSpeedHdr As HighSpeedHdrDataTable
    
    Private tableHighSpeedDtl As HighSpeedDtlDataTable
    
    Private relationCertificate_PRODUCTDATA_REPORT_VIEW As Global.System.Data.DataRelation
    
    Private relationCertificate_MeasureHdr As Global.System.Data.DataRelation
    
    Private relationCertificate_TreadWearHdr As Global.System.Data.DataRelation
    
    Private relationCertificate_HighSpeedHdr As Global.System.Data.DataRelation
    
    Private relationMeasureHdr_MeasureDtl As Global.System.Data.DataRelation
    
    Private relationTreadWearHdr_TreadWearDtl As Global.System.Data.DataRelation
    
    Private relationCertificate_DEFAULTVALUES_VIEW As Global.System.Data.DataRelation
    
    Private relationHighSpeedHdr_HighSpeedDtl As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DEFAULTVALUES_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New DEFAULTVALUES_VIEWDataTable(ds.Tables("DEFAULTVALUES_VIEW")))
            End If
            If (Not (ds.Tables("PRODUCTDATA_REPORT_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTDATA_REPORT_VIEWDataTable(ds.Tables("PRODUCTDATA_REPORT_VIEW")))
            End If
            If (Not (ds.Tables("Certificate")) Is Nothing) Then
                MyBase.Tables.Add(New CertificateDataTable(ds.Tables("Certificate")))
            End If
            If (Not (ds.Tables("MeasureHdr")) Is Nothing) Then
                MyBase.Tables.Add(New MeasureHdrDataTable(ds.Tables("MeasureHdr")))
            End If
            If (Not (ds.Tables("MeasureDtl")) Is Nothing) Then
                MyBase.Tables.Add(New MeasureDtlDataTable(ds.Tables("MeasureDtl")))
            End If
            If (Not (ds.Tables("TreadWearHdr")) Is Nothing) Then
                MyBase.Tables.Add(New TreadWearHdrDataTable(ds.Tables("TreadWearHdr")))
            End If
            If (Not (ds.Tables("TreadWearDtl")) Is Nothing) Then
                MyBase.Tables.Add(New TreadWearDtlDataTable(ds.Tables("TreadWearDtl")))
            End If
            If (Not (ds.Tables("HighSpeedHdr")) Is Nothing) Then
                MyBase.Tables.Add(New HighSpeedHdrDataTable(ds.Tables("HighSpeedHdr")))
            End If
            If (Not (ds.Tables("HighSpeedDtl")) Is Nothing) Then
                MyBase.Tables.Add(New HighSpeedDtlDataTable(ds.Tables("HighSpeedDtl")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DEFAULTVALUES_VIEW() As DEFAULTVALUES_VIEWDataTable
        Get
            Return Me.tableDEFAULTVALUES_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRODUCTDATA_REPORT_VIEW() As PRODUCTDATA_REPORT_VIEWDataTable
        Get
            Return Me.tablePRODUCTDATA_REPORT_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Certificate() As CertificateDataTable
        Get
            Return Me.tableCertificate
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MeasureHdr() As MeasureHdrDataTable
        Get
            Return Me.tableMeasureHdr
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MeasureDtl() As MeasureDtlDataTable
        Get
            Return Me.tableMeasureDtl
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TreadWearHdr() As TreadWearHdrDataTable
        Get
            Return Me.tableTreadWearHdr
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TreadWearDtl() As TreadWearDtlDataTable
        Get
            Return Me.tableTreadWearDtl
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HighSpeedHdr() As HighSpeedHdrDataTable
        Get
            Return Me.tableHighSpeedHdr
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HighSpeedDtl() As HighSpeedDtlDataTable
        Get
            Return Me.tableHighSpeedDtl
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ImarkSamplingAndTestDataSet = CType(MyBase.Clone,ImarkSamplingAndTestDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("DEFAULTVALUES_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New DEFAULTVALUES_VIEWDataTable(ds.Tables("DEFAULTVALUES_VIEW")))
            End If
            If (Not (ds.Tables("PRODUCTDATA_REPORT_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTDATA_REPORT_VIEWDataTable(ds.Tables("PRODUCTDATA_REPORT_VIEW")))
            End If
            If (Not (ds.Tables("Certificate")) Is Nothing) Then
                MyBase.Tables.Add(New CertificateDataTable(ds.Tables("Certificate")))
            End If
            If (Not (ds.Tables("MeasureHdr")) Is Nothing) Then
                MyBase.Tables.Add(New MeasureHdrDataTable(ds.Tables("MeasureHdr")))
            End If
            If (Not (ds.Tables("MeasureDtl")) Is Nothing) Then
                MyBase.Tables.Add(New MeasureDtlDataTable(ds.Tables("MeasureDtl")))
            End If
            If (Not (ds.Tables("TreadWearHdr")) Is Nothing) Then
                MyBase.Tables.Add(New TreadWearHdrDataTable(ds.Tables("TreadWearHdr")))
            End If
            If (Not (ds.Tables("TreadWearDtl")) Is Nothing) Then
                MyBase.Tables.Add(New TreadWearDtlDataTable(ds.Tables("TreadWearDtl")))
            End If
            If (Not (ds.Tables("HighSpeedHdr")) Is Nothing) Then
                MyBase.Tables.Add(New HighSpeedHdrDataTable(ds.Tables("HighSpeedHdr")))
            End If
            If (Not (ds.Tables("HighSpeedDtl")) Is Nothing) Then
                MyBase.Tables.Add(New HighSpeedDtlDataTable(ds.Tables("HighSpeedDtl")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDEFAULTVALUES_VIEW = CType(MyBase.Tables("DEFAULTVALUES_VIEW"),DEFAULTVALUES_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDEFAULTVALUES_VIEW) Is Nothing) Then
                Me.tableDEFAULTVALUES_VIEW.InitVars
            End If
        End If
        Me.tablePRODUCTDATA_REPORT_VIEW = CType(MyBase.Tables("PRODUCTDATA_REPORT_VIEW"),PRODUCTDATA_REPORT_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRODUCTDATA_REPORT_VIEW) Is Nothing) Then
                Me.tablePRODUCTDATA_REPORT_VIEW.InitVars
            End If
        End If
        Me.tableCertificate = CType(MyBase.Tables("Certificate"),CertificateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCertificate) Is Nothing) Then
                Me.tableCertificate.InitVars
            End If
        End If
        Me.tableMeasureHdr = CType(MyBase.Tables("MeasureHdr"),MeasureHdrDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMeasureHdr) Is Nothing) Then
                Me.tableMeasureHdr.InitVars
            End If
        End If
        Me.tableMeasureDtl = CType(MyBase.Tables("MeasureDtl"),MeasureDtlDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMeasureDtl) Is Nothing) Then
                Me.tableMeasureDtl.InitVars
            End If
        End If
        Me.tableTreadWearHdr = CType(MyBase.Tables("TreadWearHdr"),TreadWearHdrDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTreadWearHdr) Is Nothing) Then
                Me.tableTreadWearHdr.InitVars
            End If
        End If
        Me.tableTreadWearDtl = CType(MyBase.Tables("TreadWearDtl"),TreadWearDtlDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTreadWearDtl) Is Nothing) Then
                Me.tableTreadWearDtl.InitVars
            End If
        End If
        Me.tableHighSpeedHdr = CType(MyBase.Tables("HighSpeedHdr"),HighSpeedHdrDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHighSpeedHdr) Is Nothing) Then
                Me.tableHighSpeedHdr.InitVars
            End If
        End If
        Me.tableHighSpeedDtl = CType(MyBase.Tables("HighSpeedDtl"),HighSpeedDtlDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHighSpeedDtl) Is Nothing) Then
                Me.tableHighSpeedDtl.InitVars
            End If
        End If
        Me.relationCertificate_PRODUCTDATA_REPORT_VIEW = Me.Relations("Certificate_PRODUCTDATA_REPORT_VIEW")
        Me.relationCertificate_MeasureHdr = Me.Relations("Certificate_MeasureHdr")
        Me.relationCertificate_TreadWearHdr = Me.Relations("Certificate_TreadWearHdr")
        Me.relationCertificate_HighSpeedHdr = Me.Relations("Certificate_HighSpeedHdr")
        Me.relationMeasureHdr_MeasureDtl = Me.Relations("MeasureHdr_MeasureDtl")
        Me.relationTreadWearHdr_TreadWearDtl = Me.Relations("TreadWearHdr_TreadWearDtl")
        Me.relationCertificate_DEFAULTVALUES_VIEW = Me.Relations("Certificate_DEFAULTVALUES_VIEW")
        Me.relationHighSpeedHdr_HighSpeedDtl = Me.Relations("HighSpeedHdr_HighSpeedDtl")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ImarkSamplingAndTestDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ImarkSamplingAndTestDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDEFAULTVALUES_VIEW = New DEFAULTVALUES_VIEWDataTable()
        MyBase.Tables.Add(Me.tableDEFAULTVALUES_VIEW)
        Me.tablePRODUCTDATA_REPORT_VIEW = New PRODUCTDATA_REPORT_VIEWDataTable()
        MyBase.Tables.Add(Me.tablePRODUCTDATA_REPORT_VIEW)
        Me.tableCertificate = New CertificateDataTable()
        MyBase.Tables.Add(Me.tableCertificate)
        Me.tableMeasureHdr = New MeasureHdrDataTable()
        MyBase.Tables.Add(Me.tableMeasureHdr)
        Me.tableMeasureDtl = New MeasureDtlDataTable()
        MyBase.Tables.Add(Me.tableMeasureDtl)
        Me.tableTreadWearHdr = New TreadWearHdrDataTable()
        MyBase.Tables.Add(Me.tableTreadWearHdr)
        Me.tableTreadWearDtl = New TreadWearDtlDataTable()
        MyBase.Tables.Add(Me.tableTreadWearDtl)
        Me.tableHighSpeedHdr = New HighSpeedHdrDataTable()
        MyBase.Tables.Add(Me.tableHighSpeedHdr)
        Me.tableHighSpeedDtl = New HighSpeedDtlDataTable()
        MyBase.Tables.Add(Me.tableHighSpeedDtl)
        Me.relationCertificate_PRODUCTDATA_REPORT_VIEW = New Global.System.Data.DataRelation("Certificate_PRODUCTDATA_REPORT_VIEW", New Global.System.Data.DataColumn() {Me.tableCertificate.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tablePRODUCTDATA_REPORT_VIEW.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCertificate_PRODUCTDATA_REPORT_VIEW)
        Me.relationCertificate_MeasureHdr = New Global.System.Data.DataRelation("Certificate_MeasureHdr", New Global.System.Data.DataColumn() {Me.tableCertificate.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableMeasureHdr.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCertificate_MeasureHdr)
        Me.relationCertificate_TreadWearHdr = New Global.System.Data.DataRelation("Certificate_TreadWearHdr", New Global.System.Data.DataColumn() {Me.tableCertificate.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableTreadWearHdr.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCertificate_TreadWearHdr)
        Me.relationCertificate_HighSpeedHdr = New Global.System.Data.DataRelation("Certificate_HighSpeedHdr", New Global.System.Data.DataColumn() {Me.tableCertificate.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableHighSpeedHdr.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCertificate_HighSpeedHdr)
        Me.relationMeasureHdr_MeasureDtl = New Global.System.Data.DataRelation("MeasureHdr_MeasureDtl", New Global.System.Data.DataColumn() {Me.tableMeasureHdr.MEA_IDColumn}, New Global.System.Data.DataColumn() {Me.tableMeasureDtl.MEA_IDColumn}, false)
        Me.Relations.Add(Me.relationMeasureHdr_MeasureDtl)
        Me.relationTreadWearHdr_TreadWearDtl = New Global.System.Data.DataRelation("TreadWearHdr_TreadWearDtl", New Global.System.Data.DataColumn() {Me.tableTreadWearHdr.TW_IDColumn}, New Global.System.Data.DataColumn() {Me.tableTreadWearDtl.TW_IDColumn}, false)
        Me.Relations.Add(Me.relationTreadWearHdr_TreadWearDtl)
        Me.relationCertificate_DEFAULTVALUES_VIEW = New Global.System.Data.DataRelation("Certificate_DEFAULTVALUES_VIEW", New Global.System.Data.DataColumn() {Me.tableCertificate.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCertificate_DEFAULTVALUES_VIEW)
        Me.relationHighSpeedHdr_HighSpeedDtl = New Global.System.Data.DataRelation("HighSpeedHdr_HighSpeedDtl", New Global.System.Data.DataColumn() {Me.tableHighSpeedHdr.HS_IDColumn}, New Global.System.Data.DataColumn() {Me.tableHighSpeedDtl.HS_IDColumn}, false)
        Me.Relations.Add(Me.relationHighSpeedHdr_HighSpeedDtl)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDEFAULTVALUES_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePRODUCTDATA_REPORT_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCertificate() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMeasureHdr() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMeasureDtl() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTreadWearHdr() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTreadWearDtl() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHighSpeedHdr() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHighSpeedDtl() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DEFAULTVALUES_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As DEFAULTVALUES_VIEWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PRODUCTDATA_REPORT_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As PRODUCTDATA_REPORT_VIEWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CertificateRowChangeEventHandler(ByVal sender As Object, ByVal e As CertificateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MeasureHdrRowChangeEventHandler(ByVal sender As Object, ByVal e As MeasureHdrRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MeasureDtlRowChangeEventHandler(ByVal sender As Object, ByVal e As MeasureDtlRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TreadWearHdrRowChangeEventHandler(ByVal sender As Object, ByVal e As TreadWearHdrRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TreadWearDtlRowChangeEventHandler(ByVal sender As Object, ByVal e As TreadWearDtlRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HighSpeedHdrRowChangeEventHandler(ByVal sender As Object, ByVal e As HighSpeedHdrRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HighSpeedDtlRowChangeEventHandler(ByVal sender As Object, ByVal e As HighSpeedDtlRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DEFAULTVALUES_VIEWDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSAMPLINGDATE_I As Global.System.Data.DataColumn
        
        Private columnCUSTOMERDATA_I As Global.System.Data.DataColumn
        
        Private columnSAMPLINGOBJECTIVE_I As Global.System.Data.DataColumn
        
        Private columnSAMPLINGLOCATION_I As Global.System.Data.DataColumn
        
        Private columnSAMPLINGLOCATIONCONDITION_I As Global.System.Data.DataColumn
        
        Private columnSAMPLINGLOCATIONCOMMENTS_I As Global.System.Data.DataColumn
        
        Private columnSTORAGELOCATIONCONDITION_I As Global.System.Data.DataColumn
        
        Private columnSTORAGELOCATIONCOMMENTS_I As Global.System.Data.DataColumn
        
        Private columnREFERENCESTANDARD_I As Global.System.Data.DataColumn
        
        Private columnSAMPLINGOBSERVATION_I As Global.System.Data.DataColumn
        
        Private columnTESTRESULTSOBSERVATION_I As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DEFAULTVALUES_VIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAMPLINGDATE_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMPLINGDATE_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTOMERDATA_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMERDATA_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAMPLINGOBJECTIVE_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMPLINGOBJECTIVE_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAMPLINGLOCATION_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMPLINGLOCATION_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAMPLINGLOCATIONCONDITION_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMPLINGLOCATIONCONDITION_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAMPLINGLOCATIONCOMMENTS_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMPLINGLOCATIONCOMMENTS_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STORAGELOCATIONCONDITION_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORAGELOCATIONCONDITION_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STORAGELOCATIONCOMMENTS_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORAGELOCATIONCOMMENTS_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFERENCESTANDARD_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCESTANDARD_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAMPLINGOBSERVATION_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAMPLINGOBSERVATION_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTRESULTSOBSERVATION_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTRESULTSOBSERVATION_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DEFAULTVALUES_VIEWRow
            Get
                Return CType(Me.Rows(index),DEFAULTVALUES_VIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DEFAULTVALUES_VIEWRowChanging As DEFAULTVALUES_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DEFAULTVALUES_VIEWRowChanged As DEFAULTVALUES_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DEFAULTVALUES_VIEWRowDeleting As DEFAULTVALUES_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DEFAULTVALUES_VIEWRowDeleted As DEFAULTVALUES_VIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDEFAULTVALUES_VIEWRow(ByVal row As DEFAULTVALUES_VIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDEFAULTVALUES_VIEWRow(ByVal parentCertificateRowByCertificate_DEFAULTVALUES_VIEW As CertificateRow, ByVal SAMPLINGDATE_I As String, ByVal CUSTOMERDATA_I As String, ByVal SAMPLINGOBJECTIVE_I As String, ByVal SAMPLINGLOCATION_I As String, ByVal SAMPLINGLOCATIONCONDITION_I As String, ByVal SAMPLINGLOCATIONCOMMENTS_I As String, ByVal STORAGELOCATIONCONDITION_I As String, ByVal STORAGELOCATIONCOMMENTS_I As String, ByVal REFERENCESTANDARD_I As String, ByVal SAMPLINGOBSERVATION_I As String, ByVal TESTRESULTSOBSERVATION_I As String) As DEFAULTVALUES_VIEWRow
            Dim rowDEFAULTVALUES_VIEWRow As DEFAULTVALUES_VIEWRow = CType(Me.NewRow,DEFAULTVALUES_VIEWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SAMPLINGDATE_I, CUSTOMERDATA_I, SAMPLINGOBJECTIVE_I, SAMPLINGLOCATION_I, SAMPLINGLOCATIONCONDITION_I, SAMPLINGLOCATIONCOMMENTS_I, STORAGELOCATIONCONDITION_I, STORAGELOCATIONCOMMENTS_I, REFERENCESTANDARD_I, SAMPLINGOBSERVATION_I, TESTRESULTSOBSERVATION_I}
            If (Not (parentCertificateRowByCertificate_DEFAULTVALUES_VIEW) Is Nothing) Then
                columnValuesArray(0) = parentCertificateRowByCertificate_DEFAULTVALUES_VIEW(0)
            End If
            rowDEFAULTVALUES_VIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDEFAULTVALUES_VIEWRow)
            Return rowDEFAULTVALUES_VIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DEFAULTVALUES_VIEWDataTable = CType(MyBase.Clone,DEFAULTVALUES_VIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DEFAULTVALUES_VIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSAMPLINGDATE_I = MyBase.Columns("SAMPLINGDATE_I")
            Me.columnCUSTOMERDATA_I = MyBase.Columns("CUSTOMERDATA_I")
            Me.columnSAMPLINGOBJECTIVE_I = MyBase.Columns("SAMPLINGOBJECTIVE_I")
            Me.columnSAMPLINGLOCATION_I = MyBase.Columns("SAMPLINGLOCATION_I")
            Me.columnSAMPLINGLOCATIONCONDITION_I = MyBase.Columns("SAMPLINGLOCATIONCONDITION_I")
            Me.columnSAMPLINGLOCATIONCOMMENTS_I = MyBase.Columns("SAMPLINGLOCATIONCOMMENTS_I")
            Me.columnSTORAGELOCATIONCONDITION_I = MyBase.Columns("STORAGELOCATIONCONDITION_I")
            Me.columnSTORAGELOCATIONCOMMENTS_I = MyBase.Columns("STORAGELOCATIONCOMMENTS_I")
            Me.columnREFERENCESTANDARD_I = MyBase.Columns("REFERENCESTANDARD_I")
            Me.columnSAMPLINGOBSERVATION_I = MyBase.Columns("SAMPLINGOBSERVATION_I")
            Me.columnTESTRESULTSOBSERVATION_I = MyBase.Columns("TESTRESULTSOBSERVATION_I")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSAMPLINGDATE_I = New Global.System.Data.DataColumn("SAMPLINGDATE_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMPLINGDATE_I)
            Me.columnCUSTOMERDATA_I = New Global.System.Data.DataColumn("CUSTOMERDATA_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMERDATA_I)
            Me.columnSAMPLINGOBJECTIVE_I = New Global.System.Data.DataColumn("SAMPLINGOBJECTIVE_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMPLINGOBJECTIVE_I)
            Me.columnSAMPLINGLOCATION_I = New Global.System.Data.DataColumn("SAMPLINGLOCATION_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMPLINGLOCATION_I)
            Me.columnSAMPLINGLOCATIONCONDITION_I = New Global.System.Data.DataColumn("SAMPLINGLOCATIONCONDITION_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMPLINGLOCATIONCONDITION_I)
            Me.columnSAMPLINGLOCATIONCOMMENTS_I = New Global.System.Data.DataColumn("SAMPLINGLOCATIONCOMMENTS_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMPLINGLOCATIONCOMMENTS_I)
            Me.columnSTORAGELOCATIONCONDITION_I = New Global.System.Data.DataColumn("STORAGELOCATIONCONDITION_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORAGELOCATIONCONDITION_I)
            Me.columnSTORAGELOCATIONCOMMENTS_I = New Global.System.Data.DataColumn("STORAGELOCATIONCOMMENTS_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORAGELOCATIONCOMMENTS_I)
            Me.columnREFERENCESTANDARD_I = New Global.System.Data.DataColumn("REFERENCESTANDARD_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCESTANDARD_I)
            Me.columnSAMPLINGOBSERVATION_I = New Global.System.Data.DataColumn("SAMPLINGOBSERVATION_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAMPLINGOBSERVATION_I)
            Me.columnTESTRESULTSOBSERVATION_I = New Global.System.Data.DataColumn("TESTRESULTSOBSERVATION_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTRESULTSOBSERVATION_I)
            Me.columnCERTIFICATENUMBER.MaxLength = 80
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDEFAULTVALUES_VIEWRow() As DEFAULTVALUES_VIEWRow
            Return CType(Me.NewRow,DEFAULTVALUES_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DEFAULTVALUES_VIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DEFAULTVALUES_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DEFAULTVALUES_VIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent DEFAULTVALUES_VIEWRowChanged(Me, New DEFAULTVALUES_VIEWRowChangeEvent(CType(e.Row,DEFAULTVALUES_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DEFAULTVALUES_VIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent DEFAULTVALUES_VIEWRowChanging(Me, New DEFAULTVALUES_VIEWRowChangeEvent(CType(e.Row,DEFAULTVALUES_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DEFAULTVALUES_VIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent DEFAULTVALUES_VIEWRowDeleted(Me, New DEFAULTVALUES_VIEWRowChangeEvent(CType(e.Row,DEFAULTVALUES_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DEFAULTVALUES_VIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent DEFAULTVALUES_VIEWRowDeleting(Me, New DEFAULTVALUES_VIEWRowChangeEvent(CType(e.Row,DEFAULTVALUES_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDEFAULTVALUES_VIEWRow(ByVal row As DEFAULTVALUES_VIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DEFAULTVALUES_VIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRODUCTDATA_REPORT_VIEWDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSKUID As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnBRANDCODE As Global.System.Data.DataColumn
        
        Private columnTIRETYPEID As Global.System.Data.DataColumn
        
        Private columnNPRID As Global.System.Data.DataColumn
        
        Private columnSIZESTAMP As Global.System.Data.DataColumn
        
        Private columnDISCONTINUEDDATE As Global.System.Data.DataColumn
        
        Private columnSPECNUMBER As Global.System.Data.DataColumn
        
        Private columnSPEEDRATING As Global.System.Data.DataColumn
        
        Private columnSINGLOADINDEX As Global.System.Data.DataColumn
        
        Private columnDUALLOADINDEX As Global.System.Data.DataColumn
        
        Private columnBELTEDRADIALYN As Global.System.Data.DataColumn
        
        Private columnTUBELESSYN As Global.System.Data.DataColumn
        
        Private columnREINFORCEDYN As Global.System.Data.DataColumn
        
        Private columnEXTRALOADYN As Global.System.Data.DataColumn
        
        Private columnMEASURINGRIM As Global.System.Data.DataColumn
        
        Private columnUTQGTREADWEAR As Global.System.Data.DataColumn
        
        Private columnUTQGTRACTION As Global.System.Data.DataColumn
        
        Private columnUTQGTEMP As Global.System.Data.DataColumn
        
        Private columnMUDSNOWYN As Global.System.Data.DataColumn
        
        Private columnRIMDIAMETER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnBRANDDESC As Global.System.Data.DataColumn
        
        Private columnLOADRANGE As Global.System.Data.DataColumn
        
        Private columnMEARIMWIDTH As Global.System.Data.DataColumn
        
        Private columnREGROOVABLEIND As Global.System.Data.DataColumn
        
        Private columnPLANTPRODUCED As Global.System.Data.DataColumn
        
        Private columnMOSTRECENTTESTDATE As Global.System.Data.DataColumn
        
        Private columnIMARK As Global.System.Data.DataColumn
        
        Private columnINFORMENUMBER As Global.System.Data.DataColumn
        
        Private columnFECHADATE As Global.System.Data.DataColumn
        
        Private columnTREADPATTERN As Global.System.Data.DataColumn
        
        Private columnSPECIALPROTECTIVEBAND As Global.System.Data.DataColumn
        
        Private columnNOMINALTIREWIDTH As Global.System.Data.DataColumn
        
        Private columnASPECTRADIO As Global.System.Data.DataColumn
        
        Private columnTREADWEARINDICATORS As Global.System.Data.DataColumn
        
        Private columnNAMEOFMANUFACTURER As Global.System.Data.DataColumn
        
        Private columnFAMILY As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALEXTENSION_EN As Global.System.Data.DataColumn
        
        Private columnEXTENSION_EN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRODUCTDATA_REPORT_VIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRETYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRETYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NPRIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNPRID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIZESTAMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZESTAMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCONTINUEDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCONTINUEDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDRATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDRATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SINGLOADINDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSINGLOADINDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DUALLOADINDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDUALLOADINDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BELTEDRADIALYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBELTEDRADIALYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TUBELESSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTUBELESSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REINFORCEDYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREINFORCEDYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTRALOADYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRALOADYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEASURINGRIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEASURINGRIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTREADWEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTREADWEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTRACTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTRACTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MUDSNOWYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUDSNOWYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADRANGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOADRANGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEARIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEARIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REGROOVABLEINDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGROOVABLEIND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLANTPRODUCEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANTPRODUCED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOSTRECENTTESTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOSTRECENTTESTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFORMENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFORMENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHADATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHADATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADPATTERNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADPATTERN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIALPROTECTIVEBANDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIALPROTECTIVEBAND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALTIREWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALTIREWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASPECTRADIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASPECTRADIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADWEARINDICATORSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADWEARINDICATORS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMEOFMANUFACTURERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMEOFMANUFACTURER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAMILYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALEXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRODUCTDATA_REPORT_VIEWRow
            Get
                Return CType(Me.Rows(index),PRODUCTDATA_REPORT_VIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowChanging As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowChanged As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowDeleting As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowDeleted As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPRODUCTDATA_REPORT_VIEWRow(ByVal row As PRODUCTDATA_REPORT_VIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPRODUCTDATA_REPORT_VIEWRow( _
                    ByVal SKUID As Decimal,  _
                    ByVal SKU As String,  _
                    ByVal BRANDCODE As String,  _
                    ByVal TIRETYPEID As Decimal,  _
                    ByVal NPRID As Decimal,  _
                    ByVal SIZESTAMP As String,  _
                    ByVal DISCONTINUEDDATE As Date,  _
                    ByVal SPECNUMBER As String,  _
                    ByVal SPEEDRATING As String,  _
                    ByVal SINGLOADINDEX As String,  _
                    ByVal DUALLOADINDEX As String,  _
                    ByVal BELTEDRADIALYN As String,  _
                    ByVal TUBELESSYN As String,  _
                    ByVal REINFORCEDYN As String,  _
                    ByVal EXTRALOADYN As String,  _
                    ByVal MEASURINGRIM As String,  _
                    ByVal UTQGTREADWEAR As String,  _
                    ByVal UTQGTRACTION As String,  _
                    ByVal UTQGTEMP As String,  _
                    ByVal MUDSNOWYN As String,  _
                    ByVal RIMDIAMETER As Decimal,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal BRANDDESC As String,  _
                    ByVal LOADRANGE As String,  _
                    ByVal MEARIMWIDTH As Decimal,  _
                    ByVal REGROOVABLEIND As String,  _
                    ByVal PLANTPRODUCED As String,  _
                    ByVal MOSTRECENTTESTDATE As Date,  _
                    ByVal IMARK As String,  _
                    ByVal INFORMENUMBER As String,  _
                    ByVal FECHADATE As Date,  _
                    ByVal TREADPATTERN As String,  _
                    ByVal SPECIALPROTECTIVEBAND As String,  _
                    ByVal NOMINALTIREWIDTH As String,  _
                    ByVal ASPECTRADIO As String,  _
                    ByVal TREADWEARINDICATORS As String,  _
                    ByVal NAMEOFMANUFACTURER As String,  _
                    ByVal FAMILY As String,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal parentCertificateRowByCertificate_PRODUCTDATA_REPORT_VIEW As CertificateRow,  _
                    ByVal SUPPLEMENTALEXTENSION_EN As String,  _
                    ByVal EXTENSION_EN As String) As PRODUCTDATA_REPORT_VIEWRow
            Dim rowPRODUCTDATA_REPORT_VIEWRow As PRODUCTDATA_REPORT_VIEWRow = CType(Me.NewRow,PRODUCTDATA_REPORT_VIEWRow)
            Dim columnValuesArray() As Object = New Object() {SKUID, SKU, BRANDCODE, TIRETYPEID, NPRID, SIZESTAMP, DISCONTINUEDDATE, SPECNUMBER, SPEEDRATING, SINGLOADINDEX, DUALLOADINDEX, BELTEDRADIALYN, TUBELESSYN, REINFORCEDYN, EXTRALOADYN, MEASURINGRIM, UTQGTREADWEAR, UTQGTRACTION, UTQGTEMP, MUDSNOWYN, RIMDIAMETER, SERIALDATE, BRANDDESC, LOADRANGE, MEARIMWIDTH, REGROOVABLEIND, PLANTPRODUCED, MOSTRECENTTESTDATE, IMARK, INFORMENUMBER, FECHADATE, TREADPATTERN, SPECIALPROTECTIVEBAND, NOMINALTIREWIDTH, ASPECTRADIO, TREADWEARINDICATORS, NAMEOFMANUFACTURER, FAMILY, DOTSERIALNUMBER, Nothing, SUPPLEMENTALEXTENSION_EN, EXTENSION_EN}
            If (Not (parentCertificateRowByCertificate_PRODUCTDATA_REPORT_VIEW) Is Nothing) Then
                columnValuesArray(39) = parentCertificateRowByCertificate_PRODUCTDATA_REPORT_VIEW(0)
            End If
            rowPRODUCTDATA_REPORT_VIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRODUCTDATA_REPORT_VIEWRow)
            Return rowPRODUCTDATA_REPORT_VIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRODUCTDATA_REPORT_VIEWDataTable = CType(MyBase.Clone,PRODUCTDATA_REPORT_VIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRODUCTDATA_REPORT_VIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSKUID = MyBase.Columns("SKUID")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnBRANDCODE = MyBase.Columns("BRANDCODE")
            Me.columnTIRETYPEID = MyBase.Columns("TIRETYPEID")
            Me.columnNPRID = MyBase.Columns("NPRID")
            Me.columnSIZESTAMP = MyBase.Columns("SIZESTAMP")
            Me.columnDISCONTINUEDDATE = MyBase.Columns("DISCONTINUEDDATE")
            Me.columnSPECNUMBER = MyBase.Columns("SPECNUMBER")
            Me.columnSPEEDRATING = MyBase.Columns("SPEEDRATING")
            Me.columnSINGLOADINDEX = MyBase.Columns("SINGLOADINDEX")
            Me.columnDUALLOADINDEX = MyBase.Columns("DUALLOADINDEX")
            Me.columnBELTEDRADIALYN = MyBase.Columns("BELTEDRADIALYN")
            Me.columnTUBELESSYN = MyBase.Columns("TUBELESSYN")
            Me.columnREINFORCEDYN = MyBase.Columns("REINFORCEDYN")
            Me.columnEXTRALOADYN = MyBase.Columns("EXTRALOADYN")
            Me.columnMEASURINGRIM = MyBase.Columns("MEASURINGRIM")
            Me.columnUTQGTREADWEAR = MyBase.Columns("UTQGTREADWEAR")
            Me.columnUTQGTRACTION = MyBase.Columns("UTQGTRACTION")
            Me.columnUTQGTEMP = MyBase.Columns("UTQGTEMP")
            Me.columnMUDSNOWYN = MyBase.Columns("MUDSNOWYN")
            Me.columnRIMDIAMETER = MyBase.Columns("RIMDIAMETER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnBRANDDESC = MyBase.Columns("BRANDDESC")
            Me.columnLOADRANGE = MyBase.Columns("LOADRANGE")
            Me.columnMEARIMWIDTH = MyBase.Columns("MEARIMWIDTH")
            Me.columnREGROOVABLEIND = MyBase.Columns("REGROOVABLEIND")
            Me.columnPLANTPRODUCED = MyBase.Columns("PLANTPRODUCED")
            Me.columnMOSTRECENTTESTDATE = MyBase.Columns("MOSTRECENTTESTDATE")
            Me.columnIMARK = MyBase.Columns("IMARK")
            Me.columnINFORMENUMBER = MyBase.Columns("INFORMENUMBER")
            Me.columnFECHADATE = MyBase.Columns("FECHADATE")
            Me.columnTREADPATTERN = MyBase.Columns("TREADPATTERN")
            Me.columnSPECIALPROTECTIVEBAND = MyBase.Columns("SPECIALPROTECTIVEBAND")
            Me.columnNOMINALTIREWIDTH = MyBase.Columns("NOMINALTIREWIDTH")
            Me.columnASPECTRADIO = MyBase.Columns("ASPECTRADIO")
            Me.columnTREADWEARINDICATORS = MyBase.Columns("TREADWEARINDICATORS")
            Me.columnNAMEOFMANUFACTURER = MyBase.Columns("NAMEOFMANUFACTURER")
            Me.columnFAMILY = MyBase.Columns("FAMILY")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSUPPLEMENTALEXTENSION_EN = MyBase.Columns("SUPPLEMENTALEXTENSION_EN")
            Me.columnEXTENSION_EN = MyBase.Columns("EXTENSION_EN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSKUID = New Global.System.Data.DataColumn("SKUID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKUID)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnBRANDCODE = New Global.System.Data.DataColumn("BRANDCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDCODE)
            Me.columnTIRETYPEID = New Global.System.Data.DataColumn("TIRETYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRETYPEID)
            Me.columnNPRID = New Global.System.Data.DataColumn("NPRID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNPRID)
            Me.columnSIZESTAMP = New Global.System.Data.DataColumn("SIZESTAMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZESTAMP)
            Me.columnDISCONTINUEDDATE = New Global.System.Data.DataColumn("DISCONTINUEDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCONTINUEDDATE)
            Me.columnSPECNUMBER = New Global.System.Data.DataColumn("SPECNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECNUMBER)
            Me.columnSPEEDRATING = New Global.System.Data.DataColumn("SPEEDRATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDRATING)
            Me.columnSINGLOADINDEX = New Global.System.Data.DataColumn("SINGLOADINDEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSINGLOADINDEX)
            Me.columnDUALLOADINDEX = New Global.System.Data.DataColumn("DUALLOADINDEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDUALLOADINDEX)
            Me.columnBELTEDRADIALYN = New Global.System.Data.DataColumn("BELTEDRADIALYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBELTEDRADIALYN)
            Me.columnTUBELESSYN = New Global.System.Data.DataColumn("TUBELESSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTUBELESSYN)
            Me.columnREINFORCEDYN = New Global.System.Data.DataColumn("REINFORCEDYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREINFORCEDYN)
            Me.columnEXTRALOADYN = New Global.System.Data.DataColumn("EXTRALOADYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRALOADYN)
            Me.columnMEASURINGRIM = New Global.System.Data.DataColumn("MEASURINGRIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEASURINGRIM)
            Me.columnUTQGTREADWEAR = New Global.System.Data.DataColumn("UTQGTREADWEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTREADWEAR)
            Me.columnUTQGTRACTION = New Global.System.Data.DataColumn("UTQGTRACTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTRACTION)
            Me.columnUTQGTEMP = New Global.System.Data.DataColumn("UTQGTEMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTEMP)
            Me.columnMUDSNOWYN = New Global.System.Data.DataColumn("MUDSNOWYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUDSNOWYN)
            Me.columnRIMDIAMETER = New Global.System.Data.DataColumn("RIMDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMDIAMETER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnBRANDDESC = New Global.System.Data.DataColumn("BRANDDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDDESC)
            Me.columnLOADRANGE = New Global.System.Data.DataColumn("LOADRANGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOADRANGE)
            Me.columnMEARIMWIDTH = New Global.System.Data.DataColumn("MEARIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEARIMWIDTH)
            Me.columnREGROOVABLEIND = New Global.System.Data.DataColumn("REGROOVABLEIND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGROOVABLEIND)
            Me.columnPLANTPRODUCED = New Global.System.Data.DataColumn("PLANTPRODUCED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANTPRODUCED)
            Me.columnMOSTRECENTTESTDATE = New Global.System.Data.DataColumn("MOSTRECENTTESTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOSTRECENTTESTDATE)
            Me.columnIMARK = New Global.System.Data.DataColumn("IMARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMARK)
            Me.columnINFORMENUMBER = New Global.System.Data.DataColumn("INFORMENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFORMENUMBER)
            Me.columnFECHADATE = New Global.System.Data.DataColumn("FECHADATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHADATE)
            Me.columnTREADPATTERN = New Global.System.Data.DataColumn("TREADPATTERN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADPATTERN)
            Me.columnSPECIALPROTECTIVEBAND = New Global.System.Data.DataColumn("SPECIALPROTECTIVEBAND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIALPROTECTIVEBAND)
            Me.columnNOMINALTIREWIDTH = New Global.System.Data.DataColumn("NOMINALTIREWIDTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALTIREWIDTH)
            Me.columnASPECTRADIO = New Global.System.Data.DataColumn("ASPECTRADIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASPECTRADIO)
            Me.columnTREADWEARINDICATORS = New Global.System.Data.DataColumn("TREADWEARINDICATORS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADWEARINDICATORS)
            Me.columnNAMEOFMANUFACTURER = New Global.System.Data.DataColumn("NAMEOFMANUFACTURER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMEOFMANUFACTURER)
            Me.columnFAMILY = New Global.System.Data.DataColumn("FAMILY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILY)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSUPPLEMENTALEXTENSION_EN = New Global.System.Data.DataColumn("SUPPLEMENTALEXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALEXTENSION_EN)
            Me.columnEXTENSION_EN = New Global.System.Data.DataColumn("EXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION_EN)
            Me.columnSKUID.AllowDBNull = false
            Me.columnSKU.AllowDBNull = false
            Me.columnSKU.MaxLength = 30
            Me.columnBRANDCODE.MaxLength = 10
            Me.columnSIZESTAMP.AllowDBNull = false
            Me.columnSIZESTAMP.MaxLength = 20
            Me.columnSPECNUMBER.MaxLength = 30
            Me.columnSPEEDRATING.MaxLength = 40
            Me.columnSINGLOADINDEX.MaxLength = 40
            Me.columnDUALLOADINDEX.MaxLength = 40
            Me.columnBELTEDRADIALYN.MaxLength = 4
            Me.columnTUBELESSYN.MaxLength = 4
            Me.columnREINFORCEDYN.MaxLength = 4
            Me.columnEXTRALOADYN.MaxLength = 4
            Me.columnMEASURINGRIM.MaxLength = 40
            Me.columnUTQGTREADWEAR.MaxLength = 40
            Me.columnUTQGTRACTION.MaxLength = 40
            Me.columnUTQGTEMP.MaxLength = 40
            Me.columnMUDSNOWYN.MaxLength = 4
            Me.columnBRANDDESC.MaxLength = 400
            Me.columnLOADRANGE.MaxLength = 120
            Me.columnREGROOVABLEIND.MaxLength = 120
            Me.columnPLANTPRODUCED.MaxLength = 200
            Me.columnIMARK.MaxLength = 120
            Me.columnINFORMENUMBER.MaxLength = 50
            Me.columnTREADPATTERN.MaxLength = 50
            Me.columnSPECIALPROTECTIVEBAND.MaxLength = 50
            Me.columnNOMINALTIREWIDTH.MaxLength = 50
            Me.columnASPECTRADIO.MaxLength = 50
            Me.columnTREADWEARINDICATORS.MaxLength = 50
            Me.columnNAMEOFMANUFACTURER.MaxLength = 100
            Me.columnFAMILY.MaxLength = 50
            Me.columnDOTSERIALNUMBER.MaxLength = 15
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnSUPPLEMENTALEXTENSION_EN.MaxLength = 30
            Me.columnEXTENSION_EN.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPRODUCTDATA_REPORT_VIEWRow() As PRODUCTDATA_REPORT_VIEWRow
            Return CType(Me.NewRow,PRODUCTDATA_REPORT_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRODUCTDATA_REPORT_VIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRODUCTDATA_REPORT_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowChanged(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowChanging(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowDeleted(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowDeleting(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePRODUCTDATA_REPORT_VIEWRow(ByVal row As PRODUCTDATA_REPORT_VIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRODUCTDATA_REPORT_VIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CertificateDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnEXTENSION_EN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Certificate"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CertificateRow
            Get
                Return CType(Me.Rows(index),CertificateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CertificateRowChanging As CertificateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CertificateRowChanged As CertificateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CertificateRowDeleting As CertificateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CertificateRowDeleted As CertificateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCertificateRow(ByVal row As CertificateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCertificateRow(ByVal CERTIFICATENUMBER As String, ByVal EXTENSION_EN As String) As CertificateRow
            Dim rowCertificateRow As CertificateRow = CType(Me.NewRow,CertificateRow)
            Dim columnValuesArray() As Object = New Object() {CERTIFICATENUMBER, EXTENSION_EN}
            rowCertificateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCertificateRow)
            Return rowCertificateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCERTIFICATENUMBER(ByVal CERTIFICATENUMBER As String) As CertificateRow
            Return CType(Me.Rows.Find(New Object() {CERTIFICATENUMBER}),CertificateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CertificateDataTable = CType(MyBase.Clone,CertificateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CertificateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnEXTENSION_EN = MyBase.Columns("EXTENSION_EN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnEXTENSION_EN = New Global.System.Data.DataColumn("EXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION_EN)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCERTIFICATENUMBER}, true))
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCertificateRow() As CertificateRow
            Return CType(Me.NewRow,CertificateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CertificateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CertificateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CertificateRowChangedEvent) Is Nothing) Then
                RaiseEvent CertificateRowChanged(Me, New CertificateRowChangeEvent(CType(e.Row,CertificateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CertificateRowChangingEvent) Is Nothing) Then
                RaiseEvent CertificateRowChanging(Me, New CertificateRowChangeEvent(CType(e.Row,CertificateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CertificateRowDeletedEvent) Is Nothing) Then
                RaiseEvent CertificateRowDeleted(Me, New CertificateRowChangeEvent(CType(e.Row,CertificateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CertificateRowDeletingEvent) Is Nothing) Then
                RaiseEvent CertificateRowDeleting(Me, New CertificateRowChangeEvent(CType(e.Row,CertificateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCertificateRow(ByVal row As CertificateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CertificateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MeasureHdrDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnProjectNum As Global.System.Data.DataColumn
        
        Private columnTireNum As Global.System.Data.DataColumn
        
        Private columnTestSpec As Global.System.Data.DataColumn
        
        Private columnCompletionDate As Global.System.Data.DataColumn
        
        Private columnInflationPressure As Global.System.Data.DataColumn
        
        Private columnMoldDesign As Global.System.Data.DataColumn
        
        Private columnRimWidth As Global.System.Data.DataColumn
        
        Private columnDOTSerialNumber As Global.System.Data.DataColumn
        
        Private columnSerialDate As Global.System.Data.DataColumn
        
        Private columnDiameter As Global.System.Data.DataColumn
        
        Private columnAvgSectionWidth As Global.System.Data.DataColumn
        
        Private columnAvgOverallWidth As Global.System.Data.DataColumn
        
        Private columnMaxOverallWidth As Global.System.Data.DataColumn
        
        Private columnMinSizeFactor As Global.System.Data.DataColumn
        
        Private columnMountTime As Global.System.Data.DataColumn
        
        Private columnMountTemp As Global.System.Data.DataColumn
        
        Private columnEndTime As Global.System.Data.DataColumn
        
        Private columnMEA_ID As Global.System.Data.DataColumn
        
        Private columnActSizeFactor As Global.System.Data.DataColumn
        
        Private columnSTARTINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnENDINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnADJUSTMENT As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCE As Global.System.Data.DataColumn
        
        Private columnNOMINALDIAMETER As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTH As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTHPASSFAIL As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTHDIFERENCE As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTHTOLERANCE As Global.System.Data.DataColumn
        
        Private columnMAXOVERALLDIAMETER As Global.System.Data.DataColumn
        
        Private columnMINOVERALLDIAMETER As Global.System.Data.DataColumn
        
        Private columnOVERALLWIDTHPASSFAIL As Global.System.Data.DataColumn
        
        Private columnOVERALLDIAMETERPASSFAIL As Global.System.Data.DataColumn
        
        Private columnDIAMETERDIFERENCE As Global.System.Data.DataColumn
        
        Private columnDIAMETERTOLERANCE As Global.System.Data.DataColumn
        
        Private columnTEMPRESISTANCEGRADING As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHT1 As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHT2 As Global.System.Data.DataColumn
        
        Private columnELONGATION1 As Global.System.Data.DataColumn
        
        Private columnELONGATION2 As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHTAFTERAGE1 As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHTAFTERAGE2 As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnEXTENSION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MeasureHdr"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProjectNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TireNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTireNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestSpecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestSpec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompletionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompletionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InflationPressureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInflationPressure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MoldDesignColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMoldDesign
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RimWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRimWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSerialNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSerialNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SerialDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerialDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiameterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiameter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AvgSectionWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAvgSectionWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AvgOverallWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAvgOverallWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MaxOverallWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxOverallWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MinSizeFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinSizeFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MountTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMountTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MountTempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMountTemp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EndTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEA_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEA_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActSizeFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActSizeFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STARTINFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTARTINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDINFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADJUSTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUSTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTHPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTHDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHTOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTHTOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXOVERALLDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXOVERALLDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MINOVERALLDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINOVERALLDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OVERALLWIDTHPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVERALLWIDTHPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OVERALLDIAMETERPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVERALLDIAMETERPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERTOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERTOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TEMPRESISTANCEGRADINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEMPRESISTANCEGRADING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELONGATION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnELONGATION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELONGATION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnELONGATION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHTAFTERAGE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHTAFTERAGE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHTAFTERAGE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHTAFTERAGE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MeasureHdrRow
            Get
                Return CType(Me.Rows(index),MeasureHdrRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MeasureHdrRowChanging As MeasureHdrRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MeasureHdrRowChanged As MeasureHdrRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MeasureHdrRowDeleting As MeasureHdrRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MeasureHdrRowDeleted As MeasureHdrRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMeasureHdrRow(ByVal row As MeasureHdrRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMeasureHdrRow( _
                    ByVal ProjectNum As String,  _
                    ByVal TireNum As Short,  _
                    ByVal TestSpec As String,  _
                    ByVal CompletionDate As String,  _
                    ByVal InflationPressure As Short,  _
                    ByVal MoldDesign As String,  _
                    ByVal RimWidth As Single,  _
                    ByVal DOTSerialNumber As String,  _
                    ByVal SerialDate As String,  _
                    ByVal Diameter As Single,  _
                    ByVal AvgSectionWidth As Single,  _
                    ByVal AvgOverallWidth As Single,  _
                    ByVal MaxOverallWidth As Single,  _
                    ByVal MinSizeFactor As Single,  _
                    ByVal MountTime As String,  _
                    ByVal MountTemp As Short,  _
                    ByVal EndTime As String,  _
                    ByVal MEA_ID As Short,  _
                    ByVal ActSizeFactor As Single,  _
                    ByVal STARTINFLATIONPRESSURE As Decimal,  _
                    ByVal ENDINFLATIONPRESSURE As Decimal,  _
                    ByVal ADJUSTMENT As String,  _
                    ByVal CIRCUNFERENCE As Decimal,  _
                    ByVal NOMINALDIAMETER As Decimal,  _
                    ByVal NOMINALWIDTH As Decimal,  _
                    ByVal NOMINALWIDTHPASSFAIL As String,  _
                    ByVal NOMINALWIDTHDIFERENCE As Decimal,  _
                    ByVal NOMINALWIDTHTOLERANCE As Decimal,  _
                    ByVal MAXOVERALLDIAMETER As Decimal,  _
                    ByVal MINOVERALLDIAMETER As Decimal,  _
                    ByVal OVERALLWIDTHPASSFAIL As String,  _
                    ByVal OVERALLDIAMETERPASSFAIL As String,  _
                    ByVal DIAMETERDIFERENCE As Decimal,  _
                    ByVal DIAMETERTOLERANCE As Decimal,  _
                    ByVal TEMPRESISTANCEGRADING As Decimal,  _
                    ByVal TENSILESTRENGHT1 As Decimal,  _
                    ByVal TENSILESTRENGHT2 As Decimal,  _
                    ByVal ELONGATION1 As Decimal,  _
                    ByVal ELONGATION2 As Decimal,  _
                    ByVal TENSILESTRENGHTAFTERAGE1 As Decimal,  _
                    ByVal TENSILESTRENGHTAFTERAGE2 As Decimal,  _
                    ByVal parentCertificateRowByCertificate_MeasureHdr As CertificateRow,  _
                    ByVal EXTENSION As String) As MeasureHdrRow
            Dim rowMeasureHdrRow As MeasureHdrRow = CType(Me.NewRow,MeasureHdrRow)
            Dim columnValuesArray() As Object = New Object() {ProjectNum, TireNum, TestSpec, CompletionDate, InflationPressure, MoldDesign, RimWidth, DOTSerialNumber, SerialDate, Diameter, AvgSectionWidth, AvgOverallWidth, MaxOverallWidth, MinSizeFactor, MountTime, MountTemp, EndTime, MEA_ID, ActSizeFactor, STARTINFLATIONPRESSURE, ENDINFLATIONPRESSURE, ADJUSTMENT, CIRCUNFERENCE, NOMINALDIAMETER, NOMINALWIDTH, NOMINALWIDTHPASSFAIL, NOMINALWIDTHDIFERENCE, NOMINALWIDTHTOLERANCE, MAXOVERALLDIAMETER, MINOVERALLDIAMETER, OVERALLWIDTHPASSFAIL, OVERALLDIAMETERPASSFAIL, DIAMETERDIFERENCE, DIAMETERTOLERANCE, TEMPRESISTANCEGRADING, TENSILESTRENGHT1, TENSILESTRENGHT2, ELONGATION1, ELONGATION2, TENSILESTRENGHTAFTERAGE1, TENSILESTRENGHTAFTERAGE2, Nothing, EXTENSION}
            If (Not (parentCertificateRowByCertificate_MeasureHdr) Is Nothing) Then
                columnValuesArray(41) = parentCertificateRowByCertificate_MeasureHdr(0)
            End If
            rowMeasureHdrRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMeasureHdrRow)
            Return rowMeasureHdrRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MeasureHdrDataTable = CType(MyBase.Clone,MeasureHdrDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MeasureHdrDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProjectNum = MyBase.Columns("ProjectNum")
            Me.columnTireNum = MyBase.Columns("TireNum")
            Me.columnTestSpec = MyBase.Columns("TestSpec")
            Me.columnCompletionDate = MyBase.Columns("CompletionDate")
            Me.columnInflationPressure = MyBase.Columns("InflationPressure")
            Me.columnMoldDesign = MyBase.Columns("MoldDesign")
            Me.columnRimWidth = MyBase.Columns("RimWidth")
            Me.columnDOTSerialNumber = MyBase.Columns("DOTSerialNumber")
            Me.columnSerialDate = MyBase.Columns("SerialDate")
            Me.columnDiameter = MyBase.Columns("Diameter")
            Me.columnAvgSectionWidth = MyBase.Columns("AvgSectionWidth")
            Me.columnAvgOverallWidth = MyBase.Columns("AvgOverallWidth")
            Me.columnMaxOverallWidth = MyBase.Columns("MaxOverallWidth")
            Me.columnMinSizeFactor = MyBase.Columns("MinSizeFactor")
            Me.columnMountTime = MyBase.Columns("MountTime")
            Me.columnMountTemp = MyBase.Columns("MountTemp")
            Me.columnEndTime = MyBase.Columns("EndTime")
            Me.columnMEA_ID = MyBase.Columns("MEA_ID")
            Me.columnActSizeFactor = MyBase.Columns("ActSizeFactor")
            Me.columnSTARTINFLATIONPRESSURE = MyBase.Columns("STARTINFLATIONPRESSURE")
            Me.columnENDINFLATIONPRESSURE = MyBase.Columns("ENDINFLATIONPRESSURE")
            Me.columnADJUSTMENT = MyBase.Columns("ADJUSTMENT")
            Me.columnCIRCUNFERENCE = MyBase.Columns("CIRCUNFERENCE")
            Me.columnNOMINALDIAMETER = MyBase.Columns("NOMINALDIAMETER")
            Me.columnNOMINALWIDTH = MyBase.Columns("NOMINALWIDTH")
            Me.columnNOMINALWIDTHPASSFAIL = MyBase.Columns("NOMINALWIDTHPASSFAIL")
            Me.columnNOMINALWIDTHDIFERENCE = MyBase.Columns("NOMINALWIDTHDIFERENCE")
            Me.columnNOMINALWIDTHTOLERANCE = MyBase.Columns("NOMINALWIDTHTOLERANCE")
            Me.columnMAXOVERALLDIAMETER = MyBase.Columns("MAXOVERALLDIAMETER")
            Me.columnMINOVERALLDIAMETER = MyBase.Columns("MINOVERALLDIAMETER")
            Me.columnOVERALLWIDTHPASSFAIL = MyBase.Columns("OVERALLWIDTHPASSFAIL")
            Me.columnOVERALLDIAMETERPASSFAIL = MyBase.Columns("OVERALLDIAMETERPASSFAIL")
            Me.columnDIAMETERDIFERENCE = MyBase.Columns("DIAMETERDIFERENCE")
            Me.columnDIAMETERTOLERANCE = MyBase.Columns("DIAMETERTOLERANCE")
            Me.columnTEMPRESISTANCEGRADING = MyBase.Columns("TEMPRESISTANCEGRADING")
            Me.columnTENSILESTRENGHT1 = MyBase.Columns("TENSILESTRENGHT1")
            Me.columnTENSILESTRENGHT2 = MyBase.Columns("TENSILESTRENGHT2")
            Me.columnELONGATION1 = MyBase.Columns("ELONGATION1")
            Me.columnELONGATION2 = MyBase.Columns("ELONGATION2")
            Me.columnTENSILESTRENGHTAFTERAGE1 = MyBase.Columns("TENSILESTRENGHTAFTERAGE1")
            Me.columnTENSILESTRENGHTAFTERAGE2 = MyBase.Columns("TENSILESTRENGHTAFTERAGE2")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnEXTENSION = MyBase.Columns("EXTENSION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProjectNum = New Global.System.Data.DataColumn("ProjectNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectNum)
            Me.columnTireNum = New Global.System.Data.DataColumn("TireNum", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTireNum)
            Me.columnTestSpec = New Global.System.Data.DataColumn("TestSpec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestSpec)
            Me.columnCompletionDate = New Global.System.Data.DataColumn("CompletionDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompletionDate)
            Me.columnInflationPressure = New Global.System.Data.DataColumn("InflationPressure", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInflationPressure)
            Me.columnMoldDesign = New Global.System.Data.DataColumn("MoldDesign", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMoldDesign)
            Me.columnRimWidth = New Global.System.Data.DataColumn("RimWidth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRimWidth)
            Me.columnDOTSerialNumber = New Global.System.Data.DataColumn("DOTSerialNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSerialNumber)
            Me.columnSerialDate = New Global.System.Data.DataColumn("SerialDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerialDate)
            Me.columnDiameter = New Global.System.Data.DataColumn("Diameter", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiameter)
            Me.columnAvgSectionWidth = New Global.System.Data.DataColumn("AvgSectionWidth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAvgSectionWidth)
            Me.columnAvgOverallWidth = New Global.System.Data.DataColumn("AvgOverallWidth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAvgOverallWidth)
            Me.columnMaxOverallWidth = New Global.System.Data.DataColumn("MaxOverallWidth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxOverallWidth)
            Me.columnMinSizeFactor = New Global.System.Data.DataColumn("MinSizeFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinSizeFactor)
            Me.columnMountTime = New Global.System.Data.DataColumn("MountTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMountTime)
            Me.columnMountTemp = New Global.System.Data.DataColumn("MountTemp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMountTemp)
            Me.columnEndTime = New Global.System.Data.DataColumn("EndTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndTime)
            Me.columnMEA_ID = New Global.System.Data.DataColumn("MEA_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEA_ID)
            Me.columnActSizeFactor = New Global.System.Data.DataColumn("ActSizeFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActSizeFactor)
            Me.columnSTARTINFLATIONPRESSURE = New Global.System.Data.DataColumn("STARTINFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTARTINFLATIONPRESSURE)
            Me.columnENDINFLATIONPRESSURE = New Global.System.Data.DataColumn("ENDINFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDINFLATIONPRESSURE)
            Me.columnADJUSTMENT = New Global.System.Data.DataColumn("ADJUSTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUSTMENT)
            Me.columnCIRCUNFERENCE = New Global.System.Data.DataColumn("CIRCUNFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCE)
            Me.columnNOMINALDIAMETER = New Global.System.Data.DataColumn("NOMINALDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALDIAMETER)
            Me.columnNOMINALWIDTH = New Global.System.Data.DataColumn("NOMINALWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTH)
            Me.columnNOMINALWIDTHPASSFAIL = New Global.System.Data.DataColumn("NOMINALWIDTHPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTHPASSFAIL)
            Me.columnNOMINALWIDTHDIFERENCE = New Global.System.Data.DataColumn("NOMINALWIDTHDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTHDIFERENCE)
            Me.columnNOMINALWIDTHTOLERANCE = New Global.System.Data.DataColumn("NOMINALWIDTHTOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTHTOLERANCE)
            Me.columnMAXOVERALLDIAMETER = New Global.System.Data.DataColumn("MAXOVERALLDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXOVERALLDIAMETER)
            Me.columnMINOVERALLDIAMETER = New Global.System.Data.DataColumn("MINOVERALLDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINOVERALLDIAMETER)
            Me.columnOVERALLWIDTHPASSFAIL = New Global.System.Data.DataColumn("OVERALLWIDTHPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVERALLWIDTHPASSFAIL)
            Me.columnOVERALLDIAMETERPASSFAIL = New Global.System.Data.DataColumn("OVERALLDIAMETERPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVERALLDIAMETERPASSFAIL)
            Me.columnDIAMETERDIFERENCE = New Global.System.Data.DataColumn("DIAMETERDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERDIFERENCE)
            Me.columnDIAMETERTOLERANCE = New Global.System.Data.DataColumn("DIAMETERTOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERTOLERANCE)
            Me.columnTEMPRESISTANCEGRADING = New Global.System.Data.DataColumn("TEMPRESISTANCEGRADING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEMPRESISTANCEGRADING)
            Me.columnTENSILESTRENGHT1 = New Global.System.Data.DataColumn("TENSILESTRENGHT1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHT1)
            Me.columnTENSILESTRENGHT2 = New Global.System.Data.DataColumn("TENSILESTRENGHT2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHT2)
            Me.columnELONGATION1 = New Global.System.Data.DataColumn("ELONGATION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELONGATION1)
            Me.columnELONGATION2 = New Global.System.Data.DataColumn("ELONGATION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELONGATION2)
            Me.columnTENSILESTRENGHTAFTERAGE1 = New Global.System.Data.DataColumn("TENSILESTRENGHTAFTERAGE1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHTAFTERAGE1)
            Me.columnTENSILESTRENGHTAFTERAGE2 = New Global.System.Data.DataColumn("TENSILESTRENGHTAFTERAGE2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHTAFTERAGE2)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnEXTENSION = New Global.System.Data.DataColumn("EXTENSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION)
            Me.columnProjectNum.MaxLength = 6
            Me.columnTireNum.DefaultValue = CType(0,Short)
            Me.columnTestSpec.MaxLength = 7
            Me.columnMoldDesign.MaxLength = 5
            Me.columnDOTSerialNumber.MaxLength = 15
            Me.columnADJUSTMENT.MaxLength = 50
            Me.columnNOMINALWIDTHPASSFAIL.MaxLength = 1
            Me.columnOVERALLWIDTHPASSFAIL.MaxLength = 1
            Me.columnOVERALLDIAMETERPASSFAIL.MaxLength = 1
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnEXTENSION.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMeasureHdrRow() As MeasureHdrRow
            Return CType(Me.NewRow,MeasureHdrRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MeasureHdrRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MeasureHdrRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MeasureHdrRowChangedEvent) Is Nothing) Then
                RaiseEvent MeasureHdrRowChanged(Me, New MeasureHdrRowChangeEvent(CType(e.Row,MeasureHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MeasureHdrRowChangingEvent) Is Nothing) Then
                RaiseEvent MeasureHdrRowChanging(Me, New MeasureHdrRowChangeEvent(CType(e.Row,MeasureHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MeasureHdrRowDeletedEvent) Is Nothing) Then
                RaiseEvent MeasureHdrRowDeleted(Me, New MeasureHdrRowChangeEvent(CType(e.Row,MeasureHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MeasureHdrRowDeletingEvent) Is Nothing) Then
                RaiseEvent MeasureHdrRowDeleting(Me, New MeasureHdrRowChangeEvent(CType(e.Row,MeasureHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMeasureHdrRow(ByVal row As MeasureHdrRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MeasureHdrDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MeasureDtlDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnMEA_ID As Global.System.Data.DataColumn
        
        Private columnIteration As Global.System.Data.DataColumn
        
        Private columnSectionWidth As Global.System.Data.DataColumn
        
        Private columnOverallWidth As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MeasureDtl"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEA_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEA_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IterationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIteration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SectionWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectionWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OverallWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverallWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MeasureDtlRow
            Get
                Return CType(Me.Rows(index),MeasureDtlRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MeasureDtlRowChanging As MeasureDtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MeasureDtlRowChanged As MeasureDtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MeasureDtlRowDeleting As MeasureDtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MeasureDtlRowDeleted As MeasureDtlRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMeasureDtlRow(ByVal row As MeasureDtlRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMeasureDtlRow(ByVal parentMeasureHdrRowByMeasureHdr_MeasureDtl As MeasureHdrRow, ByVal Iteration As Short, ByVal SectionWidth As Single, ByVal OverallWidth As Single) As MeasureDtlRow
            Dim rowMeasureDtlRow As MeasureDtlRow = CType(Me.NewRow,MeasureDtlRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Iteration, SectionWidth, OverallWidth}
            If (Not (parentMeasureHdrRowByMeasureHdr_MeasureDtl) Is Nothing) Then
                columnValuesArray(0) = parentMeasureHdrRowByMeasureHdr_MeasureDtl(17)
            End If
            rowMeasureDtlRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMeasureDtlRow)
            Return rowMeasureDtlRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MeasureDtlDataTable = CType(MyBase.Clone,MeasureDtlDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MeasureDtlDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMEA_ID = MyBase.Columns("MEA_ID")
            Me.columnIteration = MyBase.Columns("Iteration")
            Me.columnSectionWidth = MyBase.Columns("SectionWidth")
            Me.columnOverallWidth = MyBase.Columns("OverallWidth")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMEA_ID = New Global.System.Data.DataColumn("MEA_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEA_ID)
            Me.columnIteration = New Global.System.Data.DataColumn("Iteration", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIteration)
            Me.columnSectionWidth = New Global.System.Data.DataColumn("SectionWidth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectionWidth)
            Me.columnOverallWidth = New Global.System.Data.DataColumn("OverallWidth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverallWidth)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMeasureDtlRow() As MeasureDtlRow
            Return CType(Me.NewRow,MeasureDtlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MeasureDtlRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MeasureDtlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MeasureDtlRowChangedEvent) Is Nothing) Then
                RaiseEvent MeasureDtlRowChanged(Me, New MeasureDtlRowChangeEvent(CType(e.Row,MeasureDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MeasureDtlRowChangingEvent) Is Nothing) Then
                RaiseEvent MeasureDtlRowChanging(Me, New MeasureDtlRowChangeEvent(CType(e.Row,MeasureDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MeasureDtlRowDeletedEvent) Is Nothing) Then
                RaiseEvent MeasureDtlRowDeleted(Me, New MeasureDtlRowChangeEvent(CType(e.Row,MeasureDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MeasureDtlRowDeletingEvent) Is Nothing) Then
                RaiseEvent MeasureDtlRowDeleting(Me, New MeasureDtlRowChangeEvent(CType(e.Row,MeasureDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMeasureDtlRow(ByVal row As MeasureDtlRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MeasureDtlDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TreadWearHdrDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnProjectNum As Global.System.Data.DataColumn
        
        Private columnTireNum As Global.System.Data.DataColumn
        
        Private columnTestSpec As Global.System.Data.DataColumn
        
        Private columnCompletionDate As Global.System.Data.DataColumn
        
        Private columnDOTSerialNumber As Global.System.Data.DataColumn
        
        Private columnSerialDate As Global.System.Data.DataColumn
        
        Private columnLowestWearbar As Global.System.Data.DataColumn
        
        Private columnPassYN As Global.System.Data.DataColumn
        
        Private columnTW_ID As Global.System.Data.DataColumn
        
        Private columnINDICATORSREQUIREMENT As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnEXTENSION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TreadWearHdr"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProjectNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TireNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTireNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestSpecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestSpec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompletionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompletionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSerialNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSerialNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SerialDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerialDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LowestWearbarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLowestWearbar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PassYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TW_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTW_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDICATORSREQUIREMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICATORSREQUIREMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TreadWearHdrRow
            Get
                Return CType(Me.Rows(index),TreadWearHdrRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TreadWearHdrRowChanging As TreadWearHdrRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TreadWearHdrRowChanged As TreadWearHdrRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TreadWearHdrRowDeleting As TreadWearHdrRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TreadWearHdrRowDeleted As TreadWearHdrRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTreadWearHdrRow(ByVal row As TreadWearHdrRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTreadWearHdrRow(ByVal ProjectNum As String, ByVal TireNum As Short, ByVal TestSpec As String, ByVal CompletionDate As String, ByVal DOTSerialNumber As String, ByVal SerialDate As String, ByVal LowestWearbar As Single, ByVal PassYN As String, ByVal TW_ID As Short, ByVal INDICATORSREQUIREMENT As Decimal, ByVal parentCertificateRowByCertificate_TreadWearHdr As CertificateRow, ByVal EXTENSION As String) As TreadWearHdrRow
            Dim rowTreadWearHdrRow As TreadWearHdrRow = CType(Me.NewRow,TreadWearHdrRow)
            Dim columnValuesArray() As Object = New Object() {ProjectNum, TireNum, TestSpec, CompletionDate, DOTSerialNumber, SerialDate, LowestWearbar, PassYN, TW_ID, INDICATORSREQUIREMENT, Nothing, EXTENSION}
            If (Not (parentCertificateRowByCertificate_TreadWearHdr) Is Nothing) Then
                columnValuesArray(10) = parentCertificateRowByCertificate_TreadWearHdr(0)
            End If
            rowTreadWearHdrRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTreadWearHdrRow)
            Return rowTreadWearHdrRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TreadWearHdrDataTable = CType(MyBase.Clone,TreadWearHdrDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TreadWearHdrDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProjectNum = MyBase.Columns("ProjectNum")
            Me.columnTireNum = MyBase.Columns("TireNum")
            Me.columnTestSpec = MyBase.Columns("TestSpec")
            Me.columnCompletionDate = MyBase.Columns("CompletionDate")
            Me.columnDOTSerialNumber = MyBase.Columns("DOTSerialNumber")
            Me.columnSerialDate = MyBase.Columns("SerialDate")
            Me.columnLowestWearbar = MyBase.Columns("LowestWearbar")
            Me.columnPassYN = MyBase.Columns("PassYN")
            Me.columnTW_ID = MyBase.Columns("TW_ID")
            Me.columnINDICATORSREQUIREMENT = MyBase.Columns("INDICATORSREQUIREMENT")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnEXTENSION = MyBase.Columns("EXTENSION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProjectNum = New Global.System.Data.DataColumn("ProjectNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectNum)
            Me.columnTireNum = New Global.System.Data.DataColumn("TireNum", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTireNum)
            Me.columnTestSpec = New Global.System.Data.DataColumn("TestSpec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestSpec)
            Me.columnCompletionDate = New Global.System.Data.DataColumn("CompletionDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompletionDate)
            Me.columnDOTSerialNumber = New Global.System.Data.DataColumn("DOTSerialNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSerialNumber)
            Me.columnSerialDate = New Global.System.Data.DataColumn("SerialDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerialDate)
            Me.columnLowestWearbar = New Global.System.Data.DataColumn("LowestWearbar", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLowestWearbar)
            Me.columnPassYN = New Global.System.Data.DataColumn("PassYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassYN)
            Me.columnTW_ID = New Global.System.Data.DataColumn("TW_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTW_ID)
            Me.columnINDICATORSREQUIREMENT = New Global.System.Data.DataColumn("INDICATORSREQUIREMENT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICATORSREQUIREMENT)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnEXTENSION = New Global.System.Data.DataColumn("EXTENSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION)
            Me.columnProjectNum.MaxLength = 6
            Me.columnTestSpec.MaxLength = 7
            Me.columnDOTSerialNumber.MaxLength = 15
            Me.columnPassYN.MaxLength = 1
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnEXTENSION.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTreadWearHdrRow() As TreadWearHdrRow
            Return CType(Me.NewRow,TreadWearHdrRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TreadWearHdrRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TreadWearHdrRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TreadWearHdrRowChangedEvent) Is Nothing) Then
                RaiseEvent TreadWearHdrRowChanged(Me, New TreadWearHdrRowChangeEvent(CType(e.Row,TreadWearHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TreadWearHdrRowChangingEvent) Is Nothing) Then
                RaiseEvent TreadWearHdrRowChanging(Me, New TreadWearHdrRowChangeEvent(CType(e.Row,TreadWearHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TreadWearHdrRowDeletedEvent) Is Nothing) Then
                RaiseEvent TreadWearHdrRowDeleted(Me, New TreadWearHdrRowChangeEvent(CType(e.Row,TreadWearHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TreadWearHdrRowDeletingEvent) Is Nothing) Then
                RaiseEvent TreadWearHdrRowDeleting(Me, New TreadWearHdrRowChangeEvent(CType(e.Row,TreadWearHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTreadWearHdrRow(ByVal row As TreadWearHdrRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TreadWearHdrDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TreadWearDtlDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTW_ID As Global.System.Data.DataColumn
        
        Private columnIteration As Global.System.Data.DataColumn
        
        Private columnWearbarHeight As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TreadWearDtl"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TW_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTW_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IterationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIteration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WearbarHeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWearbarHeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TreadWearDtlRow
            Get
                Return CType(Me.Rows(index),TreadWearDtlRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TreadWearDtlRowChanging As TreadWearDtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TreadWearDtlRowChanged As TreadWearDtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TreadWearDtlRowDeleting As TreadWearDtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TreadWearDtlRowDeleted As TreadWearDtlRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTreadWearDtlRow(ByVal row As TreadWearDtlRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTreadWearDtlRow(ByVal parentTreadWearHdrRowByTreadWearHdr_TreadWearDtl As TreadWearHdrRow, ByVal Iteration As Short, ByVal WearbarHeight As Single) As TreadWearDtlRow
            Dim rowTreadWearDtlRow As TreadWearDtlRow = CType(Me.NewRow,TreadWearDtlRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Iteration, WearbarHeight}
            If (Not (parentTreadWearHdrRowByTreadWearHdr_TreadWearDtl) Is Nothing) Then
                columnValuesArray(0) = parentTreadWearHdrRowByTreadWearHdr_TreadWearDtl(8)
            End If
            rowTreadWearDtlRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTreadWearDtlRow)
            Return rowTreadWearDtlRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TreadWearDtlDataTable = CType(MyBase.Clone,TreadWearDtlDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TreadWearDtlDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTW_ID = MyBase.Columns("TW_ID")
            Me.columnIteration = MyBase.Columns("Iteration")
            Me.columnWearbarHeight = MyBase.Columns("WearbarHeight")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTW_ID = New Global.System.Data.DataColumn("TW_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTW_ID)
            Me.columnIteration = New Global.System.Data.DataColumn("Iteration", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIteration)
            Me.columnWearbarHeight = New Global.System.Data.DataColumn("WearbarHeight", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWearbarHeight)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTreadWearDtlRow() As TreadWearDtlRow
            Return CType(Me.NewRow,TreadWearDtlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TreadWearDtlRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TreadWearDtlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TreadWearDtlRowChangedEvent) Is Nothing) Then
                RaiseEvent TreadWearDtlRowChanged(Me, New TreadWearDtlRowChangeEvent(CType(e.Row,TreadWearDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TreadWearDtlRowChangingEvent) Is Nothing) Then
                RaiseEvent TreadWearDtlRowChanging(Me, New TreadWearDtlRowChangeEvent(CType(e.Row,TreadWearDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TreadWearDtlRowDeletedEvent) Is Nothing) Then
                RaiseEvent TreadWearDtlRowDeleted(Me, New TreadWearDtlRowChangeEvent(CType(e.Row,TreadWearDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TreadWearDtlRowDeletingEvent) Is Nothing) Then
                RaiseEvent TreadWearDtlRowDeleting(Me, New TreadWearDtlRowChangeEvent(CType(e.Row,TreadWearDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTreadWearDtlRow(ByVal row As TreadWearDtlRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TreadWearDtlDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HighSpeedHdrDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnProjectNum As Global.System.Data.DataColumn
        
        Private columnTireNum As Global.System.Data.DataColumn
        
        Private columnTestSpec As Global.System.Data.DataColumn
        
        Private columnCompletionDate As Global.System.Data.DataColumn
        
        Private columnDOTSerialNumber As Global.System.Data.DataColumn
        
        Private columnSerialDate As Global.System.Data.DataColumn
        
        Private columnPreCondStartDate As Global.System.Data.DataColumn
        
        Private columnPreCondSartTemp As Global.System.Data.DataColumn
        
        Private columnRimDiameter As Global.System.Data.DataColumn
        
        Private columnRimWidth As Global.System.Data.DataColumn
        
        Private columnPreCondEndDate As Global.System.Data.DataColumn
        
        Private columnPreCondEndTemp As Global.System.Data.DataColumn
        
        Private columnPreCondTime As Global.System.Data.DataColumn
        
        Private columnInflationPressure As Global.System.Data.DataColumn
        
        Private columnBeforeDiameter As Global.System.Data.DataColumn
        
        Private columnAfterDiameter As Global.System.Data.DataColumn
        
        Private columnBeforeInflation As Global.System.Data.DataColumn
        
        Private columnAfterInflation As Global.System.Data.DataColumn
        
        Private columnWheelPosition As Global.System.Data.DataColumn
        
        Private columnWheelNum As Global.System.Data.DataColumn
        
        Private columnFinalTemp As Global.System.Data.DataColumn
        
        Private columnFinalDistance As Global.System.Data.DataColumn
        
        Private columnFinalInflation As Global.System.Data.DataColumn
        
        Private columnPostCondStartDate As Global.System.Data.DataColumn
        
        Private columnPostCondEndDate As Global.System.Data.DataColumn
        
        Private columnPostCondTime As Global.System.Data.DataColumn
        
        Private columnPostCondEndTemp As Global.System.Data.DataColumn
        
        Private columnPassYN As Global.System.Data.DataColumn
        
        Private columnHS_ID As Global.System.Data.DataColumn
        
        Private columnDIAMETERTESTDRUM As Global.System.Data.DataColumn
        
        Private columnPRECONDTEMP As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSUREREADJUSTED As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEBEFORETEST As Global.System.Data.DataColumn
        
        Private columnWHEELSPEEDRPM As Global.System.Data.DataColumn
        
        Private columnWHEELSPEEDKMH As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEAFTERTEST As Global.System.Data.DataColumn
        
        Private columnODDIFERENCE As Global.System.Data.DataColumn
        
        Private columnODDIFERENCETOLERANCE As Global.System.Data.DataColumn
        
        Private columnSERIENOM As Global.System.Data.DataColumn
        
        Private columnFINALJUDGEMENT As Global.System.Data.DataColumn
        
        Private columnAPPROVER As Global.System.Data.DataColumn
        
        Private columnPASSATKMH As Global.System.Data.DataColumn
        
        Private columnSPEEDTTESTPASSFAIL As Global.System.Data.DataColumn
        
        Private columnSPEEDTOTALTIME As Global.System.Data.DataColumn
        
        Private columnMAXSPEED As Global.System.Data.DataColumn
        
        Private columnMAXLOAD As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnEXTENSION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HighSpeedHdr"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProjectNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TireNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTireNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestSpecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestSpec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompletionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompletionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSerialNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSerialNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SerialDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerialDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreCondStartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreCondStartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreCondSartTempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreCondSartTemp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RimDiameterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRimDiameter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RimWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRimWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreCondEndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreCondEndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreCondEndTempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreCondEndTemp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreCondTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreCondTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InflationPressureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInflationPressure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BeforeDiameterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeforeDiameter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AfterDiameterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAfterDiameter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BeforeInflationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeforeInflation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AfterInflationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAfterInflation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WheelPositionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWheelPosition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WheelNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWheelNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FinalTempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinalTemp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FinalDistanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinalDistance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FinalInflationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinalInflation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PostCondStartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPostCondStartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PostCondEndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPostCondEndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PostCondTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPostCondTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PostCondEndTempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPostCondEndTemp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PassYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERTESTDRUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERTESTDRUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREREADJUSTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSUREREADJUSTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEBEFORETESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEBEFORETEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELSPEEDRPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELSPEEDRPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELSPEEDKMHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELSPEEDKMH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEAFTERTESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEAFTERTEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODDIFERENCETOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDIFERENCETOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIENOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIENOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALJUDGEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALJUDGEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSATKMHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSATKMH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDTTESTPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDTTESTPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDTOTALTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDTOTALTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXSPEEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXSPEED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXLOADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXLOAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HighSpeedHdrRow
            Get
                Return CType(Me.Rows(index),HighSpeedHdrRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HighSpeedHdrRowChanging As HighSpeedHdrRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HighSpeedHdrRowChanged As HighSpeedHdrRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HighSpeedHdrRowDeleting As HighSpeedHdrRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HighSpeedHdrRowDeleted As HighSpeedHdrRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHighSpeedHdrRow(ByVal row As HighSpeedHdrRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHighSpeedHdrRow( _
                    ByVal ProjectNum As String,  _
                    ByVal TireNum As Short,  _
                    ByVal TestSpec As String,  _
                    ByVal CompletionDate As String,  _
                    ByVal DOTSerialNumber As String,  _
                    ByVal SerialDate As String,  _
                    ByVal PreCondStartDate As String,  _
                    ByVal PreCondSartTemp As Short,  _
                    ByVal RimDiameter As Single,  _
                    ByVal RimWidth As Single,  _
                    ByVal PreCondEndDate As String,  _
                    ByVal PreCondEndTemp As Short,  _
                    ByVal PreCondTime As Single,  _
                    ByVal InflationPressure As Short,  _
                    ByVal BeforeDiameter As Single,  _
                    ByVal AfterDiameter As Single,  _
                    ByVal BeforeInflation As Short,  _
                    ByVal AfterInflation As Short,  _
                    ByVal WheelPosition As Short,  _
                    ByVal WheelNum As Short,  _
                    ByVal FinalTemp As Short,  _
                    ByVal FinalDistance As Single,  _
                    ByVal FinalInflation As Short,  _
                    ByVal PostCondStartDate As String,  _
                    ByVal PostCondEndDate As String,  _
                    ByVal PostCondTime As Single,  _
                    ByVal PostCondEndTemp As Short,  _
                    ByVal PassYN As String,  _
                    ByVal HS_ID As Short,  _
                    ByVal DIAMETERTESTDRUM As Decimal,  _
                    ByVal PRECONDTEMP As Decimal,  _
                    ByVal INFLATIONPRESSUREREADJUSTED As Decimal,  _
                    ByVal CIRCUNFERENCEBEFORETEST As Decimal,  _
                    ByVal WHEELSPEEDRPM As Decimal,  _
                    ByVal WHEELSPEEDKMH As Decimal,  _
                    ByVal CIRCUNFERENCEAFTERTEST As Decimal,  _
                    ByVal ODDIFERENCE As Decimal,  _
                    ByVal ODDIFERENCETOLERANCE As Decimal,  _
                    ByVal SERIENOM As String,  _
                    ByVal FINALJUDGEMENT As String,  _
                    ByVal APPROVER As String,  _
                    ByVal PASSATKMH As Decimal,  _
                    ByVal SPEEDTTESTPASSFAIL As String,  _
                    ByVal SPEEDTOTALTIME As Decimal,  _
                    ByVal MAXSPEED As Decimal,  _
                    ByVal MAXLOAD As Decimal,  _
                    ByVal parentCertificateRowByCertificate_HighSpeedHdr As CertificateRow,  _
                    ByVal EXTENSION As String) As HighSpeedHdrRow
            Dim rowHighSpeedHdrRow As HighSpeedHdrRow = CType(Me.NewRow,HighSpeedHdrRow)
            Dim columnValuesArray() As Object = New Object() {ProjectNum, TireNum, TestSpec, CompletionDate, DOTSerialNumber, SerialDate, PreCondStartDate, PreCondSartTemp, RimDiameter, RimWidth, PreCondEndDate, PreCondEndTemp, PreCondTime, InflationPressure, BeforeDiameter, AfterDiameter, BeforeInflation, AfterInflation, WheelPosition, WheelNum, FinalTemp, FinalDistance, FinalInflation, PostCondStartDate, PostCondEndDate, PostCondTime, PostCondEndTemp, PassYN, HS_ID, DIAMETERTESTDRUM, PRECONDTEMP, INFLATIONPRESSUREREADJUSTED, CIRCUNFERENCEBEFORETEST, WHEELSPEEDRPM, WHEELSPEEDKMH, CIRCUNFERENCEAFTERTEST, ODDIFERENCE, ODDIFERENCETOLERANCE, SERIENOM, FINALJUDGEMENT, APPROVER, PASSATKMH, SPEEDTTESTPASSFAIL, SPEEDTOTALTIME, MAXSPEED, MAXLOAD, Nothing, EXTENSION}
            If (Not (parentCertificateRowByCertificate_HighSpeedHdr) Is Nothing) Then
                columnValuesArray(46) = parentCertificateRowByCertificate_HighSpeedHdr(0)
            End If
            rowHighSpeedHdrRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHighSpeedHdrRow)
            Return rowHighSpeedHdrRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HighSpeedHdrDataTable = CType(MyBase.Clone,HighSpeedHdrDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HighSpeedHdrDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProjectNum = MyBase.Columns("ProjectNum")
            Me.columnTireNum = MyBase.Columns("TireNum")
            Me.columnTestSpec = MyBase.Columns("TestSpec")
            Me.columnCompletionDate = MyBase.Columns("CompletionDate")
            Me.columnDOTSerialNumber = MyBase.Columns("DOTSerialNumber")
            Me.columnSerialDate = MyBase.Columns("SerialDate")
            Me.columnPreCondStartDate = MyBase.Columns("PreCondStartDate")
            Me.columnPreCondSartTemp = MyBase.Columns("PreCondSartTemp")
            Me.columnRimDiameter = MyBase.Columns("RimDiameter")
            Me.columnRimWidth = MyBase.Columns("RimWidth")
            Me.columnPreCondEndDate = MyBase.Columns("PreCondEndDate")
            Me.columnPreCondEndTemp = MyBase.Columns("PreCondEndTemp")
            Me.columnPreCondTime = MyBase.Columns("PreCondTime")
            Me.columnInflationPressure = MyBase.Columns("InflationPressure")
            Me.columnBeforeDiameter = MyBase.Columns("BeforeDiameter")
            Me.columnAfterDiameter = MyBase.Columns("AfterDiameter")
            Me.columnBeforeInflation = MyBase.Columns("BeforeInflation")
            Me.columnAfterInflation = MyBase.Columns("AfterInflation")
            Me.columnWheelPosition = MyBase.Columns("WheelPosition")
            Me.columnWheelNum = MyBase.Columns("WheelNum")
            Me.columnFinalTemp = MyBase.Columns("FinalTemp")
            Me.columnFinalDistance = MyBase.Columns("FinalDistance")
            Me.columnFinalInflation = MyBase.Columns("FinalInflation")
            Me.columnPostCondStartDate = MyBase.Columns("PostCondStartDate")
            Me.columnPostCondEndDate = MyBase.Columns("PostCondEndDate")
            Me.columnPostCondTime = MyBase.Columns("PostCondTime")
            Me.columnPostCondEndTemp = MyBase.Columns("PostCondEndTemp")
            Me.columnPassYN = MyBase.Columns("PassYN")
            Me.columnHS_ID = MyBase.Columns("HS_ID")
            Me.columnDIAMETERTESTDRUM = MyBase.Columns("DIAMETERTESTDRUM")
            Me.columnPRECONDTEMP = MyBase.Columns("PRECONDTEMP")
            Me.columnINFLATIONPRESSUREREADJUSTED = MyBase.Columns("INFLATIONPRESSUREREADJUSTED")
            Me.columnCIRCUNFERENCEBEFORETEST = MyBase.Columns("CIRCUNFERENCEBEFORETEST")
            Me.columnWHEELSPEEDRPM = MyBase.Columns("WHEELSPEEDRPM")
            Me.columnWHEELSPEEDKMH = MyBase.Columns("WHEELSPEEDKMH")
            Me.columnCIRCUNFERENCEAFTERTEST = MyBase.Columns("CIRCUNFERENCEAFTERTEST")
            Me.columnODDIFERENCE = MyBase.Columns("ODDIFERENCE")
            Me.columnODDIFERENCETOLERANCE = MyBase.Columns("ODDIFERENCETOLERANCE")
            Me.columnSERIENOM = MyBase.Columns("SERIENOM")
            Me.columnFINALJUDGEMENT = MyBase.Columns("FINALJUDGEMENT")
            Me.columnAPPROVER = MyBase.Columns("APPROVER")
            Me.columnPASSATKMH = MyBase.Columns("PASSATKMH")
            Me.columnSPEEDTTESTPASSFAIL = MyBase.Columns("SPEEDTTESTPASSFAIL")
            Me.columnSPEEDTOTALTIME = MyBase.Columns("SPEEDTOTALTIME")
            Me.columnMAXSPEED = MyBase.Columns("MAXSPEED")
            Me.columnMAXLOAD = MyBase.Columns("MAXLOAD")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnEXTENSION = MyBase.Columns("EXTENSION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProjectNum = New Global.System.Data.DataColumn("ProjectNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectNum)
            Me.columnTireNum = New Global.System.Data.DataColumn("TireNum", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTireNum)
            Me.columnTestSpec = New Global.System.Data.DataColumn("TestSpec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestSpec)
            Me.columnCompletionDate = New Global.System.Data.DataColumn("CompletionDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompletionDate)
            Me.columnDOTSerialNumber = New Global.System.Data.DataColumn("DOTSerialNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSerialNumber)
            Me.columnSerialDate = New Global.System.Data.DataColumn("SerialDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerialDate)
            Me.columnPreCondStartDate = New Global.System.Data.DataColumn("PreCondStartDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreCondStartDate)
            Me.columnPreCondSartTemp = New Global.System.Data.DataColumn("PreCondSartTemp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreCondSartTemp)
            Me.columnRimDiameter = New Global.System.Data.DataColumn("RimDiameter", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRimDiameter)
            Me.columnRimWidth = New Global.System.Data.DataColumn("RimWidth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRimWidth)
            Me.columnPreCondEndDate = New Global.System.Data.DataColumn("PreCondEndDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreCondEndDate)
            Me.columnPreCondEndTemp = New Global.System.Data.DataColumn("PreCondEndTemp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreCondEndTemp)
            Me.columnPreCondTime = New Global.System.Data.DataColumn("PreCondTime", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreCondTime)
            Me.columnInflationPressure = New Global.System.Data.DataColumn("InflationPressure", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInflationPressure)
            Me.columnBeforeDiameter = New Global.System.Data.DataColumn("BeforeDiameter", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeforeDiameter)
            Me.columnAfterDiameter = New Global.System.Data.DataColumn("AfterDiameter", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAfterDiameter)
            Me.columnBeforeInflation = New Global.System.Data.DataColumn("BeforeInflation", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeforeInflation)
            Me.columnAfterInflation = New Global.System.Data.DataColumn("AfterInflation", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAfterInflation)
            Me.columnWheelPosition = New Global.System.Data.DataColumn("WheelPosition", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWheelPosition)
            Me.columnWheelNum = New Global.System.Data.DataColumn("WheelNum", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWheelNum)
            Me.columnFinalTemp = New Global.System.Data.DataColumn("FinalTemp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinalTemp)
            Me.columnFinalDistance = New Global.System.Data.DataColumn("FinalDistance", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinalDistance)
            Me.columnFinalInflation = New Global.System.Data.DataColumn("FinalInflation", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinalInflation)
            Me.columnPostCondStartDate = New Global.System.Data.DataColumn("PostCondStartDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPostCondStartDate)
            Me.columnPostCondEndDate = New Global.System.Data.DataColumn("PostCondEndDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPostCondEndDate)
            Me.columnPostCondTime = New Global.System.Data.DataColumn("PostCondTime", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPostCondTime)
            Me.columnPostCondEndTemp = New Global.System.Data.DataColumn("PostCondEndTemp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPostCondEndTemp)
            Me.columnPassYN = New Global.System.Data.DataColumn("PassYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassYN)
            Me.columnHS_ID = New Global.System.Data.DataColumn("HS_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHS_ID)
            Me.columnDIAMETERTESTDRUM = New Global.System.Data.DataColumn("DIAMETERTESTDRUM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERTESTDRUM)
            Me.columnPRECONDTEMP = New Global.System.Data.DataColumn("PRECONDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDTEMP)
            Me.columnINFLATIONPRESSUREREADJUSTED = New Global.System.Data.DataColumn("INFLATIONPRESSUREREADJUSTED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSUREREADJUSTED)
            Me.columnCIRCUNFERENCEBEFORETEST = New Global.System.Data.DataColumn("CIRCUNFERENCEBEFORETEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEBEFORETEST)
            Me.columnWHEELSPEEDRPM = New Global.System.Data.DataColumn("WHEELSPEEDRPM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELSPEEDRPM)
            Me.columnWHEELSPEEDKMH = New Global.System.Data.DataColumn("WHEELSPEEDKMH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELSPEEDKMH)
            Me.columnCIRCUNFERENCEAFTERTEST = New Global.System.Data.DataColumn("CIRCUNFERENCEAFTERTEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEAFTERTEST)
            Me.columnODDIFERENCE = New Global.System.Data.DataColumn("ODDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDIFERENCE)
            Me.columnODDIFERENCETOLERANCE = New Global.System.Data.DataColumn("ODDIFERENCETOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDIFERENCETOLERANCE)
            Me.columnSERIENOM = New Global.System.Data.DataColumn("SERIENOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIENOM)
            Me.columnFINALJUDGEMENT = New Global.System.Data.DataColumn("FINALJUDGEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALJUDGEMENT)
            Me.columnAPPROVER = New Global.System.Data.DataColumn("APPROVER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVER)
            Me.columnPASSATKMH = New Global.System.Data.DataColumn("PASSATKMH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSATKMH)
            Me.columnSPEEDTTESTPASSFAIL = New Global.System.Data.DataColumn("SPEEDTTESTPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDTTESTPASSFAIL)
            Me.columnSPEEDTOTALTIME = New Global.System.Data.DataColumn("SPEEDTOTALTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDTOTALTIME)
            Me.columnMAXSPEED = New Global.System.Data.DataColumn("MAXSPEED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXSPEED)
            Me.columnMAXLOAD = New Global.System.Data.DataColumn("MAXLOAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXLOAD)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnEXTENSION = New Global.System.Data.DataColumn("EXTENSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION)
            Me.columnProjectNum.MaxLength = 6
            Me.columnTestSpec.MaxLength = 7
            Me.columnDOTSerialNumber.MaxLength = 15
            Me.columnPassYN.MaxLength = 1
            Me.columnSERIENOM.MaxLength = 50
            Me.columnFINALJUDGEMENT.MaxLength = 50
            Me.columnAPPROVER.MaxLength = 100
            Me.columnSPEEDTTESTPASSFAIL.MaxLength = 1
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnEXTENSION.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHighSpeedHdrRow() As HighSpeedHdrRow
            Return CType(Me.NewRow,HighSpeedHdrRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HighSpeedHdrRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HighSpeedHdrRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HighSpeedHdrRowChangedEvent) Is Nothing) Then
                RaiseEvent HighSpeedHdrRowChanged(Me, New HighSpeedHdrRowChangeEvent(CType(e.Row,HighSpeedHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HighSpeedHdrRowChangingEvent) Is Nothing) Then
                RaiseEvent HighSpeedHdrRowChanging(Me, New HighSpeedHdrRowChangeEvent(CType(e.Row,HighSpeedHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HighSpeedHdrRowDeletedEvent) Is Nothing) Then
                RaiseEvent HighSpeedHdrRowDeleted(Me, New HighSpeedHdrRowChangeEvent(CType(e.Row,HighSpeedHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HighSpeedHdrRowDeletingEvent) Is Nothing) Then
                RaiseEvent HighSpeedHdrRowDeleting(Me, New HighSpeedHdrRowChangeEvent(CType(e.Row,HighSpeedHdrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHighSpeedHdrRow(ByVal row As HighSpeedHdrRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HighSpeedHdrDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HighSpeedDtlDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnHS_ID As Global.System.Data.DataColumn
        
        Private columnTestStep As Global.System.Data.DataColumn
        
        Private columnTimeInMin As Global.System.Data.DataColumn
        
        Private columnSpeed As Global.System.Data.DataColumn
        
        Private columnTotMiles As Global.System.Data.DataColumn
        
        Private columnLoad As Global.System.Data.DataColumn
        
        Private columnLoadPercent As Global.System.Data.DataColumn
        
        Private columnSetInflation As Global.System.Data.DataColumn
        
        Private columnAmbTemp As Global.System.Data.DataColumn
        
        Private columnInfPressure As Global.System.Data.DataColumn
        
        Private columnStepCompletionDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HighSpeedDtl"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestStepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestStep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TimeInMinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimeInMin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpeedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpeed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotMilesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotMiles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LoadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LoadPercentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoadPercent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SetInflationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSetInflation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmbTempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmbTemp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InfPressureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInfPressure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StepCompletionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStepCompletionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HighSpeedDtlRow
            Get
                Return CType(Me.Rows(index),HighSpeedDtlRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HighSpeedDtlRowChanging As HighSpeedDtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HighSpeedDtlRowChanged As HighSpeedDtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HighSpeedDtlRowDeleting As HighSpeedDtlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HighSpeedDtlRowDeleted As HighSpeedDtlRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHighSpeedDtlRow(ByVal row As HighSpeedDtlRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHighSpeedDtlRow(ByVal parentHighSpeedHdrRowByHighSpeedHdr_HighSpeedDtl As HighSpeedHdrRow, ByVal TestStep As Short, ByVal TimeInMin As Short, ByVal Speed As Single, ByVal TotMiles As Single, ByVal Load As Single, ByVal LoadPercent As Single, ByVal SetInflation As Short, ByVal AmbTemp As Short, ByVal InfPressure As Short, ByVal StepCompletionDate As String) As HighSpeedDtlRow
            Dim rowHighSpeedDtlRow As HighSpeedDtlRow = CType(Me.NewRow,HighSpeedDtlRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TestStep, TimeInMin, Speed, TotMiles, Load, LoadPercent, SetInflation, AmbTemp, InfPressure, StepCompletionDate}
            If (Not (parentHighSpeedHdrRowByHighSpeedHdr_HighSpeedDtl) Is Nothing) Then
                columnValuesArray(0) = parentHighSpeedHdrRowByHighSpeedHdr_HighSpeedDtl(28)
            End If
            rowHighSpeedDtlRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHighSpeedDtlRow)
            Return rowHighSpeedDtlRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HighSpeedDtlDataTable = CType(MyBase.Clone,HighSpeedDtlDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HighSpeedDtlDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHS_ID = MyBase.Columns("HS_ID")
            Me.columnTestStep = MyBase.Columns("TestStep")
            Me.columnTimeInMin = MyBase.Columns("TimeInMin")
            Me.columnSpeed = MyBase.Columns("Speed")
            Me.columnTotMiles = MyBase.Columns("TotMiles")
            Me.columnLoad = MyBase.Columns("Load")
            Me.columnLoadPercent = MyBase.Columns("LoadPercent")
            Me.columnSetInflation = MyBase.Columns("SetInflation")
            Me.columnAmbTemp = MyBase.Columns("AmbTemp")
            Me.columnInfPressure = MyBase.Columns("InfPressure")
            Me.columnStepCompletionDate = MyBase.Columns("StepCompletionDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHS_ID = New Global.System.Data.DataColumn("HS_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHS_ID)
            Me.columnTestStep = New Global.System.Data.DataColumn("TestStep", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestStep)
            Me.columnTimeInMin = New Global.System.Data.DataColumn("TimeInMin", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimeInMin)
            Me.columnSpeed = New Global.System.Data.DataColumn("Speed", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpeed)
            Me.columnTotMiles = New Global.System.Data.DataColumn("TotMiles", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotMiles)
            Me.columnLoad = New Global.System.Data.DataColumn("Load", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoad)
            Me.columnLoadPercent = New Global.System.Data.DataColumn("LoadPercent", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoadPercent)
            Me.columnSetInflation = New Global.System.Data.DataColumn("SetInflation", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSetInflation)
            Me.columnAmbTemp = New Global.System.Data.DataColumn("AmbTemp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmbTemp)
            Me.columnInfPressure = New Global.System.Data.DataColumn("InfPressure", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInfPressure)
            Me.columnStepCompletionDate = New Global.System.Data.DataColumn("StepCompletionDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStepCompletionDate)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHighSpeedDtlRow() As HighSpeedDtlRow
            Return CType(Me.NewRow,HighSpeedDtlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HighSpeedDtlRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HighSpeedDtlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HighSpeedDtlRowChangedEvent) Is Nothing) Then
                RaiseEvent HighSpeedDtlRowChanged(Me, New HighSpeedDtlRowChangeEvent(CType(e.Row,HighSpeedDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HighSpeedDtlRowChangingEvent) Is Nothing) Then
                RaiseEvent HighSpeedDtlRowChanging(Me, New HighSpeedDtlRowChangeEvent(CType(e.Row,HighSpeedDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HighSpeedDtlRowDeletedEvent) Is Nothing) Then
                RaiseEvent HighSpeedDtlRowDeleted(Me, New HighSpeedDtlRowChangeEvent(CType(e.Row,HighSpeedDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HighSpeedDtlRowDeletingEvent) Is Nothing) Then
                RaiseEvent HighSpeedDtlRowDeleting(Me, New HighSpeedDtlRowChangeEvent(CType(e.Row,HighSpeedDtlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHighSpeedDtlRow(ByVal row As HighSpeedDtlRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ImarkSamplingAndTestDataSet = New ImarkSamplingAndTestDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HighSpeedDtlDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DEFAULTVALUES_VIEWRow
        Inherits Global.System.Data.DataRow
        
        Private tableDEFAULTVALUES_VIEW As DEFAULTVALUES_VIEWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDEFAULTVALUES_VIEW = CType(Me.Table,DEFAULTVALUES_VIEWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CERTIFICATENUMBER' in table 'DEFAULTVALUES_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAMPLINGDATE_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGDATE_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMPLINGDATE_I' in table 'DEFAULTVALUES_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGDATE_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTOMERDATA_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.CUSTOMERDATA_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMERDATA_I' in table 'DEFAULTVALUES_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.CUSTOMERDATA_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAMPLINGOBJECTIVE_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGOBJECTIVE_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMPLINGOBJECTIVE_I' in table 'DEFAULTVALUES_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGOBJECTIVE_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAMPLINGLOCATION_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATION_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMPLINGLOCATION_I' in table 'DEFAULTVALUES_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATION_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAMPLINGLOCATIONCONDITION_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATIONCONDITION_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMPLINGLOCATIONCONDITION_I' in table 'DEFAULTVALUES_VIEW' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATIONCONDITION_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAMPLINGLOCATIONCOMMENTS_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATIONCOMMENTS_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMPLINGLOCATIONCOMMENTS_I' in table 'DEFAULTVALUES_VIEW' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATIONCOMMENTS_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STORAGELOCATIONCONDITION_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.STORAGELOCATIONCONDITION_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STORAGELOCATIONCONDITION_I' in table 'DEFAULTVALUES_VIEW' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.STORAGELOCATIONCONDITION_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STORAGELOCATIONCOMMENTS_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.STORAGELOCATIONCOMMENTS_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STORAGELOCATIONCOMMENTS_I' in table 'DEFAULTVALUES_VIEW' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.STORAGELOCATIONCOMMENTS_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFERENCESTANDARD_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.REFERENCESTANDARD_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REFERENCESTANDARD_I' in table 'DEFAULTVALUES_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.REFERENCESTANDARD_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAMPLINGOBSERVATION_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGOBSERVATION_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAMPLINGOBSERVATION_I' in table 'DEFAULTVALUES_VIEW' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGOBSERVATION_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTRESULTSOBSERVATION_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.TESTRESULTSOBSERVATION_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TESTRESULTSOBSERVATION_I' in table 'DEFAULTVALUES_VIEW' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.TESTRESULTSOBSERVATION_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CertificateRow() As CertificateRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Certificate_DEFAULTVALUES_VIEW")),CertificateRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Certificate_DEFAULTVALUES_VIEW"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCERTIFICATENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCERTIFICATENUMBERNull()
            Me(Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAMPLINGDATE_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.SAMPLINGDATE_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAMPLINGDATE_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGDATE_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTOMERDATA_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.CUSTOMERDATA_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTOMERDATA_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.CUSTOMERDATA_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAMPLINGOBJECTIVE_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.SAMPLINGOBJECTIVE_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAMPLINGOBJECTIVE_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGOBJECTIVE_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAMPLINGLOCATION_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATION_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAMPLINGLOCATION_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATION_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAMPLINGLOCATIONCONDITION_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATIONCONDITION_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAMPLINGLOCATIONCONDITION_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATIONCONDITION_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAMPLINGLOCATIONCOMMENTS_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATIONCOMMENTS_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAMPLINGLOCATIONCOMMENTS_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGLOCATIONCOMMENTS_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTORAGELOCATIONCONDITION_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.STORAGELOCATIONCONDITION_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTORAGELOCATIONCONDITION_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.STORAGELOCATIONCONDITION_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTORAGELOCATIONCOMMENTS_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.STORAGELOCATIONCOMMENTS_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTORAGELOCATIONCOMMENTS_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.STORAGELOCATIONCOMMENTS_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREFERENCESTANDARD_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.REFERENCESTANDARD_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREFERENCESTANDARD_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.REFERENCESTANDARD_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAMPLINGOBSERVATION_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.SAMPLINGOBSERVATION_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAMPLINGOBSERVATION_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.SAMPLINGOBSERVATION_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTESTRESULTSOBSERVATION_INull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.TESTRESULTSOBSERVATION_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTESTRESULTSOBSERVATION_INull()
            Me(Me.tableDEFAULTVALUES_VIEW.TESTRESULTSOBSERVATION_IColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PRODUCTDATA_REPORT_VIEWRow
        Inherits Global.System.Data.DataRow
        
        Private tablePRODUCTDATA_REPORT_VIEW As PRODUCTDATA_REPORT_VIEWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRODUCTDATA_REPORT_VIEW = CType(Me.Table,PRODUCTDATA_REPORT_VIEWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SKUID() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SKUIDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SKUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SKU() As String
            Get
                Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SKUColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRANDCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRANDCODE' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIRETYPEID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.TIRETYPEIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIRETYPEID' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.TIRETYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NPRID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.NPRIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NPRID' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.NPRIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIZESTAMP() As String
            Get
                Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SIZESTAMPColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SIZESTAMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCONTINUEDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.DISCONTINUEDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCONTINUEDDATE' in table 'PRODUCTDATA_REPORT_VIEW' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.DISCONTINUEDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECNUMBER' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEEDRATING() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPEEDRATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEEDRATING' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPEEDRATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SINGLOADINDEX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SINGLOADINDEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SINGLOADINDEX' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SINGLOADINDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DUALLOADINDEX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.DUALLOADINDEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DUALLOADINDEX' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.DUALLOADINDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BELTEDRADIALYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.BELTEDRADIALYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BELTEDRADIALYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.BELTEDRADIALYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TUBELESSYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.TUBELESSYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TUBELESSYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.TUBELESSYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REINFORCEDYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.REINFORCEDYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REINFORCEDYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.REINFORCEDYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTRALOADYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTRALOADYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRALOADYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTRALOADYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEASURINGRIM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEASURINGRIMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEASURINGRIM' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEASURINGRIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTQGTREADWEAR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTREADWEARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTQGTREADWEAR' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTREADWEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTQGTRACTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTRACTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTQGTRACTION' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTRACTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTQGTEMP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTEMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTQGTEMP' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MUDSNOWYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.MUDSNOWYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MUDSNOWYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.MUDSNOWYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIMDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.RIMDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIMDIAMETER' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.RIMDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIALDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SERIALDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIALDATE' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SERIALDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRANDDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRANDDESC' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOADRANGE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.LOADRANGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOADRANGE' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.LOADRANGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEARIMWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEARIMWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEARIMWIDTH' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEARIMWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REGROOVABLEIND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.REGROOVABLEINDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REGROOVABLEIND' in table 'PRODUCTDATA_REPORT_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.REGROOVABLEINDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLANTPRODUCED() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.PLANTPRODUCEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLANTPRODUCED' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.PLANTPRODUCEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOSTRECENTTESTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.MOSTRECENTTESTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOSTRECENTTESTDATE' in table 'PRODUCTDATA_REPORT_VIEW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.MOSTRECENTTESTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMARK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.IMARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMARK' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.IMARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFORMENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.INFORMENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFORMENUMBER' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.INFORMENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHADATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.FECHADATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHADATE' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.FECHADATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TREADPATTERN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADPATTERNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TREADPATTERN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADPATTERNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIALPROTECTIVEBAND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECIALPROTECTIVEBANDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECIALPROTECTIVEBAND' in table 'PRODUCTDATA_REPORT_VIEW' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECIALPROTECTIVEBANDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALTIREWIDTH() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.NOMINALTIREWIDTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALTIREWIDTH' in table 'PRODUCTDATA_REPORT_VIEW' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.NOMINALTIREWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ASPECTRADIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.ASPECTRADIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASPECTRADIO' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.ASPECTRADIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TREADWEARINDICATORS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADWEARINDICATORSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TREADWEARINDICATORS' in table 'PRODUCTDATA_REPORT_VIEW' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADWEARINDICATORSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMEOFMANUFACTURER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.NAMEOFMANUFACTURERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMEOFMANUFACTURER' in table 'PRODUCTDATA_REPORT_VIEW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.NAMEOFMANUFACTURERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAMILY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.FAMILYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAMILY' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.FAMILYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSERIALNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.DOTSERIALNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSERIALNUMBER' in table 'PRODUCTDATA_REPORT_VIEW' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.DOTSERIALNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALEXTENSION_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALEXTENSION_EN' in table 'PRODUCTDATA_REPORT_VIEW"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTENSION_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTENSION_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENSION_EN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTENSION_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CertificateRow() As CertificateRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Certificate_PRODUCTDATA_REPORT_VIEW")),CertificateRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Certificate_PRODUCTDATA_REPORT_VIEW"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRANDCODENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRANDCODENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIRETYPEIDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.TIRETYPEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIRETYPEIDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.TIRETYPEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNPRIDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.NPRIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNPRIDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.NPRIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCONTINUEDDATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.DISCONTINUEDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCONTINUEDDATENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.DISCONTINUEDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECNUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SPECNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECNUMBERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDRATINGNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SPEEDRATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDRATINGNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPEEDRATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSINGLOADINDEXNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SINGLOADINDEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSINGLOADINDEXNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SINGLOADINDEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDUALLOADINDEXNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.DUALLOADINDEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDUALLOADINDEXNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.DUALLOADINDEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBELTEDRADIALYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.BELTEDRADIALYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBELTEDRADIALYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.BELTEDRADIALYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTUBELESSYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.TUBELESSYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTUBELESSYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.TUBELESSYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREINFORCEDYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.REINFORCEDYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREINFORCEDYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.REINFORCEDYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTRALOADYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.EXTRALOADYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTRALOADYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTRALOADYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEASURINGRIMNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.MEASURINGRIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEASURINGRIMNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEASURINGRIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTQGTREADWEARNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTREADWEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTQGTREADWEARNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTREADWEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTQGTRACTIONNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTRACTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTQGTRACTIONNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTRACTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTQGTEMPNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTQGTEMPNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMUDSNOWYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.MUDSNOWYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMUDSNOWYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.MUDSNOWYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIMDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.RIMDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIMDIAMETERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.RIMDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIALDATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SERIALDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIALDATENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SERIALDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRANDDESCNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRANDDESCNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOADRANGENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.LOADRANGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOADRANGENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.LOADRANGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEARIMWIDTHNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.MEARIMWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEARIMWIDTHNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEARIMWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREGROOVABLEINDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.REGROOVABLEINDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREGROOVABLEINDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.REGROOVABLEINDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLANTPRODUCEDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.PLANTPRODUCEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLANTPRODUCEDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.PLANTPRODUCEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMOSTRECENTTESTDATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.MOSTRECENTTESTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMOSTRECENTTESTDATENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.MOSTRECENTTESTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMARKNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.IMARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMARKNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.IMARKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFORMENUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.INFORMENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFORMENUMBERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.INFORMENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHADATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.FECHADATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHADATENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.FECHADATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTREADPATTERNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.TREADPATTERNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTREADPATTERNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADPATTERNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECIALPROTECTIVEBANDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SPECIALPROTECTIVEBANDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECIALPROTECTIVEBANDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECIALPROTECTIVEBANDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALTIREWIDTHNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.NOMINALTIREWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALTIREWIDTHNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.NOMINALTIREWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsASPECTRADIONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.ASPECTRADIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetASPECTRADIONull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.ASPECTRADIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTREADWEARINDICATORSNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.TREADWEARINDICATORSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTREADWEARINDICATORSNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADWEARINDICATORSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMEOFMANUFACTURERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.NAMEOFMANUFACTURERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMEOFMANUFACTURERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.NAMEOFMANUFACTURERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFAMILYNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.FAMILYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFAMILYNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.FAMILYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSERIALNUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.DOTSERIALNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSERIALNUMBERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.DOTSERIALNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALEXTENSION_ENNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALEXTENSION_ENNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTENSION_ENNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.EXTENSION_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTENSION_ENNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTENSION_ENColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CertificateRow
        Inherits Global.System.Data.DataRow
        
        Private tableCertificate As CertificateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCertificate = CType(Me.Table,CertificateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tableCertificate.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableCertificate.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTENSION_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCertificate.EXTENSION_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENSION_EN' in table 'Certificate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCertificate.EXTENSION_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTENSION_ENNull() As Boolean
            Return Me.IsNull(Me.tableCertificate.EXTENSION_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTENSION_ENNull()
            Me(Me.tableCertificate.EXTENSION_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPRODUCTDATA_REPORT_VIEWRows() As PRODUCTDATA_REPORT_VIEWRow()
            If (Me.Table.ChildRelations("Certificate_PRODUCTDATA_REPORT_VIEW") Is Nothing) Then
                Return New PRODUCTDATA_REPORT_VIEWRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Certificate_PRODUCTDATA_REPORT_VIEW")),PRODUCTDATA_REPORT_VIEWRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetMeasureHdrRows() As MeasureHdrRow()
            If (Me.Table.ChildRelations("Certificate_MeasureHdr") Is Nothing) Then
                Return New MeasureHdrRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Certificate_MeasureHdr")),MeasureHdrRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTreadWearHdrRows() As TreadWearHdrRow()
            If (Me.Table.ChildRelations("Certificate_TreadWearHdr") Is Nothing) Then
                Return New TreadWearHdrRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Certificate_TreadWearHdr")),TreadWearHdrRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetHighSpeedHdrRows() As HighSpeedHdrRow()
            If (Me.Table.ChildRelations("Certificate_HighSpeedHdr") Is Nothing) Then
                Return New HighSpeedHdrRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Certificate_HighSpeedHdr")),HighSpeedHdrRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetDEFAULTVALUES_VIEWRows() As DEFAULTVALUES_VIEWRow()
            If (Me.Table.ChildRelations("Certificate_DEFAULTVALUES_VIEW") Is Nothing) Then
                Return New DEFAULTVALUES_VIEWRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Certificate_DEFAULTVALUES_VIEW")),DEFAULTVALUES_VIEWRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MeasureHdrRow
        Inherits Global.System.Data.DataRow
        
        Private tableMeasureHdr As MeasureHdrDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMeasureHdr = CType(Me.Table,MeasureHdrDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProjectNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.ProjectNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectNum' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.ProjectNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TireNum() As Short
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.TireNumColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TireNum' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.TireNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestSpec() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.TestSpecColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestSpec' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.TestSpecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CompletionDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.CompletionDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompletionDate' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.CompletionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InflationPressure() As Short
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.InflationPressureColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InflationPressure' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.InflationPressureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MoldDesign() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.MoldDesignColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MoldDesign' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.MoldDesignColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RimWidth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.RimWidthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RimWidth' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.RimWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSerialNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.DOTSerialNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSerialNumber' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.DOTSerialNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SerialDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.SerialDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SerialDate' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.SerialDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Diameter() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.DiameterColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Diameter' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.DiameterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AvgSectionWidth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.AvgSectionWidthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AvgSectionWidth' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.AvgSectionWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AvgOverallWidth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.AvgOverallWidthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AvgOverallWidth' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.AvgOverallWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MaxOverallWidth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.MaxOverallWidthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxOverallWidth' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.MaxOverallWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MinSizeFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.MinSizeFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MinSizeFactor' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.MinSizeFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MountTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.MountTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MountTime' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.MountTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MountTemp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.MountTempColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MountTemp' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.MountTempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EndTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.EndTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EndTime' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.EndTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEA_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.MEA_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEA_ID' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.MEA_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActSizeFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.ActSizeFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActSizeFactor' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.ActSizeFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STARTINFLATIONPRESSURE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.STARTINFLATIONPRESSUREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STARTINFLATIONPRESSURE' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.STARTINFLATIONPRESSUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENDINFLATIONPRESSURE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.ENDINFLATIONPRESSUREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENDINFLATIONPRESSURE' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.ENDINFLATIONPRESSUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADJUSTMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.ADJUSTMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADJUSTMENT' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.ADJUSTMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CIRCUNFERENCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.CIRCUNFERENCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCUNFERENCE' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.CIRCUNFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.NOMINALDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALDIAMETER' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.NOMINALDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.NOMINALWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALWIDTH' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.NOMINALWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALWIDTHPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.NOMINALWIDTHPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALWIDTHPASSFAIL' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.NOMINALWIDTHPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALWIDTHDIFERENCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.NOMINALWIDTHDIFERENCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALWIDTHDIFERENCE' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.NOMINALWIDTHDIFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALWIDTHTOLERANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.NOMINALWIDTHTOLERANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALWIDTHTOLERANCE' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.NOMINALWIDTHTOLERANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAXOVERALLDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.MAXOVERALLDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXOVERALLDIAMETER' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.MAXOVERALLDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MINOVERALLDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.MINOVERALLDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MINOVERALLDIAMETER' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.MINOVERALLDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OVERALLWIDTHPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.OVERALLWIDTHPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OVERALLWIDTHPASSFAIL' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.OVERALLWIDTHPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OVERALLDIAMETERPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.OVERALLDIAMETERPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OVERALLDIAMETERPASSFAIL' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.OVERALLDIAMETERPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAMETERDIFERENCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.DIAMETERDIFERENCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAMETERDIFERENCE' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.DIAMETERDIFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAMETERTOLERANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.DIAMETERTOLERANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAMETERTOLERANCE' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.DIAMETERTOLERANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TEMPRESISTANCEGRADING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.TEMPRESISTANCEGRADINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TEMPRESISTANCEGRADING' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.TEMPRESISTANCEGRADINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TENSILESTRENGHT1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.TENSILESTRENGHT1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TENSILESTRENGHT1' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.TENSILESTRENGHT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TENSILESTRENGHT2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.TENSILESTRENGHT2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TENSILESTRENGHT2' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.TENSILESTRENGHT2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELONGATION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.ELONGATION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELONGATION1' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.ELONGATION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELONGATION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.ELONGATION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELONGATION2' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.ELONGATION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TENSILESTRENGHTAFTERAGE1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.TENSILESTRENGHTAFTERAGE1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TENSILESTRENGHTAFTERAGE1' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.TENSILESTRENGHTAFTERAGE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TENSILESTRENGHTAFTERAGE2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.TENSILESTRENGHTAFTERAGE2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TENSILESTRENGHTAFTERAGE2' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.TENSILESTRENGHTAFTERAGE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.CERTIFICATENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CERTIFICATENUMBER' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTENSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableMeasureHdr.EXTENSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENSION' in table 'MeasureHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureHdr.EXTENSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CertificateRow() As CertificateRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Certificate_MeasureHdr")),CertificateRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Certificate_MeasureHdr"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProjectNumNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.ProjectNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProjectNumNull()
            Me(Me.tableMeasureHdr.ProjectNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTireNumNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.TireNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTireNumNull()
            Me(Me.tableMeasureHdr.TireNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestSpecNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.TestSpecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestSpecNull()
            Me(Me.tableMeasureHdr.TestSpecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCompletionDateNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.CompletionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCompletionDateNull()
            Me(Me.tableMeasureHdr.CompletionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInflationPressureNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.InflationPressureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInflationPressureNull()
            Me(Me.tableMeasureHdr.InflationPressureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMoldDesignNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.MoldDesignColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMoldDesignNull()
            Me(Me.tableMeasureHdr.MoldDesignColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRimWidthNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.RimWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRimWidthNull()
            Me(Me.tableMeasureHdr.RimWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSerialNumberNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.DOTSerialNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSerialNumberNull()
            Me(Me.tableMeasureHdr.DOTSerialNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSerialDateNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.SerialDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSerialDateNull()
            Me(Me.tableMeasureHdr.SerialDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiameterNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.DiameterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiameterNull()
            Me(Me.tableMeasureHdr.DiameterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAvgSectionWidthNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.AvgSectionWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAvgSectionWidthNull()
            Me(Me.tableMeasureHdr.AvgSectionWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAvgOverallWidthNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.AvgOverallWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAvgOverallWidthNull()
            Me(Me.tableMeasureHdr.AvgOverallWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMaxOverallWidthNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.MaxOverallWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMaxOverallWidthNull()
            Me(Me.tableMeasureHdr.MaxOverallWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMinSizeFactorNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.MinSizeFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMinSizeFactorNull()
            Me(Me.tableMeasureHdr.MinSizeFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMountTimeNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.MountTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMountTimeNull()
            Me(Me.tableMeasureHdr.MountTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMountTempNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.MountTempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMountTempNull()
            Me(Me.tableMeasureHdr.MountTempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEndTimeNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.EndTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEndTimeNull()
            Me(Me.tableMeasureHdr.EndTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEA_IDNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.MEA_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEA_IDNull()
            Me(Me.tableMeasureHdr.MEA_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActSizeFactorNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.ActSizeFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActSizeFactorNull()
            Me(Me.tableMeasureHdr.ActSizeFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTARTINFLATIONPRESSURENull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.STARTINFLATIONPRESSUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTARTINFLATIONPRESSURENull()
            Me(Me.tableMeasureHdr.STARTINFLATIONPRESSUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENDINFLATIONPRESSURENull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.ENDINFLATIONPRESSUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENDINFLATIONPRESSURENull()
            Me(Me.tableMeasureHdr.ENDINFLATIONPRESSUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADJUSTMENTNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.ADJUSTMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADJUSTMENTNull()
            Me(Me.tableMeasureHdr.ADJUSTMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCIRCUNFERENCENull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.CIRCUNFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCIRCUNFERENCENull()
            Me(Me.tableMeasureHdr.CIRCUNFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.NOMINALDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALDIAMETERNull()
            Me(Me.tableMeasureHdr.NOMINALDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.NOMINALWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALWIDTHNull()
            Me(Me.tableMeasureHdr.NOMINALWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALWIDTHPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.NOMINALWIDTHPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALWIDTHPASSFAILNull()
            Me(Me.tableMeasureHdr.NOMINALWIDTHPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALWIDTHDIFERENCENull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.NOMINALWIDTHDIFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALWIDTHDIFERENCENull()
            Me(Me.tableMeasureHdr.NOMINALWIDTHDIFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALWIDTHTOLERANCENull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.NOMINALWIDTHTOLERANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALWIDTHTOLERANCENull()
            Me(Me.tableMeasureHdr.NOMINALWIDTHTOLERANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAXOVERALLDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.MAXOVERALLDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAXOVERALLDIAMETERNull()
            Me(Me.tableMeasureHdr.MAXOVERALLDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMINOVERALLDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.MINOVERALLDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMINOVERALLDIAMETERNull()
            Me(Me.tableMeasureHdr.MINOVERALLDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOVERALLWIDTHPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.OVERALLWIDTHPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOVERALLWIDTHPASSFAILNull()
            Me(Me.tableMeasureHdr.OVERALLWIDTHPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOVERALLDIAMETERPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.OVERALLDIAMETERPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOVERALLDIAMETERPASSFAILNull()
            Me(Me.tableMeasureHdr.OVERALLDIAMETERPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAMETERDIFERENCENull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.DIAMETERDIFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAMETERDIFERENCENull()
            Me(Me.tableMeasureHdr.DIAMETERDIFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAMETERTOLERANCENull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.DIAMETERTOLERANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAMETERTOLERANCENull()
            Me(Me.tableMeasureHdr.DIAMETERTOLERANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTEMPRESISTANCEGRADINGNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.TEMPRESISTANCEGRADINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTEMPRESISTANCEGRADINGNull()
            Me(Me.tableMeasureHdr.TEMPRESISTANCEGRADINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTENSILESTRENGHT1Null() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.TENSILESTRENGHT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTENSILESTRENGHT1Null()
            Me(Me.tableMeasureHdr.TENSILESTRENGHT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTENSILESTRENGHT2Null() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.TENSILESTRENGHT2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTENSILESTRENGHT2Null()
            Me(Me.tableMeasureHdr.TENSILESTRENGHT2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELONGATION1Null() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.ELONGATION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELONGATION1Null()
            Me(Me.tableMeasureHdr.ELONGATION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELONGATION2Null() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.ELONGATION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELONGATION2Null()
            Me(Me.tableMeasureHdr.ELONGATION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTENSILESTRENGHTAFTERAGE1Null() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.TENSILESTRENGHTAFTERAGE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTENSILESTRENGHTAFTERAGE1Null()
            Me(Me.tableMeasureHdr.TENSILESTRENGHTAFTERAGE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTENSILESTRENGHTAFTERAGE2Null() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.TENSILESTRENGHTAFTERAGE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTENSILESTRENGHTAFTERAGE2Null()
            Me(Me.tableMeasureHdr.TENSILESTRENGHTAFTERAGE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCERTIFICATENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.CERTIFICATENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCERTIFICATENUMBERNull()
            Me(Me.tableMeasureHdr.CERTIFICATENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTENSIONNull() As Boolean
            Return Me.IsNull(Me.tableMeasureHdr.EXTENSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTENSIONNull()
            Me(Me.tableMeasureHdr.EXTENSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetMeasureDtlRows() As MeasureDtlRow()
            If (Me.Table.ChildRelations("MeasureHdr_MeasureDtl") Is Nothing) Then
                Return New MeasureDtlRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("MeasureHdr_MeasureDtl")),MeasureDtlRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MeasureDtlRow
        Inherits Global.System.Data.DataRow
        
        Private tableMeasureDtl As MeasureDtlDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMeasureDtl = CType(Me.Table,MeasureDtlDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEA_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableMeasureDtl.MEA_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEA_ID' in table 'MeasureDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureDtl.MEA_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Iteration() As Short
            Get
                Try 
                    Return CType(Me(Me.tableMeasureDtl.IterationColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Iteration' in table 'MeasureDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureDtl.IterationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SectionWidth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMeasureDtl.SectionWidthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectionWidth' in table 'MeasureDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureDtl.SectionWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OverallWidth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMeasureDtl.OverallWidthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OverallWidth' in table 'MeasureDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMeasureDtl.OverallWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasureHdrRow() As MeasureHdrRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("MeasureHdr_MeasureDtl")),MeasureHdrRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("MeasureHdr_MeasureDtl"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEA_IDNull() As Boolean
            Return Me.IsNull(Me.tableMeasureDtl.MEA_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEA_IDNull()
            Me(Me.tableMeasureDtl.MEA_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIterationNull() As Boolean
            Return Me.IsNull(Me.tableMeasureDtl.IterationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIterationNull()
            Me(Me.tableMeasureDtl.IterationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSectionWidthNull() As Boolean
            Return Me.IsNull(Me.tableMeasureDtl.SectionWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSectionWidthNull()
            Me(Me.tableMeasureDtl.SectionWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOverallWidthNull() As Boolean
            Return Me.IsNull(Me.tableMeasureDtl.OverallWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOverallWidthNull()
            Me(Me.tableMeasureDtl.OverallWidthColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TreadWearHdrRow
        Inherits Global.System.Data.DataRow
        
        Private tableTreadWearHdr As TreadWearHdrDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTreadWearHdr = CType(Me.Table,TreadWearHdrDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProjectNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.ProjectNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectNum' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.ProjectNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TireNum() As Short
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.TireNumColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TireNum' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.TireNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestSpec() As String
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.TestSpecColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestSpec' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.TestSpecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CompletionDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.CompletionDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompletionDate' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.CompletionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSerialNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.DOTSerialNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSerialNumber' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.DOTSerialNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SerialDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.SerialDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SerialDate' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.SerialDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LowestWearbar() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.LowestWearbarColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LowestWearbar' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.LowestWearbarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PassYN() As String
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.PassYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PassYN' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.PassYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TW_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.TW_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TW_ID' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.TW_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDICATORSREQUIREMENT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.INDICATORSREQUIREMENTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDICATORSREQUIREMENT' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.INDICATORSREQUIREMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.CERTIFICATENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CERTIFICATENUMBER' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTENSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearHdr.EXTENSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENSION' in table 'TreadWearHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearHdr.EXTENSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CertificateRow() As CertificateRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Certificate_TreadWearHdr")),CertificateRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Certificate_TreadWearHdr"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProjectNumNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.ProjectNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProjectNumNull()
            Me(Me.tableTreadWearHdr.ProjectNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTireNumNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.TireNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTireNumNull()
            Me(Me.tableTreadWearHdr.TireNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestSpecNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.TestSpecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestSpecNull()
            Me(Me.tableTreadWearHdr.TestSpecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCompletionDateNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.CompletionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCompletionDateNull()
            Me(Me.tableTreadWearHdr.CompletionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSerialNumberNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.DOTSerialNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSerialNumberNull()
            Me(Me.tableTreadWearHdr.DOTSerialNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSerialDateNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.SerialDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSerialDateNull()
            Me(Me.tableTreadWearHdr.SerialDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLowestWearbarNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.LowestWearbarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLowestWearbarNull()
            Me(Me.tableTreadWearHdr.LowestWearbarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPassYNNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.PassYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPassYNNull()
            Me(Me.tableTreadWearHdr.PassYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTW_IDNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.TW_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTW_IDNull()
            Me(Me.tableTreadWearHdr.TW_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDICATORSREQUIREMENTNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.INDICATORSREQUIREMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDICATORSREQUIREMENTNull()
            Me(Me.tableTreadWearHdr.INDICATORSREQUIREMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCERTIFICATENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.CERTIFICATENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCERTIFICATENUMBERNull()
            Me(Me.tableTreadWearHdr.CERTIFICATENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTENSIONNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearHdr.EXTENSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTENSIONNull()
            Me(Me.tableTreadWearHdr.EXTENSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTreadWearDtlRows() As TreadWearDtlRow()
            If (Me.Table.ChildRelations("TreadWearHdr_TreadWearDtl") Is Nothing) Then
                Return New TreadWearDtlRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("TreadWearHdr_TreadWearDtl")),TreadWearDtlRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TreadWearDtlRow
        Inherits Global.System.Data.DataRow
        
        Private tableTreadWearDtl As TreadWearDtlDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTreadWearDtl = CType(Me.Table,TreadWearDtlDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TW_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearDtl.TW_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TW_ID' in table 'TreadWearDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearDtl.TW_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Iteration() As Short
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearDtl.IterationColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Iteration' in table 'TreadWearDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearDtl.IterationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WearbarHeight() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTreadWearDtl.WearbarHeightColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WearbarHeight' in table 'TreadWearDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTreadWearDtl.WearbarHeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TreadWearHdrRow() As TreadWearHdrRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("TreadWearHdr_TreadWearDtl")),TreadWearHdrRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("TreadWearHdr_TreadWearDtl"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTW_IDNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearDtl.TW_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTW_IDNull()
            Me(Me.tableTreadWearDtl.TW_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIterationNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearDtl.IterationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIterationNull()
            Me(Me.tableTreadWearDtl.IterationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWearbarHeightNull() As Boolean
            Return Me.IsNull(Me.tableTreadWearDtl.WearbarHeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWearbarHeightNull()
            Me(Me.tableTreadWearDtl.WearbarHeightColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HighSpeedHdrRow
        Inherits Global.System.Data.DataRow
        
        Private tableHighSpeedHdr As HighSpeedHdrDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHighSpeedHdr = CType(Me.Table,HighSpeedHdrDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProjectNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.ProjectNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectNum' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.ProjectNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TireNum() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.TireNumColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TireNum' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.TireNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestSpec() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.TestSpecColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestSpec' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.TestSpecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CompletionDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.CompletionDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompletionDate' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.CompletionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSerialNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.DOTSerialNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSerialNumber' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.DOTSerialNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SerialDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.SerialDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SerialDate' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.SerialDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PreCondStartDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PreCondStartDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreCondStartDate' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PreCondStartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PreCondSartTemp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PreCondSartTempColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreCondSartTemp' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PreCondSartTempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RimDiameter() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.RimDiameterColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RimDiameter' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.RimDiameterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RimWidth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.RimWidthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RimWidth' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.RimWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PreCondEndDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PreCondEndDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreCondEndDate' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PreCondEndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PreCondEndTemp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PreCondEndTempColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreCondEndTemp' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PreCondEndTempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PreCondTime() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PreCondTimeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreCondTime' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PreCondTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InflationPressure() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.InflationPressureColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InflationPressure' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.InflationPressureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BeforeDiameter() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.BeforeDiameterColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeforeDiameter' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.BeforeDiameterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AfterDiameter() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.AfterDiameterColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AfterDiameter' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.AfterDiameterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BeforeInflation() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.BeforeInflationColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeforeInflation' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.BeforeInflationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AfterInflation() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.AfterInflationColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AfterInflation' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.AfterInflationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WheelPosition() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.WheelPositionColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WheelPosition' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.WheelPositionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WheelNum() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.WheelNumColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WheelNum' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.WheelNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FinalTemp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.FinalTempColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinalTemp' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.FinalTempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FinalDistance() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.FinalDistanceColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinalDistance' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.FinalDistanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FinalInflation() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.FinalInflationColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinalInflation' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.FinalInflationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PostCondStartDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PostCondStartDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PostCondStartDate' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PostCondStartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PostCondEndDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PostCondEndDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PostCondEndDate' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PostCondEndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PostCondTime() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PostCondTimeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PostCondTime' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PostCondTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PostCondEndTemp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PostCondEndTempColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PostCondEndTemp' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PostCondEndTempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PassYN() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PassYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PassYN' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PassYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HS_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.HS_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HS_ID' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.HS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAMETERTESTDRUM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.DIAMETERTESTDRUMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAMETERTESTDRUM' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.DIAMETERTESTDRUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PRECONDTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDTEMP' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PRECONDTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFLATIONPRESSUREREADJUSTED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.INFLATIONPRESSUREREADJUSTEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFLATIONPRESSUREREADJUSTED' in table 'HighSpeedHdr' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.INFLATIONPRESSUREREADJUSTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CIRCUNFERENCEBEFORETEST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.CIRCUNFERENCEBEFORETESTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCUNFERENCEBEFORETEST' in table 'HighSpeedHdr' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.CIRCUNFERENCEBEFORETESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WHEELSPEEDRPM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.WHEELSPEEDRPMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WHEELSPEEDRPM' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.WHEELSPEEDRPMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WHEELSPEEDKMH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.WHEELSPEEDKMHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WHEELSPEEDKMH' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.WHEELSPEEDKMHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CIRCUNFERENCEAFTERTEST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.CIRCUNFERENCEAFTERTESTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCUNFERENCEAFTERTEST' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.CIRCUNFERENCEAFTERTESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ODDIFERENCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.ODDIFERENCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDIFERENCE' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.ODDIFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ODDIFERENCETOLERANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.ODDIFERENCETOLERANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDIFERENCETOLERANCE' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.ODDIFERENCETOLERANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIENOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.SERIENOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIENOM' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.SERIENOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FINALJUDGEMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.FINALJUDGEMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINALJUDGEMENT' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.FINALJUDGEMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVER() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.APPROVERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPROVER' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.APPROVERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PASSATKMH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.PASSATKMHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PASSATKMH' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.PASSATKMHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEEDTTESTPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.SPEEDTTESTPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEEDTTESTPASSFAIL' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.SPEEDTTESTPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEEDTOTALTIME() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.SPEEDTOTALTIMEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEEDTOTALTIME' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.SPEEDTOTALTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAXSPEED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.MAXSPEEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXSPEED' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.MAXSPEEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAXLOAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.MAXLOADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXLOAD' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.MAXLOADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.CERTIFICATENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CERTIFICATENUMBER' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTENSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedHdr.EXTENSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENSION' in table 'HighSpeedHdr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedHdr.EXTENSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CertificateRow() As CertificateRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Certificate_HighSpeedHdr")),CertificateRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Certificate_HighSpeedHdr"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProjectNumNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.ProjectNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProjectNumNull()
            Me(Me.tableHighSpeedHdr.ProjectNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTireNumNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.TireNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTireNumNull()
            Me(Me.tableHighSpeedHdr.TireNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestSpecNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.TestSpecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestSpecNull()
            Me(Me.tableHighSpeedHdr.TestSpecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCompletionDateNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.CompletionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCompletionDateNull()
            Me(Me.tableHighSpeedHdr.CompletionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSerialNumberNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.DOTSerialNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSerialNumberNull()
            Me(Me.tableHighSpeedHdr.DOTSerialNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSerialDateNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.SerialDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSerialDateNull()
            Me(Me.tableHighSpeedHdr.SerialDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreCondStartDateNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PreCondStartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreCondStartDateNull()
            Me(Me.tableHighSpeedHdr.PreCondStartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreCondSartTempNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PreCondSartTempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreCondSartTempNull()
            Me(Me.tableHighSpeedHdr.PreCondSartTempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRimDiameterNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.RimDiameterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRimDiameterNull()
            Me(Me.tableHighSpeedHdr.RimDiameterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRimWidthNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.RimWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRimWidthNull()
            Me(Me.tableHighSpeedHdr.RimWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreCondEndDateNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PreCondEndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreCondEndDateNull()
            Me(Me.tableHighSpeedHdr.PreCondEndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreCondEndTempNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PreCondEndTempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreCondEndTempNull()
            Me(Me.tableHighSpeedHdr.PreCondEndTempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreCondTimeNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PreCondTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreCondTimeNull()
            Me(Me.tableHighSpeedHdr.PreCondTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInflationPressureNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.InflationPressureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInflationPressureNull()
            Me(Me.tableHighSpeedHdr.InflationPressureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBeforeDiameterNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.BeforeDiameterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBeforeDiameterNull()
            Me(Me.tableHighSpeedHdr.BeforeDiameterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAfterDiameterNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.AfterDiameterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAfterDiameterNull()
            Me(Me.tableHighSpeedHdr.AfterDiameterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBeforeInflationNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.BeforeInflationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBeforeInflationNull()
            Me(Me.tableHighSpeedHdr.BeforeInflationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAfterInflationNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.AfterInflationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAfterInflationNull()
            Me(Me.tableHighSpeedHdr.AfterInflationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWheelPositionNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.WheelPositionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWheelPositionNull()
            Me(Me.tableHighSpeedHdr.WheelPositionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWheelNumNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.WheelNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWheelNumNull()
            Me(Me.tableHighSpeedHdr.WheelNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFinalTempNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.FinalTempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFinalTempNull()
            Me(Me.tableHighSpeedHdr.FinalTempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFinalDistanceNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.FinalDistanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFinalDistanceNull()
            Me(Me.tableHighSpeedHdr.FinalDistanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFinalInflationNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.FinalInflationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFinalInflationNull()
            Me(Me.tableHighSpeedHdr.FinalInflationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPostCondStartDateNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PostCondStartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPostCondStartDateNull()
            Me(Me.tableHighSpeedHdr.PostCondStartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPostCondEndDateNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PostCondEndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPostCondEndDateNull()
            Me(Me.tableHighSpeedHdr.PostCondEndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPostCondTimeNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PostCondTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPostCondTimeNull()
            Me(Me.tableHighSpeedHdr.PostCondTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPostCondEndTempNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PostCondEndTempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPostCondEndTempNull()
            Me(Me.tableHighSpeedHdr.PostCondEndTempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPassYNNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PassYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPassYNNull()
            Me(Me.tableHighSpeedHdr.PassYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHS_IDNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.HS_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHS_IDNull()
            Me(Me.tableHighSpeedHdr.HS_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAMETERTESTDRUMNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.DIAMETERTESTDRUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAMETERTESTDRUMNull()
            Me(Me.tableHighSpeedHdr.DIAMETERTESTDRUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDTEMPNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PRECONDTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDTEMPNull()
            Me(Me.tableHighSpeedHdr.PRECONDTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFLATIONPRESSUREREADJUSTEDNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.INFLATIONPRESSUREREADJUSTEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFLATIONPRESSUREREADJUSTEDNull()
            Me(Me.tableHighSpeedHdr.INFLATIONPRESSUREREADJUSTEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCIRCUNFERENCEBEFORETESTNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.CIRCUNFERENCEBEFORETESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCIRCUNFERENCEBEFORETESTNull()
            Me(Me.tableHighSpeedHdr.CIRCUNFERENCEBEFORETESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHEELSPEEDRPMNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.WHEELSPEEDRPMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHEELSPEEDRPMNull()
            Me(Me.tableHighSpeedHdr.WHEELSPEEDRPMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHEELSPEEDKMHNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.WHEELSPEEDKMHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHEELSPEEDKMHNull()
            Me(Me.tableHighSpeedHdr.WHEELSPEEDKMHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCIRCUNFERENCEAFTERTESTNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.CIRCUNFERENCEAFTERTESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCIRCUNFERENCEAFTERTESTNull()
            Me(Me.tableHighSpeedHdr.CIRCUNFERENCEAFTERTESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsODDIFERENCENull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.ODDIFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetODDIFERENCENull()
            Me(Me.tableHighSpeedHdr.ODDIFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsODDIFERENCETOLERANCENull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.ODDIFERENCETOLERANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetODDIFERENCETOLERANCENull()
            Me(Me.tableHighSpeedHdr.ODDIFERENCETOLERANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIENOMNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.SERIENOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIENOMNull()
            Me(Me.tableHighSpeedHdr.SERIENOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINALJUDGEMENTNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.FINALJUDGEMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINALJUDGEMENTNull()
            Me(Me.tableHighSpeedHdr.FINALJUDGEMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVERNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.APPROVERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVERNull()
            Me(Me.tableHighSpeedHdr.APPROVERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPASSATKMHNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.PASSATKMHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPASSATKMHNull()
            Me(Me.tableHighSpeedHdr.PASSATKMHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDTTESTPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.SPEEDTTESTPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDTTESTPASSFAILNull()
            Me(Me.tableHighSpeedHdr.SPEEDTTESTPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDTOTALTIMENull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.SPEEDTOTALTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDTOTALTIMENull()
            Me(Me.tableHighSpeedHdr.SPEEDTOTALTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAXSPEEDNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.MAXSPEEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAXSPEEDNull()
            Me(Me.tableHighSpeedHdr.MAXSPEEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAXLOADNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.MAXLOADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAXLOADNull()
            Me(Me.tableHighSpeedHdr.MAXLOADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCERTIFICATENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.CERTIFICATENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCERTIFICATENUMBERNull()
            Me(Me.tableHighSpeedHdr.CERTIFICATENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTENSIONNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedHdr.EXTENSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTENSIONNull()
            Me(Me.tableHighSpeedHdr.EXTENSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetHighSpeedDtlRows() As HighSpeedDtlRow()
            If (Me.Table.ChildRelations("HighSpeedHdr_HighSpeedDtl") Is Nothing) Then
                Return New HighSpeedDtlRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("HighSpeedHdr_HighSpeedDtl")),HighSpeedDtlRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HighSpeedDtlRow
        Inherits Global.System.Data.DataRow
        
        Private tableHighSpeedDtl As HighSpeedDtlDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHighSpeedDtl = CType(Me.Table,HighSpeedDtlDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HS_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.HS_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HS_ID' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.HS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestStep() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.TestStepColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestStep' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.TestStepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TimeInMin() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.TimeInMinColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TimeInMin' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.TimeInMinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Speed() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.SpeedColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Speed' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.SpeedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotMiles() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.TotMilesColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotMiles' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.TotMilesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Load() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.LoadColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Load' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.LoadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LoadPercent() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.LoadPercentColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LoadPercent' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.LoadPercentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SetInflation() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.SetInflationColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SetInflation' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.SetInflationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AmbTemp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.AmbTempColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmbTemp' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.AmbTempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InfPressure() As Short
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.InfPressureColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InfPressure' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.InfPressureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StepCompletionDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableHighSpeedDtl.StepCompletionDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StepCompletionDate' in table 'HighSpeedDtl' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHighSpeedDtl.StepCompletionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HighSpeedHdrRow() As HighSpeedHdrRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("HighSpeedHdr_HighSpeedDtl")),HighSpeedHdrRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("HighSpeedHdr_HighSpeedDtl"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHS_IDNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.HS_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHS_IDNull()
            Me(Me.tableHighSpeedDtl.HS_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestStepNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.TestStepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestStepNull()
            Me(Me.tableHighSpeedDtl.TestStepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTimeInMinNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.TimeInMinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTimeInMinNull()
            Me(Me.tableHighSpeedDtl.TimeInMinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpeedNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.SpeedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpeedNull()
            Me(Me.tableHighSpeedDtl.SpeedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotMilesNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.TotMilesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotMilesNull()
            Me(Me.tableHighSpeedDtl.TotMilesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLoadNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.LoadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLoadNull()
            Me(Me.tableHighSpeedDtl.LoadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLoadPercentNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.LoadPercentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLoadPercentNull()
            Me(Me.tableHighSpeedDtl.LoadPercentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSetInflationNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.SetInflationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSetInflationNull()
            Me(Me.tableHighSpeedDtl.SetInflationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmbTempNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.AmbTempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmbTempNull()
            Me(Me.tableHighSpeedDtl.AmbTempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInfPressureNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.InfPressureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInfPressureNull()
            Me(Me.tableHighSpeedDtl.InfPressureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStepCompletionDateNull() As Boolean
            Return Me.IsNull(Me.tableHighSpeedDtl.StepCompletionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStepCompletionDateNull()
            Me(Me.tableHighSpeedDtl.StepCompletionDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DEFAULTVALUES_VIEWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DEFAULTVALUES_VIEWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DEFAULTVALUES_VIEWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DEFAULTVALUES_VIEWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PRODUCTDATA_REPORT_VIEWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PRODUCTDATA_REPORT_VIEWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PRODUCTDATA_REPORT_VIEWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PRODUCTDATA_REPORT_VIEWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CertificateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CertificateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CertificateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CertificateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MeasureHdrRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MeasureHdrRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MeasureHdrRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MeasureHdrRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MeasureDtlRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MeasureDtlRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MeasureDtlRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MeasureDtlRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TreadWearHdrRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TreadWearHdrRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TreadWearHdrRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TreadWearHdrRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TreadWearDtlRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TreadWearDtlRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TreadWearDtlRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TreadWearDtlRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HighSpeedHdrRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HighSpeedHdrRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HighSpeedHdrRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HighSpeedHdrRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HighSpeedDtlRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HighSpeedDtlRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HighSpeedDtlRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HighSpeedDtlRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ImarkSamplingAndTestDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DEFAULTVALUES_VIEWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DEFAULTVALUES_VIEW"
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CERTIFICATENUMBER FROM DEFAULTVALUES_VIEW"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ImarkSamplingAndTestDataSet.DEFAULTVALUES_VIEWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ImarkSamplingAndTestDataSet.DEFAULTVALUES_VIEWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ImarkSamplingAndTestDataSet.DEFAULTVALUES_VIEWDataTable = New ImarkSamplingAndTestDataSet.DEFAULTVALUES_VIEWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PRODUCTDATA_REPORT_VIEWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PRODUCTDATA_REPORT_VIEW"
            tableMapping.ColumnMappings.Add("SKUID", "SKUID")
            tableMapping.ColumnMappings.Add("SKU", "SKU")
            tableMapping.ColumnMappings.Add("BRANDCODE", "BRANDCODE")
            tableMapping.ColumnMappings.Add("TIRETYPEID", "TIRETYPEID")
            tableMapping.ColumnMappings.Add("NPRID", "NPRID")
            tableMapping.ColumnMappings.Add("SIZESTAMP", "SIZESTAMP")
            tableMapping.ColumnMappings.Add("DISCONTINUEDDATE", "DISCONTINUEDDATE")
            tableMapping.ColumnMappings.Add("SPECNUMBER", "SPECNUMBER")
            tableMapping.ColumnMappings.Add("SPEEDRATING", "SPEEDRATING")
            tableMapping.ColumnMappings.Add("SINGLOADINDEX", "SINGLOADINDEX")
            tableMapping.ColumnMappings.Add("DUALLOADINDEX", "DUALLOADINDEX")
            tableMapping.ColumnMappings.Add("BELTEDRADIALYN", "BELTEDRADIALYN")
            tableMapping.ColumnMappings.Add("TUBELESSYN", "TUBELESSYN")
            tableMapping.ColumnMappings.Add("REINFORCEDYN", "REINFORCEDYN")
            tableMapping.ColumnMappings.Add("EXTRALOADYN", "EXTRALOADYN")
            tableMapping.ColumnMappings.Add("MEASURINGRIM", "MEASURINGRIM")
            tableMapping.ColumnMappings.Add("UTQGTREADWEAR", "UTQGTREADWEAR")
            tableMapping.ColumnMappings.Add("UTQGTRACTION", "UTQGTRACTION")
            tableMapping.ColumnMappings.Add("UTQGTEMP", "UTQGTEMP")
            tableMapping.ColumnMappings.Add("MUDSNOWYN", "MUDSNOWYN")
            tableMapping.ColumnMappings.Add("RIMDIAMETER", "RIMDIAMETER")
            tableMapping.ColumnMappings.Add("SERIALDATE", "SERIALDATE")
            tableMapping.ColumnMappings.Add("BRANDDESC", "BRANDDESC")
            tableMapping.ColumnMappings.Add("LOADRANGE", "LOADRANGE")
            tableMapping.ColumnMappings.Add("MEARIMWIDTH", "MEARIMWIDTH")
            tableMapping.ColumnMappings.Add("REGROOVABLEIND", "REGROOVABLEIND")
            tableMapping.ColumnMappings.Add("PLANTPRODUCED", "PLANTPRODUCED")
            tableMapping.ColumnMappings.Add("MOSTRECENTTESTDATE", "MOSTRECENTTESTDATE")
            tableMapping.ColumnMappings.Add("IMARK", "IMARK")
            tableMapping.ColumnMappings.Add("INFORMENUMBER", "INFORMENUMBER")
            tableMapping.ColumnMappings.Add("FECHADATE", "FECHADATE")
            tableMapping.ColumnMappings.Add("TREADPATTERN", "TREADPATTERN")
            tableMapping.ColumnMappings.Add("SPECIALPROTECTIVEBAND", "SPECIALPROTECTIVEBAND")
            tableMapping.ColumnMappings.Add("NOMINALTIREWIDTH", "NOMINALTIREWIDTH")
            tableMapping.ColumnMappings.Add("ASPECTRADIO", "ASPECTRADIO")
            tableMapping.ColumnMappings.Add("TREADWEARINDICATORS", "TREADWEARINDICATORS")
            tableMapping.ColumnMappings.Add("NAMEOFMANUFACTURER", "NAMEOFMANUFACTURER")
            tableMapping.ColumnMappings.Add("FAMILY", "FAMILY")
            tableMapping.ColumnMappings.Add("DOTSERIALNUMBER", "DOTSERIALNUMBER")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALEXTENSION_EN", "SUPPLEMENTALEXTENSION_EN")
            tableMapping.ColumnMappings.Add("EXTENSION_EN", "EXTENSION_EN")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SKUID, SKU, BRANDCODE, TIRETYPEID, NPRID, SIZESTAMP, DISCONTINUEDDATE, SPE"& _ 
                "CNUMBER, SPEEDRATING, SINGLOADINDEX, DUALLOADINDEX, BELTEDRADIALYN, TUBELESSYN, "& _ 
                "REINFORCEDYN, EXTRALOADYN, MEASURINGRIM, UTQGTREADWEAR, UTQGTRACTION, UTQGTEMP, "& _ 
                "MUDSNOWYN, RIMDIAMETER, SERIALDATE, BRANDDESC, LOADRANGE, MEARIMWIDTH, REGROOVAB"& _ 
                "LEIND, PLANTPRODUCED, MOSTRECENTTESTDATE, IMARK, INFORMENUMBER, FECHADATE, TREAD"& _ 
                "PATTERN, SPECIALPROTECTIVEBAND, NOMINALTIREWIDTH, ASPECTRADIO, TREADWEARINDICATO"& _ 
                "RS, NAMEOFMANUFACTURER, FAMILY, DOTSERIALNUMBER, CERTIFICATENUMBER, SUPPLEMENTAL"& _ 
                "EXTENSION_EN, EXTENSION_EN FROM ICS.PRODUCTDATA_REPORT_VIEW"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ImarkSamplingAndTestDataSet.PRODUCTDATA_REPORT_VIEWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ImarkSamplingAndTestDataSet.PRODUCTDATA_REPORT_VIEWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ImarkSamplingAndTestDataSet.PRODUCTDATA_REPORT_VIEWDataTable = New ImarkSamplingAndTestDataSet.PRODUCTDATA_REPORT_VIEWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
