'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("EmarkPassengerWithTR"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class EmarkPassengerWithTR
    Inherits Global.System.Data.DataSet
    
    Private tableCERTIFICATE_VIEW As CERTIFICATE_VIEWDataTable
    
    Private tablePRODUCTDATA_REPORT_VIEW As PRODUCTDATA_REPORT_VIEWDataTable
    
    Private tableBEADUNSEATHDR As BEADUNSEATHDRDataTable
    
    Private tableBEADUNSEATDTL As BEADUNSEATDTLDataTable
    
    Private tableENDURANCEDTL As ENDURANCEDTLDataTable
    
    Private tableENDURANCEHDR As ENDURANCEHDRDataTable
    
    Private tableHIGHSPEEDDTL As HIGHSPEEDDTLDataTable
    
    Private tableHIGHSPEEDHDR As HIGHSPEEDHDRDataTable
    
    Private tableMEASUREDTL As MEASUREDTLDataTable
    
    Private tableMEASUREHDR As MEASUREHDRDataTable
    
    Private tablePLUNGERDTL As PLUNGERDTLDataTable
    
    Private tablePLUNGERHDR As PLUNGERHDRDataTable
    
    Private tableTREADWEARHDR As TREADWEARHDRDataTable
    
    Private tableTREADWEARDTL As TREADWEARDTLDataTable
    
    Private tableSPEEDTESTDETAIL As SPEEDTESTDETAILDataTable
    
    Private tableBRAND_VIEW As BRAND_VIEWDataTable
    
    Private tableDEFAULTVALUES_VIEW As DEFAULTVALUES_VIEWDataTable
    
    Private relationCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW As Global.System.Data.DataRelation
    
    Private relationPLUNGERDTL_PLUNGERHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_PLUNGERHDR As Global.System.Data.DataRelation
    
    Private relationMEASUREHDR_MEASUREDTL As Global.System.Data.DataRelation
    
    Private relationBEADUNSEATHDR_BEADUNSEATDTL As Global.System.Data.DataRelation
    
    Private relationHIGHSPEEDHDR_HIGHSPEEDDTL As Global.System.Data.DataRelation
    
    Private relationENDURANCEHDR_ENDURANCEDTL As Global.System.Data.DataRelation
    
    Private relationHIGHSPEEDHDR_SPEEDTESTDETAIL As Global.System.Data.DataRelation
    
    Private relationTREADWEARHDR_TREADWEARDTL As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_ENDURANCEHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_TREADWEARHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_MEASUREHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_HIGHSPEEDHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_BEADUNSEATHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_BRAND_VIEW As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_DEFAULTVALUES_VIEW As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CERTIFICATE_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New CERTIFICATE_VIEWDataTable(ds.Tables("CERTIFICATE_VIEW")))
            End If
            If (Not (ds.Tables("PRODUCTDATA_REPORT_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTDATA_REPORT_VIEWDataTable(ds.Tables("PRODUCTDATA_REPORT_VIEW")))
            End If
            If (Not (ds.Tables("BEADUNSEATHDR")) Is Nothing) Then
                MyBase.Tables.Add(New BEADUNSEATHDRDataTable(ds.Tables("BEADUNSEATHDR")))
            End If
            If (Not (ds.Tables("BEADUNSEATDTL")) Is Nothing) Then
                MyBase.Tables.Add(New BEADUNSEATDTLDataTable(ds.Tables("BEADUNSEATDTL")))
            End If
            If (Not (ds.Tables("ENDURANCEDTL")) Is Nothing) Then
                MyBase.Tables.Add(New ENDURANCEDTLDataTable(ds.Tables("ENDURANCEDTL")))
            End If
            If (Not (ds.Tables("ENDURANCEHDR")) Is Nothing) Then
                MyBase.Tables.Add(New ENDURANCEHDRDataTable(ds.Tables("ENDURANCEHDR")))
            End If
            If (Not (ds.Tables("HIGHSPEEDDTL")) Is Nothing) Then
                MyBase.Tables.Add(New HIGHSPEEDDTLDataTable(ds.Tables("HIGHSPEEDDTL")))
            End If
            If (Not (ds.Tables("HIGHSPEEDHDR")) Is Nothing) Then
                MyBase.Tables.Add(New HIGHSPEEDHDRDataTable(ds.Tables("HIGHSPEEDHDR")))
            End If
            If (Not (ds.Tables("MEASUREDTL")) Is Nothing) Then
                MyBase.Tables.Add(New MEASUREDTLDataTable(ds.Tables("MEASUREDTL")))
            End If
            If (Not (ds.Tables("MEASUREHDR")) Is Nothing) Then
                MyBase.Tables.Add(New MEASUREHDRDataTable(ds.Tables("MEASUREHDR")))
            End If
            If (Not (ds.Tables("PLUNGERDTL")) Is Nothing) Then
                MyBase.Tables.Add(New PLUNGERDTLDataTable(ds.Tables("PLUNGERDTL")))
            End If
            If (Not (ds.Tables("PLUNGERHDR")) Is Nothing) Then
                MyBase.Tables.Add(New PLUNGERHDRDataTable(ds.Tables("PLUNGERHDR")))
            End If
            If (Not (ds.Tables("TREADWEARHDR")) Is Nothing) Then
                MyBase.Tables.Add(New TREADWEARHDRDataTable(ds.Tables("TREADWEARHDR")))
            End If
            If (Not (ds.Tables("TREADWEARDTL")) Is Nothing) Then
                MyBase.Tables.Add(New TREADWEARDTLDataTable(ds.Tables("TREADWEARDTL")))
            End If
            If (Not (ds.Tables("SPEEDTESTDETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New SPEEDTESTDETAILDataTable(ds.Tables("SPEEDTESTDETAIL")))
            End If
            If (Not (ds.Tables("BRAND_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New BRAND_VIEWDataTable(ds.Tables("BRAND_VIEW")))
            End If
            If (Not (ds.Tables("DEFAULTVALUES_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New DEFAULTVALUES_VIEWDataTable(ds.Tables("DEFAULTVALUES_VIEW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CERTIFICATE_VIEW() As CERTIFICATE_VIEWDataTable
        Get
            Return Me.tableCERTIFICATE_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRODUCTDATA_REPORT_VIEW() As PRODUCTDATA_REPORT_VIEWDataTable
        Get
            Return Me.tablePRODUCTDATA_REPORT_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BEADUNSEATHDR() As BEADUNSEATHDRDataTable
        Get
            Return Me.tableBEADUNSEATHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BEADUNSEATDTL() As BEADUNSEATDTLDataTable
        Get
            Return Me.tableBEADUNSEATDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ENDURANCEDTL() As ENDURANCEDTLDataTable
        Get
            Return Me.tableENDURANCEDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ENDURANCEHDR() As ENDURANCEHDRDataTable
        Get
            Return Me.tableENDURANCEHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HIGHSPEEDDTL() As HIGHSPEEDDTLDataTable
        Get
            Return Me.tableHIGHSPEEDDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HIGHSPEEDHDR() As HIGHSPEEDHDRDataTable
        Get
            Return Me.tableHIGHSPEEDHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MEASUREDTL() As MEASUREDTLDataTable
        Get
            Return Me.tableMEASUREDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MEASUREHDR() As MEASUREHDRDataTable
        Get
            Return Me.tableMEASUREHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PLUNGERDTL() As PLUNGERDTLDataTable
        Get
            Return Me.tablePLUNGERDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PLUNGERHDR() As PLUNGERHDRDataTable
        Get
            Return Me.tablePLUNGERHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TREADWEARHDR() As TREADWEARHDRDataTable
        Get
            Return Me.tableTREADWEARHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TREADWEARDTL() As TREADWEARDTLDataTable
        Get
            Return Me.tableTREADWEARDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPEEDTESTDETAIL() As SPEEDTESTDETAILDataTable
        Get
            Return Me.tableSPEEDTESTDETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BRAND_VIEW() As BRAND_VIEWDataTable
        Get
            Return Me.tableBRAND_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DEFAULTVALUES_VIEW() As DEFAULTVALUES_VIEWDataTable
        Get
            Return Me.tableDEFAULTVALUES_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As EmarkPassengerWithTR = CType(MyBase.Clone,EmarkPassengerWithTR)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CERTIFICATE_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New CERTIFICATE_VIEWDataTable(ds.Tables("CERTIFICATE_VIEW")))
            End If
            If (Not (ds.Tables("PRODUCTDATA_REPORT_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTDATA_REPORT_VIEWDataTable(ds.Tables("PRODUCTDATA_REPORT_VIEW")))
            End If
            If (Not (ds.Tables("BEADUNSEATHDR")) Is Nothing) Then
                MyBase.Tables.Add(New BEADUNSEATHDRDataTable(ds.Tables("BEADUNSEATHDR")))
            End If
            If (Not (ds.Tables("BEADUNSEATDTL")) Is Nothing) Then
                MyBase.Tables.Add(New BEADUNSEATDTLDataTable(ds.Tables("BEADUNSEATDTL")))
            End If
            If (Not (ds.Tables("ENDURANCEDTL")) Is Nothing) Then
                MyBase.Tables.Add(New ENDURANCEDTLDataTable(ds.Tables("ENDURANCEDTL")))
            End If
            If (Not (ds.Tables("ENDURANCEHDR")) Is Nothing) Then
                MyBase.Tables.Add(New ENDURANCEHDRDataTable(ds.Tables("ENDURANCEHDR")))
            End If
            If (Not (ds.Tables("HIGHSPEEDDTL")) Is Nothing) Then
                MyBase.Tables.Add(New HIGHSPEEDDTLDataTable(ds.Tables("HIGHSPEEDDTL")))
            End If
            If (Not (ds.Tables("HIGHSPEEDHDR")) Is Nothing) Then
                MyBase.Tables.Add(New HIGHSPEEDHDRDataTable(ds.Tables("HIGHSPEEDHDR")))
            End If
            If (Not (ds.Tables("MEASUREDTL")) Is Nothing) Then
                MyBase.Tables.Add(New MEASUREDTLDataTable(ds.Tables("MEASUREDTL")))
            End If
            If (Not (ds.Tables("MEASUREHDR")) Is Nothing) Then
                MyBase.Tables.Add(New MEASUREHDRDataTable(ds.Tables("MEASUREHDR")))
            End If
            If (Not (ds.Tables("PLUNGERDTL")) Is Nothing) Then
                MyBase.Tables.Add(New PLUNGERDTLDataTable(ds.Tables("PLUNGERDTL")))
            End If
            If (Not (ds.Tables("PLUNGERHDR")) Is Nothing) Then
                MyBase.Tables.Add(New PLUNGERHDRDataTable(ds.Tables("PLUNGERHDR")))
            End If
            If (Not (ds.Tables("TREADWEARHDR")) Is Nothing) Then
                MyBase.Tables.Add(New TREADWEARHDRDataTable(ds.Tables("TREADWEARHDR")))
            End If
            If (Not (ds.Tables("TREADWEARDTL")) Is Nothing) Then
                MyBase.Tables.Add(New TREADWEARDTLDataTable(ds.Tables("TREADWEARDTL")))
            End If
            If (Not (ds.Tables("SPEEDTESTDETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New SPEEDTESTDETAILDataTable(ds.Tables("SPEEDTESTDETAIL")))
            End If
            If (Not (ds.Tables("BRAND_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New BRAND_VIEWDataTable(ds.Tables("BRAND_VIEW")))
            End If
            If (Not (ds.Tables("DEFAULTVALUES_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New DEFAULTVALUES_VIEWDataTable(ds.Tables("DEFAULTVALUES_VIEW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCERTIFICATE_VIEW = CType(MyBase.Tables("CERTIFICATE_VIEW"),CERTIFICATE_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCERTIFICATE_VIEW) Is Nothing) Then
                Me.tableCERTIFICATE_VIEW.InitVars
            End If
        End If
        Me.tablePRODUCTDATA_REPORT_VIEW = CType(MyBase.Tables("PRODUCTDATA_REPORT_VIEW"),PRODUCTDATA_REPORT_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRODUCTDATA_REPORT_VIEW) Is Nothing) Then
                Me.tablePRODUCTDATA_REPORT_VIEW.InitVars
            End If
        End If
        Me.tableBEADUNSEATHDR = CType(MyBase.Tables("BEADUNSEATHDR"),BEADUNSEATHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBEADUNSEATHDR) Is Nothing) Then
                Me.tableBEADUNSEATHDR.InitVars
            End If
        End If
        Me.tableBEADUNSEATDTL = CType(MyBase.Tables("BEADUNSEATDTL"),BEADUNSEATDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBEADUNSEATDTL) Is Nothing) Then
                Me.tableBEADUNSEATDTL.InitVars
            End If
        End If
        Me.tableENDURANCEDTL = CType(MyBase.Tables("ENDURANCEDTL"),ENDURANCEDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableENDURANCEDTL) Is Nothing) Then
                Me.tableENDURANCEDTL.InitVars
            End If
        End If
        Me.tableENDURANCEHDR = CType(MyBase.Tables("ENDURANCEHDR"),ENDURANCEHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableENDURANCEHDR) Is Nothing) Then
                Me.tableENDURANCEHDR.InitVars
            End If
        End If
        Me.tableHIGHSPEEDDTL = CType(MyBase.Tables("HIGHSPEEDDTL"),HIGHSPEEDDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHIGHSPEEDDTL) Is Nothing) Then
                Me.tableHIGHSPEEDDTL.InitVars
            End If
        End If
        Me.tableHIGHSPEEDHDR = CType(MyBase.Tables("HIGHSPEEDHDR"),HIGHSPEEDHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHIGHSPEEDHDR) Is Nothing) Then
                Me.tableHIGHSPEEDHDR.InitVars
            End If
        End If
        Me.tableMEASUREDTL = CType(MyBase.Tables("MEASUREDTL"),MEASUREDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMEASUREDTL) Is Nothing) Then
                Me.tableMEASUREDTL.InitVars
            End If
        End If
        Me.tableMEASUREHDR = CType(MyBase.Tables("MEASUREHDR"),MEASUREHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMEASUREHDR) Is Nothing) Then
                Me.tableMEASUREHDR.InitVars
            End If
        End If
        Me.tablePLUNGERDTL = CType(MyBase.Tables("PLUNGERDTL"),PLUNGERDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePLUNGERDTL) Is Nothing) Then
                Me.tablePLUNGERDTL.InitVars
            End If
        End If
        Me.tablePLUNGERHDR = CType(MyBase.Tables("PLUNGERHDR"),PLUNGERHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePLUNGERHDR) Is Nothing) Then
                Me.tablePLUNGERHDR.InitVars
            End If
        End If
        Me.tableTREADWEARHDR = CType(MyBase.Tables("TREADWEARHDR"),TREADWEARHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTREADWEARHDR) Is Nothing) Then
                Me.tableTREADWEARHDR.InitVars
            End If
        End If
        Me.tableTREADWEARDTL = CType(MyBase.Tables("TREADWEARDTL"),TREADWEARDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTREADWEARDTL) Is Nothing) Then
                Me.tableTREADWEARDTL.InitVars
            End If
        End If
        Me.tableSPEEDTESTDETAIL = CType(MyBase.Tables("SPEEDTESTDETAIL"),SPEEDTESTDETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPEEDTESTDETAIL) Is Nothing) Then
                Me.tableSPEEDTESTDETAIL.InitVars
            End If
        End If
        Me.tableBRAND_VIEW = CType(MyBase.Tables("BRAND_VIEW"),BRAND_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBRAND_VIEW) Is Nothing) Then
                Me.tableBRAND_VIEW.InitVars
            End If
        End If
        Me.tableDEFAULTVALUES_VIEW = CType(MyBase.Tables("DEFAULTVALUES_VIEW"),DEFAULTVALUES_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDEFAULTVALUES_VIEW) Is Nothing) Then
                Me.tableDEFAULTVALUES_VIEW.InitVars
            End If
        End If
        Me.relationCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW = Me.Relations("CERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW")
        Me.relationPLUNGERDTL_PLUNGERHDR = Me.Relations("PLUNGERDTL_PLUNGERHDR")
        Me.relationCERTIFICATE_VIEW_PLUNGERHDR = Me.Relations("CERTIFICATE_VIEW_PLUNGERHDR")
        Me.relationMEASUREHDR_MEASUREDTL = Me.Relations("MEASUREHDR_MEASUREDTL")
        Me.relationBEADUNSEATHDR_BEADUNSEATDTL = Me.Relations("BEADUNSEATHDR_BEADUNSEATDTL")
        Me.relationHIGHSPEEDHDR_HIGHSPEEDDTL = Me.Relations("HIGHSPEEDHDR_HIGHSPEEDDTL")
        Me.relationENDURANCEHDR_ENDURANCEDTL = Me.Relations("ENDURANCEHDR_ENDURANCEDTL")
        Me.relationHIGHSPEEDHDR_SPEEDTESTDETAIL = Me.Relations("HIGHSPEEDHDR_SPEEDTESTDETAIL")
        Me.relationTREADWEARHDR_TREADWEARDTL = Me.Relations("TREADWEARHDR_TREADWEARDTL")
        Me.relationCERTIFICATE_VIEW_ENDURANCEHDR = Me.Relations("CERTIFICATE_VIEW_ENDURANCEHDR")
        Me.relationCERTIFICATE_VIEW_TREADWEARHDR = Me.Relations("CERTIFICATE_VIEW_TREADWEARHDR")
        Me.relationCERTIFICATE_VIEW_MEASUREHDR = Me.Relations("CERTIFICATE_VIEW_MEASUREHDR")
        Me.relationCERTIFICATE_VIEW_HIGHSPEEDHDR = Me.Relations("CERTIFICATE_VIEW_HIGHSPEEDHDR")
        Me.relationCERTIFICATE_VIEW_BEADUNSEATHDR = Me.Relations("CERTIFICATE_VIEW_BEADUNSEATHDR")
        Me.relationCERTIFICATE_VIEW_BRAND_VIEW = Me.Relations("CERTIFICATE_VIEW_BRAND_VIEW")
        Me.relationCERTIFICATE_VIEW_DEFAULTVALUES_VIEW = Me.Relations("CERTIFICATE_VIEW_DEFAULTVALUES_VIEW")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "EmarkPassengerWithTR"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/EmarkPassengerWithTR.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCERTIFICATE_VIEW = New CERTIFICATE_VIEWDataTable()
        MyBase.Tables.Add(Me.tableCERTIFICATE_VIEW)
        Me.tablePRODUCTDATA_REPORT_VIEW = New PRODUCTDATA_REPORT_VIEWDataTable()
        MyBase.Tables.Add(Me.tablePRODUCTDATA_REPORT_VIEW)
        Me.tableBEADUNSEATHDR = New BEADUNSEATHDRDataTable()
        MyBase.Tables.Add(Me.tableBEADUNSEATHDR)
        Me.tableBEADUNSEATDTL = New BEADUNSEATDTLDataTable()
        MyBase.Tables.Add(Me.tableBEADUNSEATDTL)
        Me.tableENDURANCEDTL = New ENDURANCEDTLDataTable()
        MyBase.Tables.Add(Me.tableENDURANCEDTL)
        Me.tableENDURANCEHDR = New ENDURANCEHDRDataTable()
        MyBase.Tables.Add(Me.tableENDURANCEHDR)
        Me.tableHIGHSPEEDDTL = New HIGHSPEEDDTLDataTable()
        MyBase.Tables.Add(Me.tableHIGHSPEEDDTL)
        Me.tableHIGHSPEEDHDR = New HIGHSPEEDHDRDataTable()
        MyBase.Tables.Add(Me.tableHIGHSPEEDHDR)
        Me.tableMEASUREDTL = New MEASUREDTLDataTable()
        MyBase.Tables.Add(Me.tableMEASUREDTL)
        Me.tableMEASUREHDR = New MEASUREHDRDataTable()
        MyBase.Tables.Add(Me.tableMEASUREHDR)
        Me.tablePLUNGERDTL = New PLUNGERDTLDataTable()
        MyBase.Tables.Add(Me.tablePLUNGERDTL)
        Me.tablePLUNGERHDR = New PLUNGERHDRDataTable()
        MyBase.Tables.Add(Me.tablePLUNGERHDR)
        Me.tableTREADWEARHDR = New TREADWEARHDRDataTable()
        MyBase.Tables.Add(Me.tableTREADWEARHDR)
        Me.tableTREADWEARDTL = New TREADWEARDTLDataTable()
        MyBase.Tables.Add(Me.tableTREADWEARDTL)
        Me.tableSPEEDTESTDETAIL = New SPEEDTESTDETAILDataTable()
        MyBase.Tables.Add(Me.tableSPEEDTESTDETAIL)
        Me.tableBRAND_VIEW = New BRAND_VIEWDataTable()
        MyBase.Tables.Add(Me.tableBRAND_VIEW)
        Me.tableDEFAULTVALUES_VIEW = New DEFAULTVALUES_VIEWDataTable()
        MyBase.Tables.Add(Me.tableDEFAULTVALUES_VIEW)
        Me.relationCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.SKUIDColumn}, New Global.System.Data.DataColumn() {Me.tablePRODUCTDATA_REPORT_VIEW.SKUIDColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW)
        Me.relationPLUNGERDTL_PLUNGERHDR = New Global.System.Data.DataRelation("PLUNGERDTL_PLUNGERHDR", New Global.System.Data.DataColumn() {Me.tablePLUNGERHDR.PLUNGERIDColumn}, New Global.System.Data.DataColumn() {Me.tablePLUNGERDTL.PLUNGERIDColumn}, false)
        Me.Relations.Add(Me.relationPLUNGERDTL_PLUNGERHDR)
        Me.relationCERTIFICATE_VIEW_PLUNGERHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_PLUNGERHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tablePLUNGERHDR.CERTIFICATIONTYPEIDColumn, Me.tablePLUNGERHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_PLUNGERHDR)
        Me.relationMEASUREHDR_MEASUREDTL = New Global.System.Data.DataRelation("MEASUREHDR_MEASUREDTL", New Global.System.Data.DataColumn() {Me.tableMEASUREHDR.MEASUREIDColumn}, New Global.System.Data.DataColumn() {Me.tableMEASUREDTL.MEASUREIDColumn}, false)
        Me.Relations.Add(Me.relationMEASUREHDR_MEASUREDTL)
        Me.relationBEADUNSEATHDR_BEADUNSEATDTL = New Global.System.Data.DataRelation("BEADUNSEATHDR_BEADUNSEATDTL", New Global.System.Data.DataColumn() {Me.tableBEADUNSEATHDR.BEADUNSEATIDColumn}, New Global.System.Data.DataColumn() {Me.tableBEADUNSEATDTL.BEADUNSEATIDColumn}, false)
        Me.Relations.Add(Me.relationBEADUNSEATHDR_BEADUNSEATDTL)
        Me.relationHIGHSPEEDHDR_HIGHSPEEDDTL = New Global.System.Data.DataRelation("HIGHSPEEDHDR_HIGHSPEEDDTL", New Global.System.Data.DataColumn() {Me.tableHIGHSPEEDHDR.HIGHSPEEDIDColumn}, New Global.System.Data.DataColumn() {Me.tableHIGHSPEEDDTL.HIGHSPEEDIDColumn}, false)
        Me.Relations.Add(Me.relationHIGHSPEEDHDR_HIGHSPEEDDTL)
        Me.relationENDURANCEHDR_ENDURANCEDTL = New Global.System.Data.DataRelation("ENDURANCEHDR_ENDURANCEDTL", New Global.System.Data.DataColumn() {Me.tableENDURANCEHDR.ENDURANCEIDColumn}, New Global.System.Data.DataColumn() {Me.tableENDURANCEDTL.ENDURANCEIDColumn}, false)
        Me.Relations.Add(Me.relationENDURANCEHDR_ENDURANCEDTL)
        Me.relationHIGHSPEEDHDR_SPEEDTESTDETAIL = New Global.System.Data.DataRelation("HIGHSPEEDHDR_SPEEDTESTDETAIL", New Global.System.Data.DataColumn() {Me.tableHIGHSPEEDHDR.HIGHSPEEDIDColumn}, New Global.System.Data.DataColumn() {Me.tableSPEEDTESTDETAIL.HIGHSPEEDIDColumn}, false)
        Me.Relations.Add(Me.relationHIGHSPEEDHDR_SPEEDTESTDETAIL)
        Me.relationTREADWEARHDR_TREADWEARDTL = New Global.System.Data.DataRelation("TREADWEARHDR_TREADWEARDTL", New Global.System.Data.DataColumn() {Me.tableTREADWEARHDR.TREADWEARIDColumn}, New Global.System.Data.DataColumn() {Me.tableTREADWEARDTL.TREADWEARIDColumn}, false)
        Me.Relations.Add(Me.relationTREADWEARHDR_TREADWEARDTL)
        Me.relationCERTIFICATE_VIEW_ENDURANCEHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_ENDURANCEHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableENDURANCEHDR.CERTIFICATIONTYPEIDColumn, Me.tableENDURANCEHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_ENDURANCEHDR)
        Me.relationCERTIFICATE_VIEW_TREADWEARHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_TREADWEARHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableTREADWEARHDR.CERTIFICATIONTYPEIDColumn, Me.tableTREADWEARHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_TREADWEARHDR)
        Me.relationCERTIFICATE_VIEW_MEASUREHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_MEASUREHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableMEASUREHDR.CERTIFICATIONTYPEIDColumn, Me.tableMEASUREHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_MEASUREHDR)
        Me.relationCERTIFICATE_VIEW_HIGHSPEEDHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_HIGHSPEEDHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableHIGHSPEEDHDR.CERTIFICATIONTYPEIDColumn, Me.tableHIGHSPEEDHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_HIGHSPEEDHDR)
        Me.relationCERTIFICATE_VIEW_BEADUNSEATHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_BEADUNSEATHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableBEADUNSEATHDR.CERTIFICATIONTYPEIDColumn, Me.tableBEADUNSEATHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_BEADUNSEATHDR)
        Me.relationCERTIFICATE_VIEW_BRAND_VIEW = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_BRAND_VIEW", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableBRAND_VIEW.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_BRAND_VIEW)
        Me.relationCERTIFICATE_VIEW_DEFAULTVALUES_VIEW = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_DEFAULTVALUES_VIEW", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_DEFAULTVALUES_VIEW)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCERTIFICATE_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePRODUCTDATA_REPORT_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBEADUNSEATHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBEADUNSEATDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeENDURANCEDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeENDURANCEHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHIGHSPEEDDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHIGHSPEEDHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMEASUREDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMEASUREHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePLUNGERDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePLUNGERHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTREADWEARHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTREADWEARDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSPEEDTESTDETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBRAND_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDEFAULTVALUES_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CERTIFICATE_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As CERTIFICATE_VIEWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PRODUCTDATA_REPORT_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As PRODUCTDATA_REPORT_VIEWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BEADUNSEATHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As BEADUNSEATHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BEADUNSEATDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As BEADUNSEATDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ENDURANCEDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As ENDURANCEDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ENDURANCEHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As ENDURANCEHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HIGHSPEEDDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As HIGHSPEEDDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HIGHSPEEDHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As HIGHSPEEDHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MEASUREDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As MEASUREDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MEASUREHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As MEASUREHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PLUNGERDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As PLUNGERDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PLUNGERHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As PLUNGERHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TREADWEARHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As TREADWEARHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TREADWEARDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As TREADWEARDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SPEEDTESTDETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As SPEEDTESTDETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BRAND_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As BRAND_VIEWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DEFAULTVALUES_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As DEFAULTVALUES_VIEWRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CERTIFICATE_VIEWDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSKUID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPENAME As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnDATESUBMITED As Global.System.Data.DataColumn
        
        Private columnACTIVESTATUS As Global.System.Data.DataColumn
        
        Private columnDATEASSIGNED_EGI As Global.System.Data.DataColumn
        
        Private columnDATEAPPROVED_CEGI As Global.System.Data.DataColumn
        
        Private columnRENEWALREQUIRED_CGIN As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALREQUIRED_EI As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALNUMBER_EI As Global.System.Data.DataColumn
        
        Private columnJOBREPORTNUMBER_CEN As Global.System.Data.DataColumn
        
        Private columnEXTENSION_EN As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALMOLDSTAMPING_E As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALDATEASSIGNED_E As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALDATESUBMITTED_E As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALDATEAPPROVED_E As Global.System.Data.DataColumn
        
        Private columnEMARKREFERENCE_I As Global.System.Data.DataColumn
        
        Private columnEXPIRYDATE_I As Global.System.Data.DataColumn
        
        Private columnFAMILY_I As Global.System.Data.DataColumn
        
        Private columnPRODUCTLOCATION_C As Global.System.Data.DataColumn
        
        Private columnCOUNTRYOFMANUFACTURE_N As Global.System.Data.DataColumn
        
        Private columnCUSTOMER_N As Global.System.Data.DataColumn
        
        Private columnCUSTOMERSPECIFIC_N As Global.System.Data.DataColumn
        
        Private columnIMPORTER_N As Global.System.Data.DataColumn
        
        Private columnIMPORTERADDRESS_N As Global.System.Data.DataColumn
        
        Private columnIMPORTERREPRESENTATIVE_N As Global.System.Data.DataColumn
        
        Private columnCOUNTRYLOCATION_N As Global.System.Data.DataColumn
        
        Private columnBATCHNUMBER_G As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CERTIFICATE_VIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPENAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATESUBMITEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATESUBMITED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTIVESTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTIVESTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEASSIGNED_EGIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEASSIGNED_EGI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEAPPROVED_CEGIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEAPPROVED_CEGI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RENEWALREQUIRED_CGINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRENEWALREQUIRED_CGIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALREQUIRED_EIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALREQUIRED_EI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALNUMBER_EIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALNUMBER_EI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOBREPORTNUMBER_CENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOBREPORTNUMBER_CEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALMOLDSTAMPING_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALMOLDSTAMPING_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALDATEASSIGNED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALDATEASSIGNED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALDATESUBMITTED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALDATESUBMITTED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALDATEAPPROVED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALDATEAPPROVED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMARKREFERENCE_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMARKREFERENCE_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXPIRYDATE_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXPIRYDATE_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAMILY_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILY_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTLOCATION_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTLOCATION_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COUNTRYOFMANUFACTURE_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNTRYOFMANUFACTURE_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTOMER_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMER_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTOMERSPECIFIC_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMERSPECIFIC_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTER_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTER_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTERADDRESS_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTERADDRESS_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTERREPRESENTATIVE_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTERREPRESENTATIVE_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COUNTRYLOCATION_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNTRYLOCATION_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BATCHNUMBER_GColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBATCHNUMBER_G
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.Rows(index),CERTIFICATE_VIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CERTIFICATE_VIEWRowChanging As CERTIFICATE_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CERTIFICATE_VIEWRowChanged As CERTIFICATE_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CERTIFICATE_VIEWRowDeleting As CERTIFICATE_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CERTIFICATE_VIEWRowDeleted As CERTIFICATE_VIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCERTIFICATE_VIEWRow(ByVal row As CERTIFICATE_VIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCERTIFICATE_VIEWRow( _
                    ByVal SKUID As Decimal,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATIONTYPENAME As String,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal DATESUBMITED As Date,  _
                    ByVal ACTIVESTATUS As String,  _
                    ByVal DATEASSIGNED_EGI As Date,  _
                    ByVal DATEAPPROVED_CEGI As Date,  _
                    ByVal RENEWALREQUIRED_CGIN As String,  _
                    ByVal SUPPLEMENTALREQUIRED_EI As String,  _
                    ByVal SUPPLEMENTALNUMBER_EI As String,  _
                    ByVal JOBREPORTNUMBER_CEN As String,  _
                    ByVal EXTENSION_EN As String,  _
                    ByVal SUPPLEMENTALMOLDSTAMPING_E As String,  _
                    ByVal SUPPLEMENTALDATEASSIGNED_E As Date,  _
                    ByVal SUPPLEMENTALDATESUBMITTED_E As Date,  _
                    ByVal SUPPLEMENTALDATEAPPROVED_E As Date,  _
                    ByVal EMARKREFERENCE_I As String,  _
                    ByVal EXPIRYDATE_I As Date,  _
                    ByVal FAMILY_I As String,  _
                    ByVal PRODUCTLOCATION_C As String,  _
                    ByVal COUNTRYOFMANUFACTURE_N As String,  _
                    ByVal CUSTOMER_N As String,  _
                    ByVal CUSTOMERSPECIFIC_N As String,  _
                    ByVal IMPORTER_N As String,  _
                    ByVal IMPORTERADDRESS_N As String,  _
                    ByVal IMPORTERREPRESENTATIVE_N As String,  _
                    ByVal COUNTRYLOCATION_N As String,  _
                    ByVal BATCHNUMBER_G As String) As CERTIFICATE_VIEWRow
            Dim rowCERTIFICATE_VIEWRow As CERTIFICATE_VIEWRow = CType(Me.NewRow,CERTIFICATE_VIEWRow)
            Dim columnValuesArray() As Object = New Object() {SKUID, CERTIFICATIONTYPEID, CERTIFICATIONTYPENAME, CERTIFICATENUMBER, DATESUBMITED, ACTIVESTATUS, DATEASSIGNED_EGI, DATEAPPROVED_CEGI, RENEWALREQUIRED_CGIN, SUPPLEMENTALREQUIRED_EI, SUPPLEMENTALNUMBER_EI, JOBREPORTNUMBER_CEN, EXTENSION_EN, SUPPLEMENTALMOLDSTAMPING_E, SUPPLEMENTALDATEASSIGNED_E, SUPPLEMENTALDATESUBMITTED_E, SUPPLEMENTALDATEAPPROVED_E, EMARKREFERENCE_I, EXPIRYDATE_I, FAMILY_I, PRODUCTLOCATION_C, COUNTRYOFMANUFACTURE_N, CUSTOMER_N, CUSTOMERSPECIFIC_N, IMPORTER_N, IMPORTERADDRESS_N, IMPORTERREPRESENTATIVE_N, COUNTRYLOCATION_N, BATCHNUMBER_G}
            rowCERTIFICATE_VIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCERTIFICATE_VIEWRow)
            Return rowCERTIFICATE_VIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CERTIFICATE_VIEWDataTable = CType(MyBase.Clone,CERTIFICATE_VIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CERTIFICATE_VIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSKUID = MyBase.Columns("SKUID")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATIONTYPENAME = MyBase.Columns("CERTIFICATIONTYPENAME")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnDATESUBMITED = MyBase.Columns("DATESUBMITED")
            Me.columnACTIVESTATUS = MyBase.Columns("ACTIVESTATUS")
            Me.columnDATEASSIGNED_EGI = MyBase.Columns("DATEASSIGNED_EGI")
            Me.columnDATEAPPROVED_CEGI = MyBase.Columns("DATEAPPROVED_CEGI")
            Me.columnRENEWALREQUIRED_CGIN = MyBase.Columns("RENEWALREQUIRED_CGIN")
            Me.columnSUPPLEMENTALREQUIRED_EI = MyBase.Columns("SUPPLEMENTALREQUIRED_EI")
            Me.columnSUPPLEMENTALNUMBER_EI = MyBase.Columns("SUPPLEMENTALNUMBER_EI")
            Me.columnJOBREPORTNUMBER_CEN = MyBase.Columns("JOBREPORTNUMBER_CEN")
            Me.columnEXTENSION_EN = MyBase.Columns("EXTENSION_EN")
            Me.columnSUPPLEMENTALMOLDSTAMPING_E = MyBase.Columns("SUPPLEMENTALMOLDSTAMPING_E")
            Me.columnSUPPLEMENTALDATEASSIGNED_E = MyBase.Columns("SUPPLEMENTALDATEASSIGNED_E")
            Me.columnSUPPLEMENTALDATESUBMITTED_E = MyBase.Columns("SUPPLEMENTALDATESUBMITTED_E")
            Me.columnSUPPLEMENTALDATEAPPROVED_E = MyBase.Columns("SUPPLEMENTALDATEAPPROVED_E")
            Me.columnEMARKREFERENCE_I = MyBase.Columns("EMARKREFERENCE_I")
            Me.columnEXPIRYDATE_I = MyBase.Columns("EXPIRYDATE_I")
            Me.columnFAMILY_I = MyBase.Columns("FAMILY_I")
            Me.columnPRODUCTLOCATION_C = MyBase.Columns("PRODUCTLOCATION_C")
            Me.columnCOUNTRYOFMANUFACTURE_N = MyBase.Columns("COUNTRYOFMANUFACTURE_N")
            Me.columnCUSTOMER_N = MyBase.Columns("CUSTOMER_N")
            Me.columnCUSTOMERSPECIFIC_N = MyBase.Columns("CUSTOMERSPECIFIC_N")
            Me.columnIMPORTER_N = MyBase.Columns("IMPORTER_N")
            Me.columnIMPORTERADDRESS_N = MyBase.Columns("IMPORTERADDRESS_N")
            Me.columnIMPORTERREPRESENTATIVE_N = MyBase.Columns("IMPORTERREPRESENTATIVE_N")
            Me.columnCOUNTRYLOCATION_N = MyBase.Columns("COUNTRYLOCATION_N")
            Me.columnBATCHNUMBER_G = MyBase.Columns("BATCHNUMBER_G")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSKUID = New Global.System.Data.DataColumn("SKUID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKUID)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATIONTYPENAME = New Global.System.Data.DataColumn("CERTIFICATIONTYPENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPENAME)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnDATESUBMITED = New Global.System.Data.DataColumn("DATESUBMITED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATESUBMITED)
            Me.columnACTIVESTATUS = New Global.System.Data.DataColumn("ACTIVESTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTIVESTATUS)
            Me.columnDATEASSIGNED_EGI = New Global.System.Data.DataColumn("DATEASSIGNED_EGI", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEASSIGNED_EGI)
            Me.columnDATEAPPROVED_CEGI = New Global.System.Data.DataColumn("DATEAPPROVED_CEGI", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEAPPROVED_CEGI)
            Me.columnRENEWALREQUIRED_CGIN = New Global.System.Data.DataColumn("RENEWALREQUIRED_CGIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRENEWALREQUIRED_CGIN)
            Me.columnSUPPLEMENTALREQUIRED_EI = New Global.System.Data.DataColumn("SUPPLEMENTALREQUIRED_EI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALREQUIRED_EI)
            Me.columnSUPPLEMENTALNUMBER_EI = New Global.System.Data.DataColumn("SUPPLEMENTALNUMBER_EI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALNUMBER_EI)
            Me.columnJOBREPORTNUMBER_CEN = New Global.System.Data.DataColumn("JOBREPORTNUMBER_CEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOBREPORTNUMBER_CEN)
            Me.columnEXTENSION_EN = New Global.System.Data.DataColumn("EXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION_EN)
            Me.columnSUPPLEMENTALMOLDSTAMPING_E = New Global.System.Data.DataColumn("SUPPLEMENTALMOLDSTAMPING_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALMOLDSTAMPING_E)
            Me.columnSUPPLEMENTALDATEASSIGNED_E = New Global.System.Data.DataColumn("SUPPLEMENTALDATEASSIGNED_E", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALDATEASSIGNED_E)
            Me.columnSUPPLEMENTALDATESUBMITTED_E = New Global.System.Data.DataColumn("SUPPLEMENTALDATESUBMITTED_E", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALDATESUBMITTED_E)
            Me.columnSUPPLEMENTALDATEAPPROVED_E = New Global.System.Data.DataColumn("SUPPLEMENTALDATEAPPROVED_E", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALDATEAPPROVED_E)
            Me.columnEMARKREFERENCE_I = New Global.System.Data.DataColumn("EMARKREFERENCE_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMARKREFERENCE_I)
            Me.columnEXPIRYDATE_I = New Global.System.Data.DataColumn("EXPIRYDATE_I", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXPIRYDATE_I)
            Me.columnFAMILY_I = New Global.System.Data.DataColumn("FAMILY_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILY_I)
            Me.columnPRODUCTLOCATION_C = New Global.System.Data.DataColumn("PRODUCTLOCATION_C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTLOCATION_C)
            Me.columnCOUNTRYOFMANUFACTURE_N = New Global.System.Data.DataColumn("COUNTRYOFMANUFACTURE_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNTRYOFMANUFACTURE_N)
            Me.columnCUSTOMER_N = New Global.System.Data.DataColumn("CUSTOMER_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMER_N)
            Me.columnCUSTOMERSPECIFIC_N = New Global.System.Data.DataColumn("CUSTOMERSPECIFIC_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMERSPECIFIC_N)
            Me.columnIMPORTER_N = New Global.System.Data.DataColumn("IMPORTER_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTER_N)
            Me.columnIMPORTERADDRESS_N = New Global.System.Data.DataColumn("IMPORTERADDRESS_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTERADDRESS_N)
            Me.columnIMPORTERREPRESENTATIVE_N = New Global.System.Data.DataColumn("IMPORTERREPRESENTATIVE_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTERREPRESENTATIVE_N)
            Me.columnCOUNTRYLOCATION_N = New Global.System.Data.DataColumn("COUNTRYLOCATION_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNTRYLOCATION_N)
            Me.columnBATCHNUMBER_G = New Global.System.Data.DataColumn("BATCHNUMBER_G", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBATCHNUMBER_G)
            Me.columnSKUID.AllowDBNull = false
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATIONTYPENAME.MaxLength = 50
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnACTIVESTATUS.MaxLength = 1
            Me.columnRENEWALREQUIRED_CGIN.MaxLength = 1
            Me.columnSUPPLEMENTALREQUIRED_EI.MaxLength = 1
            Me.columnSUPPLEMENTALNUMBER_EI.MaxLength = 120
            Me.columnJOBREPORTNUMBER_CEN.MaxLength = 120
            Me.columnEXTENSION_EN.MaxLength = 120
            Me.columnSUPPLEMENTALMOLDSTAMPING_E.MaxLength = 120
            Me.columnEMARKREFERENCE_I.MaxLength = 120
            Me.columnFAMILY_I.MaxLength = 120
            Me.columnPRODUCTLOCATION_C.MaxLength = 200
            Me.columnCOUNTRYOFMANUFACTURE_N.MaxLength = 200
            Me.columnCUSTOMER_N.MaxLength = 400
            Me.columnCUSTOMERSPECIFIC_N.MaxLength = 1
            Me.columnIMPORTER_N.MaxLength = 400
            Me.columnIMPORTERADDRESS_N.MaxLength = 800
            Me.columnIMPORTERREPRESENTATIVE_N.MaxLength = 400
            Me.columnCOUNTRYLOCATION_N.MaxLength = 400
            Me.columnBATCHNUMBER_G.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCERTIFICATE_VIEWRow() As CERTIFICATE_VIEWRow
            Return CType(Me.NewRow,CERTIFICATE_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CERTIFICATE_VIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CERTIFICATE_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CERTIFICATE_VIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent CERTIFICATE_VIEWRowChanged(Me, New CERTIFICATE_VIEWRowChangeEvent(CType(e.Row,CERTIFICATE_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CERTIFICATE_VIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent CERTIFICATE_VIEWRowChanging(Me, New CERTIFICATE_VIEWRowChangeEvent(CType(e.Row,CERTIFICATE_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CERTIFICATE_VIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent CERTIFICATE_VIEWRowDeleted(Me, New CERTIFICATE_VIEWRowChangeEvent(CType(e.Row,CERTIFICATE_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CERTIFICATE_VIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent CERTIFICATE_VIEWRowDeleting(Me, New CERTIFICATE_VIEWRowChangeEvent(CType(e.Row,CERTIFICATE_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCERTIFICATE_VIEWRow(ByVal row As CERTIFICATE_VIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CERTIFICATE_VIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRODUCTDATA_REPORT_VIEWDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSKUID As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnBRANDCODE As Global.System.Data.DataColumn
        
        Private columnTIRETYPEID As Global.System.Data.DataColumn
        
        Private columnNPRID As Global.System.Data.DataColumn
        
        Private columnSIZESTAMP As Global.System.Data.DataColumn
        
        Private columnDISCONTINUEDDATE As Global.System.Data.DataColumn
        
        Private columnSPECNUMBER As Global.System.Data.DataColumn
        
        Private columnSPEEDRATING As Global.System.Data.DataColumn
        
        Private columnSINGLOADINDEX As Global.System.Data.DataColumn
        
        Private columnDUALLOADINDEX As Global.System.Data.DataColumn
        
        Private columnBELTEDRADIALYN As Global.System.Data.DataColumn
        
        Private columnTUBELESSYN As Global.System.Data.DataColumn
        
        Private columnREINFORCEDYN As Global.System.Data.DataColumn
        
        Private columnEXTRALOADYN As Global.System.Data.DataColumn
        
        Private columnMEASURINGRIM As Global.System.Data.DataColumn
        
        Private columnUTQGTREADWEAR As Global.System.Data.DataColumn
        
        Private columnUTQGTRACTION As Global.System.Data.DataColumn
        
        Private columnUTQGTEMP As Global.System.Data.DataColumn
        
        Private columnMUDSNOWYN As Global.System.Data.DataColumn
        
        Private columnRIMDIAMETER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnBRANDDESC As Global.System.Data.DataColumn
        
        Private columnLOADRANGE As Global.System.Data.DataColumn
        
        Private columnMEARIMWIDTH As Global.System.Data.DataColumn
        
        Private columnREGROOVABLEIND As Global.System.Data.DataColumn
        
        Private columnPLANTPRODUCED As Global.System.Data.DataColumn
        
        Private columnMOSTRECENTTESTDATE As Global.System.Data.DataColumn
        
        Private columnIMARK As Global.System.Data.DataColumn
        
        Private columnINFORMENUMBER As Global.System.Data.DataColumn
        
        Private columnFECHADATE As Global.System.Data.DataColumn
        
        Private columnTREADPATTERN As Global.System.Data.DataColumn
        
        Private columnSPECIALPROTECTIVEBAND As Global.System.Data.DataColumn
        
        Private columnNOMINALTIREWIDTH As Global.System.Data.DataColumn
        
        Private columnASPECTRADIO As Global.System.Data.DataColumn
        
        Private columnTREADWEARINDICATORS As Global.System.Data.DataColumn
        
        Private columnNAMEOFMANUFACTURER As Global.System.Data.DataColumn
        
        Private columnFAMILY As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALEXTENSION_EN As Global.System.Data.DataColumn
        
        Private columnEXTENSION_EN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRODUCTDATA_REPORT_VIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRETYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRETYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NPRIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNPRID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIZESTAMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZESTAMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCONTINUEDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCONTINUEDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDRATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDRATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SINGLOADINDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSINGLOADINDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DUALLOADINDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDUALLOADINDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BELTEDRADIALYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBELTEDRADIALYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TUBELESSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTUBELESSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REINFORCEDYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREINFORCEDYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTRALOADYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRALOADYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEASURINGRIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEASURINGRIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTREADWEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTREADWEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTRACTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTRACTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MUDSNOWYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUDSNOWYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADRANGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOADRANGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEARIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEARIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REGROOVABLEINDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGROOVABLEIND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLANTPRODUCEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANTPRODUCED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOSTRECENTTESTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOSTRECENTTESTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFORMENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFORMENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHADATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHADATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADPATTERNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADPATTERN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIALPROTECTIVEBANDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIALPROTECTIVEBAND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALTIREWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALTIREWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASPECTRADIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASPECTRADIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADWEARINDICATORSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADWEARINDICATORS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMEOFMANUFACTURERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMEOFMANUFACTURER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAMILYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALEXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRODUCTDATA_REPORT_VIEWRow
            Get
                Return CType(Me.Rows(index),PRODUCTDATA_REPORT_VIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowChanging As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowChanged As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowDeleting As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowDeleted As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPRODUCTDATA_REPORT_VIEWRow(ByVal row As PRODUCTDATA_REPORT_VIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPRODUCTDATA_REPORT_VIEWRow( _
                    ByVal parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW As CERTIFICATE_VIEWRow,  _
                    ByVal SKU As String,  _
                    ByVal BRANDCODE As String,  _
                    ByVal TIRETYPEID As Decimal,  _
                    ByVal NPRID As Decimal,  _
                    ByVal SIZESTAMP As String,  _
                    ByVal DISCONTINUEDDATE As Date,  _
                    ByVal SPECNUMBER As String,  _
                    ByVal SPEEDRATING As String,  _
                    ByVal SINGLOADINDEX As String,  _
                    ByVal DUALLOADINDEX As String,  _
                    ByVal BELTEDRADIALYN As String,  _
                    ByVal TUBELESSYN As String,  _
                    ByVal REINFORCEDYN As String,  _
                    ByVal EXTRALOADYN As String,  _
                    ByVal MEASURINGRIM As String,  _
                    ByVal UTQGTREADWEAR As String,  _
                    ByVal UTQGTRACTION As String,  _
                    ByVal UTQGTEMP As String,  _
                    ByVal MUDSNOWYN As String,  _
                    ByVal RIMDIAMETER As Decimal,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal BRANDDESC As String,  _
                    ByVal LOADRANGE As String,  _
                    ByVal MEARIMWIDTH As Decimal,  _
                    ByVal REGROOVABLEIND As String,  _
                    ByVal PLANTPRODUCED As String,  _
                    ByVal MOSTRECENTTESTDATE As Date,  _
                    ByVal IMARK As String,  _
                    ByVal INFORMENUMBER As String,  _
                    ByVal FECHADATE As Date,  _
                    ByVal TREADPATTERN As String,  _
                    ByVal SPECIALPROTECTIVEBAND As String,  _
                    ByVal NOMINALTIREWIDTH As String,  _
                    ByVal ASPECTRADIO As String,  _
                    ByVal TREADWEARINDICATORS As String,  _
                    ByVal NAMEOFMANUFACTURER As String,  _
                    ByVal FAMILY As String,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SUPPLEMENTALEXTENSION_EN As String,  _
                    ByVal EXTENSION_EN As String) As PRODUCTDATA_REPORT_VIEWRow
            Dim rowPRODUCTDATA_REPORT_VIEWRow As PRODUCTDATA_REPORT_VIEWRow = CType(Me.NewRow,PRODUCTDATA_REPORT_VIEWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SKU, BRANDCODE, TIRETYPEID, NPRID, SIZESTAMP, DISCONTINUEDDATE, SPECNUMBER, SPEEDRATING, SINGLOADINDEX, DUALLOADINDEX, BELTEDRADIALYN, TUBELESSYN, REINFORCEDYN, EXTRALOADYN, MEASURINGRIM, UTQGTREADWEAR, UTQGTRACTION, UTQGTEMP, MUDSNOWYN, RIMDIAMETER, SERIALDATE, BRANDDESC, LOADRANGE, MEARIMWIDTH, REGROOVABLEIND, PLANTPRODUCED, MOSTRECENTTESTDATE, IMARK, INFORMENUMBER, FECHADATE, TREADPATTERN, SPECIALPROTECTIVEBAND, NOMINALTIREWIDTH, ASPECTRADIO, TREADWEARINDICATORS, NAMEOFMANUFACTURER, FAMILY, DOTSERIALNUMBER, CERTIFICATENUMBER, SUPPLEMENTALEXTENSION_EN, EXTENSION_EN}
            If (Not (parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW) Is Nothing) Then
                columnValuesArray(0) = parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW(0)
            End If
            rowPRODUCTDATA_REPORT_VIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRODUCTDATA_REPORT_VIEWRow)
            Return rowPRODUCTDATA_REPORT_VIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRODUCTDATA_REPORT_VIEWDataTable = CType(MyBase.Clone,PRODUCTDATA_REPORT_VIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRODUCTDATA_REPORT_VIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSKUID = MyBase.Columns("SKUID")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnBRANDCODE = MyBase.Columns("BRANDCODE")
            Me.columnTIRETYPEID = MyBase.Columns("TIRETYPEID")
            Me.columnNPRID = MyBase.Columns("NPRID")
            Me.columnSIZESTAMP = MyBase.Columns("SIZESTAMP")
            Me.columnDISCONTINUEDDATE = MyBase.Columns("DISCONTINUEDDATE")
            Me.columnSPECNUMBER = MyBase.Columns("SPECNUMBER")
            Me.columnSPEEDRATING = MyBase.Columns("SPEEDRATING")
            Me.columnSINGLOADINDEX = MyBase.Columns("SINGLOADINDEX")
            Me.columnDUALLOADINDEX = MyBase.Columns("DUALLOADINDEX")
            Me.columnBELTEDRADIALYN = MyBase.Columns("BELTEDRADIALYN")
            Me.columnTUBELESSYN = MyBase.Columns("TUBELESSYN")
            Me.columnREINFORCEDYN = MyBase.Columns("REINFORCEDYN")
            Me.columnEXTRALOADYN = MyBase.Columns("EXTRALOADYN")
            Me.columnMEASURINGRIM = MyBase.Columns("MEASURINGRIM")
            Me.columnUTQGTREADWEAR = MyBase.Columns("UTQGTREADWEAR")
            Me.columnUTQGTRACTION = MyBase.Columns("UTQGTRACTION")
            Me.columnUTQGTEMP = MyBase.Columns("UTQGTEMP")
            Me.columnMUDSNOWYN = MyBase.Columns("MUDSNOWYN")
            Me.columnRIMDIAMETER = MyBase.Columns("RIMDIAMETER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnBRANDDESC = MyBase.Columns("BRANDDESC")
            Me.columnLOADRANGE = MyBase.Columns("LOADRANGE")
            Me.columnMEARIMWIDTH = MyBase.Columns("MEARIMWIDTH")
            Me.columnREGROOVABLEIND = MyBase.Columns("REGROOVABLEIND")
            Me.columnPLANTPRODUCED = MyBase.Columns("PLANTPRODUCED")
            Me.columnMOSTRECENTTESTDATE = MyBase.Columns("MOSTRECENTTESTDATE")
            Me.columnIMARK = MyBase.Columns("IMARK")
            Me.columnINFORMENUMBER = MyBase.Columns("INFORMENUMBER")
            Me.columnFECHADATE = MyBase.Columns("FECHADATE")
            Me.columnTREADPATTERN = MyBase.Columns("TREADPATTERN")
            Me.columnSPECIALPROTECTIVEBAND = MyBase.Columns("SPECIALPROTECTIVEBAND")
            Me.columnNOMINALTIREWIDTH = MyBase.Columns("NOMINALTIREWIDTH")
            Me.columnASPECTRADIO = MyBase.Columns("ASPECTRADIO")
            Me.columnTREADWEARINDICATORS = MyBase.Columns("TREADWEARINDICATORS")
            Me.columnNAMEOFMANUFACTURER = MyBase.Columns("NAMEOFMANUFACTURER")
            Me.columnFAMILY = MyBase.Columns("FAMILY")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSUPPLEMENTALEXTENSION_EN = MyBase.Columns("SUPPLEMENTALEXTENSION_EN")
            Me.columnEXTENSION_EN = MyBase.Columns("EXTENSION_EN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSKUID = New Global.System.Data.DataColumn("SKUID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKUID)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnBRANDCODE = New Global.System.Data.DataColumn("BRANDCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDCODE)
            Me.columnTIRETYPEID = New Global.System.Data.DataColumn("TIRETYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRETYPEID)
            Me.columnNPRID = New Global.System.Data.DataColumn("NPRID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNPRID)
            Me.columnSIZESTAMP = New Global.System.Data.DataColumn("SIZESTAMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZESTAMP)
            Me.columnDISCONTINUEDDATE = New Global.System.Data.DataColumn("DISCONTINUEDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCONTINUEDDATE)
            Me.columnSPECNUMBER = New Global.System.Data.DataColumn("SPECNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECNUMBER)
            Me.columnSPEEDRATING = New Global.System.Data.DataColumn("SPEEDRATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDRATING)
            Me.columnSINGLOADINDEX = New Global.System.Data.DataColumn("SINGLOADINDEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSINGLOADINDEX)
            Me.columnDUALLOADINDEX = New Global.System.Data.DataColumn("DUALLOADINDEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDUALLOADINDEX)
            Me.columnBELTEDRADIALYN = New Global.System.Data.DataColumn("BELTEDRADIALYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBELTEDRADIALYN)
            Me.columnTUBELESSYN = New Global.System.Data.DataColumn("TUBELESSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTUBELESSYN)
            Me.columnREINFORCEDYN = New Global.System.Data.DataColumn("REINFORCEDYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREINFORCEDYN)
            Me.columnEXTRALOADYN = New Global.System.Data.DataColumn("EXTRALOADYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRALOADYN)
            Me.columnMEASURINGRIM = New Global.System.Data.DataColumn("MEASURINGRIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEASURINGRIM)
            Me.columnUTQGTREADWEAR = New Global.System.Data.DataColumn("UTQGTREADWEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTREADWEAR)
            Me.columnUTQGTRACTION = New Global.System.Data.DataColumn("UTQGTRACTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTRACTION)
            Me.columnUTQGTEMP = New Global.System.Data.DataColumn("UTQGTEMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTEMP)
            Me.columnMUDSNOWYN = New Global.System.Data.DataColumn("MUDSNOWYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUDSNOWYN)
            Me.columnRIMDIAMETER = New Global.System.Data.DataColumn("RIMDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMDIAMETER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnBRANDDESC = New Global.System.Data.DataColumn("BRANDDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDDESC)
            Me.columnLOADRANGE = New Global.System.Data.DataColumn("LOADRANGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOADRANGE)
            Me.columnMEARIMWIDTH = New Global.System.Data.DataColumn("MEARIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEARIMWIDTH)
            Me.columnREGROOVABLEIND = New Global.System.Data.DataColumn("REGROOVABLEIND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGROOVABLEIND)
            Me.columnPLANTPRODUCED = New Global.System.Data.DataColumn("PLANTPRODUCED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANTPRODUCED)
            Me.columnMOSTRECENTTESTDATE = New Global.System.Data.DataColumn("MOSTRECENTTESTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOSTRECENTTESTDATE)
            Me.columnIMARK = New Global.System.Data.DataColumn("IMARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMARK)
            Me.columnINFORMENUMBER = New Global.System.Data.DataColumn("INFORMENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFORMENUMBER)
            Me.columnFECHADATE = New Global.System.Data.DataColumn("FECHADATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHADATE)
            Me.columnTREADPATTERN = New Global.System.Data.DataColumn("TREADPATTERN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADPATTERN)
            Me.columnSPECIALPROTECTIVEBAND = New Global.System.Data.DataColumn("SPECIALPROTECTIVEBAND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIALPROTECTIVEBAND)
            Me.columnNOMINALTIREWIDTH = New Global.System.Data.DataColumn("NOMINALTIREWIDTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALTIREWIDTH)
            Me.columnASPECTRADIO = New Global.System.Data.DataColumn("ASPECTRADIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASPECTRADIO)
            Me.columnTREADWEARINDICATORS = New Global.System.Data.DataColumn("TREADWEARINDICATORS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADWEARINDICATORS)
            Me.columnNAMEOFMANUFACTURER = New Global.System.Data.DataColumn("NAMEOFMANUFACTURER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMEOFMANUFACTURER)
            Me.columnFAMILY = New Global.System.Data.DataColumn("FAMILY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILY)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSUPPLEMENTALEXTENSION_EN = New Global.System.Data.DataColumn("SUPPLEMENTALEXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALEXTENSION_EN)
            Me.columnEXTENSION_EN = New Global.System.Data.DataColumn("EXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION_EN)
            Me.columnSKUID.AllowDBNull = false
            Me.columnSKU.AllowDBNull = false
            Me.columnSKU.MaxLength = 30
            Me.columnBRANDCODE.MaxLength = 10
            Me.columnSIZESTAMP.AllowDBNull = false
            Me.columnSIZESTAMP.MaxLength = 20
            Me.columnSPECNUMBER.MaxLength = 30
            Me.columnSPEEDRATING.MaxLength = 40
            Me.columnSINGLOADINDEX.MaxLength = 40
            Me.columnDUALLOADINDEX.MaxLength = 40
            Me.columnBELTEDRADIALYN.MaxLength = 4
            Me.columnTUBELESSYN.MaxLength = 4
            Me.columnREINFORCEDYN.MaxLength = 4
            Me.columnEXTRALOADYN.MaxLength = 4
            Me.columnMEASURINGRIM.MaxLength = 40
            Me.columnUTQGTREADWEAR.MaxLength = 40
            Me.columnUTQGTRACTION.MaxLength = 40
            Me.columnUTQGTEMP.MaxLength = 40
            Me.columnMUDSNOWYN.MaxLength = 4
            Me.columnBRANDDESC.MaxLength = 400
            Me.columnLOADRANGE.MaxLength = 120
            Me.columnREGROOVABLEIND.MaxLength = 120
            Me.columnPLANTPRODUCED.MaxLength = 200
            Me.columnIMARK.MaxLength = 120
            Me.columnINFORMENUMBER.MaxLength = 50
            Me.columnTREADPATTERN.MaxLength = 50
            Me.columnSPECIALPROTECTIVEBAND.MaxLength = 50
            Me.columnNOMINALTIREWIDTH.MaxLength = 50
            Me.columnASPECTRADIO.MaxLength = 50
            Me.columnTREADWEARINDICATORS.MaxLength = 50
            Me.columnNAMEOFMANUFACTURER.MaxLength = 100
            Me.columnFAMILY.MaxLength = 50
            Me.columnDOTSERIALNUMBER.MaxLength = 15
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnSUPPLEMENTALEXTENSION_EN.MaxLength = 30
            Me.columnEXTENSION_EN.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPRODUCTDATA_REPORT_VIEWRow() As PRODUCTDATA_REPORT_VIEWRow
            Return CType(Me.NewRow,PRODUCTDATA_REPORT_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRODUCTDATA_REPORT_VIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRODUCTDATA_REPORT_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowChanged(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowChanging(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowDeleted(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowDeleting(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePRODUCTDATA_REPORT_VIEWRow(ByVal row As PRODUCTDATA_REPORT_VIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRODUCTDATA_REPORT_VIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BEADUNSEATHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnBEADUNSEATID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnLOWESTUNSEATVALUE As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnMINBEADUNSEAT As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnTESTPASSFAIL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BEADUNSEATHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEADUNSEATIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEADUNSEATID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOWESTUNSEATVALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOWESTUNSEATVALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MINBEADUNSEATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINBEADUNSEAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BEADUNSEATHDRRow
            Get
                Return CType(Me.Rows(index),BEADUNSEATHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATHDRRowChanging As BEADUNSEATHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATHDRRowChanged As BEADUNSEATHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATHDRRowDeleting As BEADUNSEATHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATHDRRowDeleted As BEADUNSEATHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBEADUNSEATHDRRow(ByVal row As BEADUNSEATHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBEADUNSEATHDRRow( _
                    ByVal BEADUNSEATID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal LOWESTUNSEATVALUE As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal MINBEADUNSEAT As Decimal,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal TESTPASSFAIL As String) As BEADUNSEATHDRRow
            Dim rowBEADUNSEATHDRRow As BEADUNSEATHDRRow = CType(Me.NewRow,BEADUNSEATHDRRow)
            Dim columnValuesArray() As Object = New Object() {BEADUNSEATID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIALNUMBER, LOWESTUNSEATVALUE, PASSYN, CERTIFICATIONTYPEID, CERTIFICATENUMBER, SERIALDATE, MINBEADUNSEAT, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, TESTPASSFAIL}
            rowBEADUNSEATHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBEADUNSEATHDRRow)
            Return rowBEADUNSEATHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByBEADUNSEATID(ByVal BEADUNSEATID As Decimal) As BEADUNSEATHDRRow
            Return CType(Me.Rows.Find(New Object() {BEADUNSEATID}),BEADUNSEATHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BEADUNSEATHDRDataTable = CType(MyBase.Clone,BEADUNSEATHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BEADUNSEATHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBEADUNSEATID = MyBase.Columns("BEADUNSEATID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnLOWESTUNSEATVALUE = MyBase.Columns("LOWESTUNSEATVALUE")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnMINBEADUNSEAT = MyBase.Columns("MINBEADUNSEAT")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnTESTPASSFAIL = MyBase.Columns("TESTPASSFAIL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBEADUNSEATID = New Global.System.Data.DataColumn("BEADUNSEATID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEADUNSEATID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnLOWESTUNSEATVALUE = New Global.System.Data.DataColumn("LOWESTUNSEATVALUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOWESTUNSEATVALUE)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSYN)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnMINBEADUNSEAT = New Global.System.Data.DataColumn("MINBEADUNSEAT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINBEADUNSEAT)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnTESTPASSFAIL = New Global.System.Data.DataColumn("TESTPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTPASSFAIL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBEADUNSEATID}, true))
            Me.columnBEADUNSEATID.AllowDBNull = false
            Me.columnBEADUNSEATID.Unique = true
            Me.columnPROJECTNUMBER.MaxLength = 40
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnPASSYN.MaxLength = 4
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
            Me.columnTESTPASSFAIL.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBEADUNSEATHDRRow() As BEADUNSEATHDRRow
            Return CType(Me.NewRow,BEADUNSEATHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BEADUNSEATHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BEADUNSEATHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BEADUNSEATHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATHDRRowChanged(Me, New BEADUNSEATHDRRowChangeEvent(CType(e.Row,BEADUNSEATHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BEADUNSEATHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATHDRRowChanging(Me, New BEADUNSEATHDRRowChangeEvent(CType(e.Row,BEADUNSEATHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BEADUNSEATHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATHDRRowDeleted(Me, New BEADUNSEATHDRRowChangeEvent(CType(e.Row,BEADUNSEATHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BEADUNSEATHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATHDRRowDeleting(Me, New BEADUNSEATHDRRowChangeEvent(CType(e.Row,BEADUNSEATHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBEADUNSEATHDRRow(ByVal row As BEADUNSEATHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BEADUNSEATHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BEADUNSEATDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnBEADUNSEATID As Global.System.Data.DataColumn
        
        Private columnUNSEATFORCE As Global.System.Data.DataColumn
        
        Private columnITERATION As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BEADUNSEATDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEADUNSEATIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEADUNSEATID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNSEATFORCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNSEATFORCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITERATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITERATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BEADUNSEATDTLRow
            Get
                Return CType(Me.Rows(index),BEADUNSEATDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATDTLRowChanging As BEADUNSEATDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATDTLRowChanged As BEADUNSEATDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATDTLRowDeleting As BEADUNSEATDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATDTLRowDeleted As BEADUNSEATDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBEADUNSEATDTLRow(ByVal row As BEADUNSEATDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBEADUNSEATDTLRow(ByVal parentBEADUNSEATHDRRowByBEADUNSEATHDR_BEADUNSEATDTL As BEADUNSEATHDRRow, ByVal UNSEATFORCE As Decimal, ByVal ITERATION As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As BEADUNSEATDTLRow
            Dim rowBEADUNSEATDTLRow As BEADUNSEATDTLRow = CType(Me.NewRow,BEADUNSEATDTLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, UNSEATFORCE, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentBEADUNSEATHDRRowByBEADUNSEATHDR_BEADUNSEATDTL) Is Nothing) Then
                columnValuesArray(0) = parentBEADUNSEATHDRRowByBEADUNSEATHDR_BEADUNSEATDTL(0)
            End If
            rowBEADUNSEATDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBEADUNSEATDTLRow)
            Return rowBEADUNSEATDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BEADUNSEATDTLDataTable = CType(MyBase.Clone,BEADUNSEATDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BEADUNSEATDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBEADUNSEATID = MyBase.Columns("BEADUNSEATID")
            Me.columnUNSEATFORCE = MyBase.Columns("UNSEATFORCE")
            Me.columnITERATION = MyBase.Columns("ITERATION")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBEADUNSEATID = New Global.System.Data.DataColumn("BEADUNSEATID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEADUNSEATID)
            Me.columnUNSEATFORCE = New Global.System.Data.DataColumn("UNSEATFORCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNSEATFORCE)
            Me.columnITERATION = New Global.System.Data.DataColumn("ITERATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITERATION)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnBEADUNSEATID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBEADUNSEATDTLRow() As BEADUNSEATDTLRow
            Return CType(Me.NewRow,BEADUNSEATDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BEADUNSEATDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BEADUNSEATDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BEADUNSEATDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATDTLRowChanged(Me, New BEADUNSEATDTLRowChangeEvent(CType(e.Row,BEADUNSEATDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BEADUNSEATDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATDTLRowChanging(Me, New BEADUNSEATDTLRowChangeEvent(CType(e.Row,BEADUNSEATDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BEADUNSEATDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATDTLRowDeleted(Me, New BEADUNSEATDTLRowChangeEvent(CType(e.Row,BEADUNSEATDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BEADUNSEATDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATDTLRowDeleting(Me, New BEADUNSEATDTLRowChangeEvent(CType(e.Row,BEADUNSEATDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBEADUNSEATDTLRow(ByVal row As BEADUNSEATDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BEADUNSEATDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ENDURANCEDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTESTSTEP As Global.System.Data.DataColumn
        
        Private columnTIMEINMIN As Global.System.Data.DataColumn
        
        Private columnSPEED As Global.System.Data.DataColumn
        
        Private columnTOTMILES As Global.System.Data.DataColumn
        
        Private columnLOAD As Global.System.Data.DataColumn
        
        Private columnLOADPERCENT As Global.System.Data.DataColumn
        
        Private columnSETINFLATION As Global.System.Data.DataColumn
        
        Private columnAMBTEMP As Global.System.Data.DataColumn
        
        Private columnINFPRESSURE As Global.System.Data.DataColumn
        
        Private columnSTEPCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnENDURANCEID As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ENDURANCEDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSTEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSTEP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIMEINMINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMEINMIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTMILESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTMILES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADPERCENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOADPERCENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SETINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSETINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMBTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMBTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STEPCOMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTEPCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDURANCEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDURANCEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ENDURANCEDTLRow
            Get
                Return CType(Me.Rows(index),ENDURANCEDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEDTLRowChanging As ENDURANCEDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEDTLRowChanged As ENDURANCEDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEDTLRowDeleting As ENDURANCEDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEDTLRowDeleted As ENDURANCEDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddENDURANCEDTLRow(ByVal row As ENDURANCEDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddENDURANCEDTLRow(ByVal TESTSTEP As Decimal, ByVal TIMEINMIN As Decimal, ByVal SPEED As Decimal, ByVal TOTMILES As Decimal, ByVal LOAD As Decimal, ByVal LOADPERCENT As Decimal, ByVal SETINFLATION As Decimal, ByVal AMBTEMP As Decimal, ByVal INFPRESSURE As Decimal, ByVal STEPCOMPLETIONDATE As Date, ByVal parentENDURANCEHDRRowByENDURANCEHDR_ENDURANCEDTL As ENDURANCEHDRRow, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As ENDURANCEDTLRow
            Dim rowENDURANCEDTLRow As ENDURANCEDTLRow = CType(Me.NewRow,ENDURANCEDTLRow)
            Dim columnValuesArray() As Object = New Object() {TESTSTEP, TIMEINMIN, SPEED, TOTMILES, LOAD, LOADPERCENT, SETINFLATION, AMBTEMP, INFPRESSURE, STEPCOMPLETIONDATE, Nothing, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentENDURANCEHDRRowByENDURANCEHDR_ENDURANCEDTL) Is Nothing) Then
                columnValuesArray(10) = parentENDURANCEHDRRowByENDURANCEHDR_ENDURANCEDTL(0)
            End If
            rowENDURANCEDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowENDURANCEDTLRow)
            Return rowENDURANCEDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ENDURANCEDTLDataTable = CType(MyBase.Clone,ENDURANCEDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ENDURANCEDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTESTSTEP = MyBase.Columns("TESTSTEP")
            Me.columnTIMEINMIN = MyBase.Columns("TIMEINMIN")
            Me.columnSPEED = MyBase.Columns("SPEED")
            Me.columnTOTMILES = MyBase.Columns("TOTMILES")
            Me.columnLOAD = MyBase.Columns("LOAD")
            Me.columnLOADPERCENT = MyBase.Columns("LOADPERCENT")
            Me.columnSETINFLATION = MyBase.Columns("SETINFLATION")
            Me.columnAMBTEMP = MyBase.Columns("AMBTEMP")
            Me.columnINFPRESSURE = MyBase.Columns("INFPRESSURE")
            Me.columnSTEPCOMPLETIONDATE = MyBase.Columns("STEPCOMPLETIONDATE")
            Me.columnENDURANCEID = MyBase.Columns("ENDURANCEID")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTESTSTEP = New Global.System.Data.DataColumn("TESTSTEP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSTEP)
            Me.columnTIMEINMIN = New Global.System.Data.DataColumn("TIMEINMIN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMEINMIN)
            Me.columnSPEED = New Global.System.Data.DataColumn("SPEED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEED)
            Me.columnTOTMILES = New Global.System.Data.DataColumn("TOTMILES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTMILES)
            Me.columnLOAD = New Global.System.Data.DataColumn("LOAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOAD)
            Me.columnLOADPERCENT = New Global.System.Data.DataColumn("LOADPERCENT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOADPERCENT)
            Me.columnSETINFLATION = New Global.System.Data.DataColumn("SETINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSETINFLATION)
            Me.columnAMBTEMP = New Global.System.Data.DataColumn("AMBTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMBTEMP)
            Me.columnINFPRESSURE = New Global.System.Data.DataColumn("INFPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFPRESSURE)
            Me.columnSTEPCOMPLETIONDATE = New Global.System.Data.DataColumn("STEPCOMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTEPCOMPLETIONDATE)
            Me.columnENDURANCEID = New Global.System.Data.DataColumn("ENDURANCEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDURANCEID)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnENDURANCEID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewENDURANCEDTLRow() As ENDURANCEDTLRow
            Return CType(Me.NewRow,ENDURANCEDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ENDURANCEDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ENDURANCEDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ENDURANCEDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent ENDURANCEDTLRowChanged(Me, New ENDURANCEDTLRowChangeEvent(CType(e.Row,ENDURANCEDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ENDURANCEDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent ENDURANCEDTLRowChanging(Me, New ENDURANCEDTLRowChangeEvent(CType(e.Row,ENDURANCEDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ENDURANCEDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent ENDURANCEDTLRowDeleted(Me, New ENDURANCEDTLRowChangeEvent(CType(e.Row,ENDURANCEDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ENDURANCEDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent ENDURANCEDTLRowDeleting(Me, New ENDURANCEDTLRowChangeEvent(CType(e.Row,ENDURANCEDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveENDURANCEDTLRow(ByVal row As ENDURANCEDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ENDURANCEDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ENDURANCEHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnENDURANCEID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnMFGWWYY As Global.System.Data.DataColumn
        
        Private columnPRECONDSTARTDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDSTARTTEMP As Global.System.Data.DataColumn
        
        Private columnRIMDIAMETER As Global.System.Data.DataColumn
        
        Private columnRIMWIDTH As Global.System.Data.DataColumn
        
        Private columnPRECONDENDDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDENDTEMP As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnBEFOREDIAMETER As Global.System.Data.DataColumn
        
        Private columnAFTERDIAMETER As Global.System.Data.DataColumn
        
        Private columnBEFOREINFLATION As Global.System.Data.DataColumn
        
        Private columnAFTERINFLATION As Global.System.Data.DataColumn
        
        Private columnWHEELPOSITION As Global.System.Data.DataColumn
        
        Private columnWHEELNUMBER As Global.System.Data.DataColumn
        
        Private columnFINALTEMP As Global.System.Data.DataColumn
        
        Private columnFINALDISTANCE As Global.System.Data.DataColumn
        
        Private columnFINALINFLATION As Global.System.Data.DataColumn
        
        Private columnPOSTCONDSTARTDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDENDDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDENDTEMP As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDTIME As Global.System.Data.DataColumn
        
        Private columnPOSTCONDTIME As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnDIAMETERTESTDRUM As Global.System.Data.DataColumn
        
        Private columnPRECONDTEMP As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSUREREADJUSTED As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEBEFORETEST As Global.System.Data.DataColumn
        
        Private columnRESULTPASSFAIL As Global.System.Data.DataColumn
        
        Private columnENDURANCEHOURS As Global.System.Data.DataColumn
        
        Private columnPOSSIBLEFAILURESFOUND As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEAFTERTEST As Global.System.Data.DataColumn
        
        Private columnOUTERDIAMETERDIFERENCE As Global.System.Data.DataColumn
        
        Private columnODDIFERENCETOLERANCE As Global.System.Data.DataColumn
        
        Private columnSERIENOM As Global.System.Data.DataColumn
        
        Private columnFINALJUDGEMENT As Global.System.Data.DataColumn
        
        Private columnAPPROVER As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ENDURANCEHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDURANCEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDURANCEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MFGWWYYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMFGWWYY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDSTARTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDSTARTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDSTARTTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDSTARTTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDENDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDENDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDENDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDENDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEFOREDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEFOREDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTERDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTERDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEFOREINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEFOREINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTERINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTERINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALDISTANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALDISTANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDSTARTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDSTARTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDENDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDENDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDENDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDENDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERTESTDRUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERTESTDRUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREREADJUSTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSUREREADJUSTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEBEFORETESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEBEFORETEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESULTPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULTPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDURANCEHOURSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDURANCEHOURS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSSIBLEFAILURESFOUNDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSSIBLEFAILURESFOUND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEAFTERTESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEAFTERTEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OUTERDIAMETERDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOUTERDIAMETERDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODDIFERENCETOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDIFERENCETOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIENOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIENOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALJUDGEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALJUDGEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ENDURANCEHDRRow
            Get
                Return CType(Me.Rows(index),ENDURANCEHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEHDRRowChanging As ENDURANCEHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEHDRRowChanged As ENDURANCEHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEHDRRowDeleting As ENDURANCEHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEHDRRowDeleted As ENDURANCEHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddENDURANCEHDRRow(ByVal row As ENDURANCEHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddENDURANCEHDRRow( _
                    ByVal ENDURANCEID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal MFGWWYY As String,  _
                    ByVal PRECONDSTARTDATE As Date,  _
                    ByVal PRECONDSTARTTEMP As Decimal,  _
                    ByVal RIMDIAMETER As Decimal,  _
                    ByVal RIMWIDTH As Decimal,  _
                    ByVal PRECONDENDDATE As Date,  _
                    ByVal PRECONDENDTEMP As Decimal,  _
                    ByVal INFLATIONPRESSURE As Decimal,  _
                    ByVal BEFOREDIAMETER As Decimal,  _
                    ByVal AFTERDIAMETER As Decimal,  _
                    ByVal BEFOREINFLATION As Decimal,  _
                    ByVal AFTERINFLATION As Decimal,  _
                    ByVal WHEELPOSITION As Decimal,  _
                    ByVal WHEELNUMBER As Decimal,  _
                    ByVal FINALTEMP As Decimal,  _
                    ByVal FINALDISTANCE As Decimal,  _
                    ByVal FINALINFLATION As Decimal,  _
                    ByVal POSTCONDSTARTDATE As Date,  _
                    ByVal POSTCONDENDDATE As Date,  _
                    ByVal POSTCONDENDTEMP As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal PRECONDTIME As Decimal,  _
                    ByVal POSTCONDTIME As Decimal,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal DIAMETERTESTDRUM As Decimal,  _
                    ByVal PRECONDTEMP As Decimal,  _
                    ByVal INFLATIONPRESSUREREADJUSTED As Decimal,  _
                    ByVal CIRCUNFERENCEBEFORETEST As Decimal,  _
                    ByVal RESULTPASSFAIL As String,  _
                    ByVal ENDURANCEHOURS As Decimal,  _
                    ByVal POSSIBLEFAILURESFOUND As String,  _
                    ByVal CIRCUNFERENCEAFTERTEST As Decimal,  _
                    ByVal OUTERDIAMETERDIFERENCE As Decimal,  _
                    ByVal ODDIFERENCETOLERANCE As Decimal,  _
                    ByVal SERIENOM As String,  _
                    ByVal FINALJUDGEMENT As String,  _
                    ByVal APPROVER As String) As ENDURANCEHDRRow
            Dim rowENDURANCEHDRRow As ENDURANCEHDRRow = CType(Me.NewRow,ENDURANCEHDRRow)
            Dim columnValuesArray() As Object = New Object() {ENDURANCEID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIALNUMBER, MFGWWYY, PRECONDSTARTDATE, PRECONDSTARTTEMP, RIMDIAMETER, RIMWIDTH, PRECONDENDDATE, PRECONDENDTEMP, INFLATIONPRESSURE, BEFOREDIAMETER, AFTERDIAMETER, BEFOREINFLATION, AFTERINFLATION, WHEELPOSITION, WHEELNUMBER, FINALTEMP, FINALDISTANCE, FINALINFLATION, POSTCONDSTARTDATE, POSTCONDENDDATE, POSTCONDENDTEMP, PASSYN, CERTIFICATIONTYPEID, CERTIFICATENUMBER, SERIALDATE, PRECONDTIME, POSTCONDTIME, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, DIAMETERTESTDRUM, PRECONDTEMP, INFLATIONPRESSUREREADJUSTED, CIRCUNFERENCEBEFORETEST, RESULTPASSFAIL, ENDURANCEHOURS, POSSIBLEFAILURESFOUND, CIRCUNFERENCEAFTERTEST, OUTERDIAMETERDIFERENCE, ODDIFERENCETOLERANCE, SERIENOM, FINALJUDGEMENT, APPROVER}
            rowENDURANCEHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowENDURANCEHDRRow)
            Return rowENDURANCEHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENDURANCEID(ByVal ENDURANCEID As Decimal) As ENDURANCEHDRRow
            Return CType(Me.Rows.Find(New Object() {ENDURANCEID}),ENDURANCEHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ENDURANCEHDRDataTable = CType(MyBase.Clone,ENDURANCEHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ENDURANCEHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENDURANCEID = MyBase.Columns("ENDURANCEID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnMFGWWYY = MyBase.Columns("MFGWWYY")
            Me.columnPRECONDSTARTDATE = MyBase.Columns("PRECONDSTARTDATE")
            Me.columnPRECONDSTARTTEMP = MyBase.Columns("PRECONDSTARTTEMP")
            Me.columnRIMDIAMETER = MyBase.Columns("RIMDIAMETER")
            Me.columnRIMWIDTH = MyBase.Columns("RIMWIDTH")
            Me.columnPRECONDENDDATE = MyBase.Columns("PRECONDENDDATE")
            Me.columnPRECONDENDTEMP = MyBase.Columns("PRECONDENDTEMP")
            Me.columnINFLATIONPRESSURE = MyBase.Columns("INFLATIONPRESSURE")
            Me.columnBEFOREDIAMETER = MyBase.Columns("BEFOREDIAMETER")
            Me.columnAFTERDIAMETER = MyBase.Columns("AFTERDIAMETER")
            Me.columnBEFOREINFLATION = MyBase.Columns("BEFOREINFLATION")
            Me.columnAFTERINFLATION = MyBase.Columns("AFTERINFLATION")
            Me.columnWHEELPOSITION = MyBase.Columns("WHEELPOSITION")
            Me.columnWHEELNUMBER = MyBase.Columns("WHEELNUMBER")
            Me.columnFINALTEMP = MyBase.Columns("FINALTEMP")
            Me.columnFINALDISTANCE = MyBase.Columns("FINALDISTANCE")
            Me.columnFINALINFLATION = MyBase.Columns("FINALINFLATION")
            Me.columnPOSTCONDSTARTDATE = MyBase.Columns("POSTCONDSTARTDATE")
            Me.columnPOSTCONDENDDATE = MyBase.Columns("POSTCONDENDDATE")
            Me.columnPOSTCONDENDTEMP = MyBase.Columns("POSTCONDENDTEMP")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnPRECONDTIME = MyBase.Columns("PRECONDTIME")
            Me.columnPOSTCONDTIME = MyBase.Columns("POSTCONDTIME")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnDIAMETERTESTDRUM = MyBase.Columns("DIAMETERTESTDRUM")
            Me.columnPRECONDTEMP = MyBase.Columns("PRECONDTEMP")
            Me.columnINFLATIONPRESSUREREADJUSTED = MyBase.Columns("INFLATIONPRESSUREREADJUSTED")
            Me.columnCIRCUNFERENCEBEFORETEST = MyBase.Columns("CIRCUNFERENCEBEFORETEST")
            Me.columnRESULTPASSFAIL = MyBase.Columns("RESULTPASSFAIL")
            Me.columnENDURANCEHOURS = MyBase.Columns("ENDURANCEHOURS")
            Me.columnPOSSIBLEFAILURESFOUND = MyBase.Columns("POSSIBLEFAILURESFOUND")
            Me.columnCIRCUNFERENCEAFTERTEST = MyBase.Columns("CIRCUNFERENCEAFTERTEST")
            Me.columnOUTERDIAMETERDIFERENCE = MyBase.Columns("OUTERDIAMETERDIFERENCE")
            Me.columnODDIFERENCETOLERANCE = MyBase.Columns("ODDIFERENCETOLERANCE")
            Me.columnSERIENOM = MyBase.Columns("SERIENOM")
            Me.columnFINALJUDGEMENT = MyBase.Columns("FINALJUDGEMENT")
            Me.columnAPPROVER = MyBase.Columns("APPROVER")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENDURANCEID = New Global.System.Data.DataColumn("ENDURANCEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDURANCEID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnMFGWWYY = New Global.System.Data.DataColumn("MFGWWYY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMFGWWYY)
            Me.columnPRECONDSTARTDATE = New Global.System.Data.DataColumn("PRECONDSTARTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDSTARTDATE)
            Me.columnPRECONDSTARTTEMP = New Global.System.Data.DataColumn("PRECONDSTARTTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDSTARTTEMP)
            Me.columnRIMDIAMETER = New Global.System.Data.DataColumn("RIMDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMDIAMETER)
            Me.columnRIMWIDTH = New Global.System.Data.DataColumn("RIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMWIDTH)
            Me.columnPRECONDENDDATE = New Global.System.Data.DataColumn("PRECONDENDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDENDDATE)
            Me.columnPRECONDENDTEMP = New Global.System.Data.DataColumn("PRECONDENDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDENDTEMP)
            Me.columnINFLATIONPRESSURE = New Global.System.Data.DataColumn("INFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSURE)
            Me.columnBEFOREDIAMETER = New Global.System.Data.DataColumn("BEFOREDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEFOREDIAMETER)
            Me.columnAFTERDIAMETER = New Global.System.Data.DataColumn("AFTERDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTERDIAMETER)
            Me.columnBEFOREINFLATION = New Global.System.Data.DataColumn("BEFOREINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEFOREINFLATION)
            Me.columnAFTERINFLATION = New Global.System.Data.DataColumn("AFTERINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTERINFLATION)
            Me.columnWHEELPOSITION = New Global.System.Data.DataColumn("WHEELPOSITION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELPOSITION)
            Me.columnWHEELNUMBER = New Global.System.Data.DataColumn("WHEELNUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELNUMBER)
            Me.columnFINALTEMP = New Global.System.Data.DataColumn("FINALTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALTEMP)
            Me.columnFINALDISTANCE = New Global.System.Data.DataColumn("FINALDISTANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALDISTANCE)
            Me.columnFINALINFLATION = New Global.System.Data.DataColumn("FINALINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALINFLATION)
            Me.columnPOSTCONDSTARTDATE = New Global.System.Data.DataColumn("POSTCONDSTARTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDSTARTDATE)
            Me.columnPOSTCONDENDDATE = New Global.System.Data.DataColumn("POSTCONDENDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDENDDATE)
            Me.columnPOSTCONDENDTEMP = New Global.System.Data.DataColumn("POSTCONDENDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDENDTEMP)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSYN)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnPRECONDTIME = New Global.System.Data.DataColumn("PRECONDTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDTIME)
            Me.columnPOSTCONDTIME = New Global.System.Data.DataColumn("POSTCONDTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDTIME)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnDIAMETERTESTDRUM = New Global.System.Data.DataColumn("DIAMETERTESTDRUM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERTESTDRUM)
            Me.columnPRECONDTEMP = New Global.System.Data.DataColumn("PRECONDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDTEMP)
            Me.columnINFLATIONPRESSUREREADJUSTED = New Global.System.Data.DataColumn("INFLATIONPRESSUREREADJUSTED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSUREREADJUSTED)
            Me.columnCIRCUNFERENCEBEFORETEST = New Global.System.Data.DataColumn("CIRCUNFERENCEBEFORETEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEBEFORETEST)
            Me.columnRESULTPASSFAIL = New Global.System.Data.DataColumn("RESULTPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULTPASSFAIL)
            Me.columnENDURANCEHOURS = New Global.System.Data.DataColumn("ENDURANCEHOURS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDURANCEHOURS)
            Me.columnPOSSIBLEFAILURESFOUND = New Global.System.Data.DataColumn("POSSIBLEFAILURESFOUND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSSIBLEFAILURESFOUND)
            Me.columnCIRCUNFERENCEAFTERTEST = New Global.System.Data.DataColumn("CIRCUNFERENCEAFTERTEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEAFTERTEST)
            Me.columnOUTERDIAMETERDIFERENCE = New Global.System.Data.DataColumn("OUTERDIAMETERDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOUTERDIAMETERDIFERENCE)
            Me.columnODDIFERENCETOLERANCE = New Global.System.Data.DataColumn("ODDIFERENCETOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDIFERENCETOLERANCE)
            Me.columnSERIENOM = New Global.System.Data.DataColumn("SERIENOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIENOM)
            Me.columnFINALJUDGEMENT = New Global.System.Data.DataColumn("FINALJUDGEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALJUDGEMENT)
            Me.columnAPPROVER = New Global.System.Data.DataColumn("APPROVER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVER)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENDURANCEID}, true))
            Me.columnENDURANCEID.AllowDBNull = false
            Me.columnENDURANCEID.Unique = true
            Me.columnPROJECTNUMBER.MaxLength = 10
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnMFGWWYY.MaxLength = 80
            Me.columnPASSYN.MaxLength = 1
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
            Me.columnRESULTPASSFAIL.MaxLength = 1
            Me.columnPOSSIBLEFAILURESFOUND.MaxLength = 10
            Me.columnSERIENOM.MaxLength = 50
            Me.columnFINALJUDGEMENT.MaxLength = 1
            Me.columnAPPROVER.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewENDURANCEHDRRow() As ENDURANCEHDRRow
            Return CType(Me.NewRow,ENDURANCEHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ENDURANCEHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ENDURANCEHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ENDURANCEHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent ENDURANCEHDRRowChanged(Me, New ENDURANCEHDRRowChangeEvent(CType(e.Row,ENDURANCEHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ENDURANCEHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent ENDURANCEHDRRowChanging(Me, New ENDURANCEHDRRowChangeEvent(CType(e.Row,ENDURANCEHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ENDURANCEHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent ENDURANCEHDRRowDeleted(Me, New ENDURANCEHDRRowChangeEvent(CType(e.Row,ENDURANCEHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ENDURANCEHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent ENDURANCEHDRRowDeleting(Me, New ENDURANCEHDRRowChangeEvent(CType(e.Row,ENDURANCEHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveENDURANCEHDRRow(ByVal row As ENDURANCEHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ENDURANCEHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HIGHSPEEDDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTESTSTEP As Global.System.Data.DataColumn
        
        Private columnTIMEINMIN As Global.System.Data.DataColumn
        
        Private columnSPEED As Global.System.Data.DataColumn
        
        Private columnTOTMILES As Global.System.Data.DataColumn
        
        Private columnLOAD As Global.System.Data.DataColumn
        
        Private columnLOADPERCENT As Global.System.Data.DataColumn
        
        Private columnSETINFLATION As Global.System.Data.DataColumn
        
        Private columnAMBTEMP As Global.System.Data.DataColumn
        
        Private columnINFPRESSURE As Global.System.Data.DataColumn
        
        Private columnSTEPCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnHIGHSPEEDID As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HIGHSPEEDDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSTEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSTEP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIMEINMINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMEINMIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTMILESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTMILES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADPERCENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOADPERCENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SETINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSETINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMBTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMBTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STEPCOMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTEPCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HIGHSPEEDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHIGHSPEEDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HIGHSPEEDDTLRow
            Get
                Return CType(Me.Rows(index),HIGHSPEEDDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDDTLRowChanging As HIGHSPEEDDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDDTLRowChanged As HIGHSPEEDDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDDTLRowDeleting As HIGHSPEEDDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDDTLRowDeleted As HIGHSPEEDDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHIGHSPEEDDTLRow(ByVal row As HIGHSPEEDDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHIGHSPEEDDTLRow(ByVal TESTSTEP As Decimal, ByVal TIMEINMIN As Decimal, ByVal SPEED As Decimal, ByVal TOTMILES As Decimal, ByVal LOAD As Decimal, ByVal LOADPERCENT As Decimal, ByVal SETINFLATION As Decimal, ByVal AMBTEMP As Decimal, ByVal INFPRESSURE As Decimal, ByVal STEPCOMPLETIONDATE As Date, ByVal parentHIGHSPEEDHDRRowByHIGHSPEEDHDR_HIGHSPEEDDTL As HIGHSPEEDHDRRow, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As HIGHSPEEDDTLRow
            Dim rowHIGHSPEEDDTLRow As HIGHSPEEDDTLRow = CType(Me.NewRow,HIGHSPEEDDTLRow)
            Dim columnValuesArray() As Object = New Object() {TESTSTEP, TIMEINMIN, SPEED, TOTMILES, LOAD, LOADPERCENT, SETINFLATION, AMBTEMP, INFPRESSURE, STEPCOMPLETIONDATE, Nothing, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentHIGHSPEEDHDRRowByHIGHSPEEDHDR_HIGHSPEEDDTL) Is Nothing) Then
                columnValuesArray(10) = parentHIGHSPEEDHDRRowByHIGHSPEEDHDR_HIGHSPEEDDTL(0)
            End If
            rowHIGHSPEEDDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHIGHSPEEDDTLRow)
            Return rowHIGHSPEEDDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HIGHSPEEDDTLDataTable = CType(MyBase.Clone,HIGHSPEEDDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HIGHSPEEDDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTESTSTEP = MyBase.Columns("TESTSTEP")
            Me.columnTIMEINMIN = MyBase.Columns("TIMEINMIN")
            Me.columnSPEED = MyBase.Columns("SPEED")
            Me.columnTOTMILES = MyBase.Columns("TOTMILES")
            Me.columnLOAD = MyBase.Columns("LOAD")
            Me.columnLOADPERCENT = MyBase.Columns("LOADPERCENT")
            Me.columnSETINFLATION = MyBase.Columns("SETINFLATION")
            Me.columnAMBTEMP = MyBase.Columns("AMBTEMP")
            Me.columnINFPRESSURE = MyBase.Columns("INFPRESSURE")
            Me.columnSTEPCOMPLETIONDATE = MyBase.Columns("STEPCOMPLETIONDATE")
            Me.columnHIGHSPEEDID = MyBase.Columns("HIGHSPEEDID")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTESTSTEP = New Global.System.Data.DataColumn("TESTSTEP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSTEP)
            Me.columnTIMEINMIN = New Global.System.Data.DataColumn("TIMEINMIN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMEINMIN)
            Me.columnSPEED = New Global.System.Data.DataColumn("SPEED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEED)
            Me.columnTOTMILES = New Global.System.Data.DataColumn("TOTMILES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTMILES)
            Me.columnLOAD = New Global.System.Data.DataColumn("LOAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOAD)
            Me.columnLOADPERCENT = New Global.System.Data.DataColumn("LOADPERCENT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOADPERCENT)
            Me.columnSETINFLATION = New Global.System.Data.DataColumn("SETINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSETINFLATION)
            Me.columnAMBTEMP = New Global.System.Data.DataColumn("AMBTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMBTEMP)
            Me.columnINFPRESSURE = New Global.System.Data.DataColumn("INFPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFPRESSURE)
            Me.columnSTEPCOMPLETIONDATE = New Global.System.Data.DataColumn("STEPCOMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTEPCOMPLETIONDATE)
            Me.columnHIGHSPEEDID = New Global.System.Data.DataColumn("HIGHSPEEDID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHIGHSPEEDID)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnHIGHSPEEDID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHIGHSPEEDDTLRow() As HIGHSPEEDDTLRow
            Return CType(Me.NewRow,HIGHSPEEDDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HIGHSPEEDDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HIGHSPEEDDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HIGHSPEEDDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDDTLRowChanged(Me, New HIGHSPEEDDTLRowChangeEvent(CType(e.Row,HIGHSPEEDDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HIGHSPEEDDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDDTLRowChanging(Me, New HIGHSPEEDDTLRowChangeEvent(CType(e.Row,HIGHSPEEDDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HIGHSPEEDDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDDTLRowDeleted(Me, New HIGHSPEEDDTLRowChangeEvent(CType(e.Row,HIGHSPEEDDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HIGHSPEEDDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDDTLRowDeleting(Me, New HIGHSPEEDDTLRowChangeEvent(CType(e.Row,HIGHSPEEDDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHIGHSPEEDDTLRow(ByVal row As HIGHSPEEDDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HIGHSPEEDDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HIGHSPEEDHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnHIGHSPEEDID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUM As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnMFGWWYY As Global.System.Data.DataColumn
        
        Private columnPRECONDSTARTDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDSARTTEMP As Global.System.Data.DataColumn
        
        Private columnRIMDIAMETER As Global.System.Data.DataColumn
        
        Private columnRIMWIDTH As Global.System.Data.DataColumn
        
        Private columnPRECONDENDDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDENDTEMP As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnBEFOREDIAMETER As Global.System.Data.DataColumn
        
        Private columnAFTERDIAMETER As Global.System.Data.DataColumn
        
        Private columnBEFOREINFLATION As Global.System.Data.DataColumn
        
        Private columnAFTERINFLATION As Global.System.Data.DataColumn
        
        Private columnWHEELPOSITION As Global.System.Data.DataColumn
        
        Private columnWHEELNUMBER As Global.System.Data.DataColumn
        
        Private columnFINALTEMP As Global.System.Data.DataColumn
        
        Private columnFINALDISTANCE As Global.System.Data.DataColumn
        
        Private columnFINALINFLATION As Global.System.Data.DataColumn
        
        Private columnPOSTCONDSTARTDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDENDDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDENDTEMP As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDTIME As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnDIAMETERTESTDRUM As Global.System.Data.DataColumn
        
        Private columnPRECONDTIME As Global.System.Data.DataColumn
        
        Private columnPRECONDTEMP As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSUREREADJUSTED As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEBEFORETEST As Global.System.Data.DataColumn
        
        Private columnWHEELSPEEDRPM As Global.System.Data.DataColumn
        
        Private columnWHEELSPEEDKMH As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEAFTERTEST As Global.System.Data.DataColumn
        
        Private columnODDIFERENCE As Global.System.Data.DataColumn
        
        Private columnODDIFERENCETOLERANCE As Global.System.Data.DataColumn
        
        Private columnSERIENOM As Global.System.Data.DataColumn
        
        Private columnFINALJUDGEMENT As Global.System.Data.DataColumn
        
        Private columnAPPROVER As Global.System.Data.DataColumn
        
        Private columnPASSATKMH As Global.System.Data.DataColumn
        
        Private columnSPEEDTTESTPASSFAIL As Global.System.Data.DataColumn
        
        Private columnSPEEDTOTALTIME As Global.System.Data.DataColumn
        
        Private columnMAXSPEED As Global.System.Data.DataColumn
        
        Private columnMAXLOAD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HIGHSPEEDHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HIGHSPEEDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHIGHSPEEDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MFGWWYYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMFGWWYY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDSTARTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDSTARTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDSARTTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDSARTTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDENDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDENDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDENDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDENDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEFOREDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEFOREDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTERDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTERDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEFOREINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEFOREINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTERINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTERINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALDISTANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALDISTANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDSTARTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDSTARTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDENDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDENDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDENDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDENDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERTESTDRUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERTESTDRUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREREADJUSTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSUREREADJUSTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEBEFORETESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEBEFORETEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELSPEEDRPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELSPEEDRPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELSPEEDKMHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELSPEEDKMH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEAFTERTESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEAFTERTEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODDIFERENCETOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDIFERENCETOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIENOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIENOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALJUDGEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALJUDGEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSATKMHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSATKMH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDTTESTPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDTTESTPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDTOTALTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDTOTALTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXSPEEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXSPEED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXLOADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXLOAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HIGHSPEEDHDRRow
            Get
                Return CType(Me.Rows(index),HIGHSPEEDHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDHDRRowChanging As HIGHSPEEDHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDHDRRowChanged As HIGHSPEEDHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDHDRRowDeleting As HIGHSPEEDHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDHDRRowDeleted As HIGHSPEEDHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHIGHSPEEDHDRRow(ByVal row As HIGHSPEEDHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHIGHSPEEDHDRRow( _
                    ByVal HIGHSPEEDID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUM As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal MFGWWYY As String,  _
                    ByVal PRECONDSTARTDATE As Date,  _
                    ByVal PRECONDSARTTEMP As Decimal,  _
                    ByVal RIMDIAMETER As Decimal,  _
                    ByVal RIMWIDTH As Decimal,  _
                    ByVal PRECONDENDDATE As Date,  _
                    ByVal PRECONDENDTEMP As Decimal,  _
                    ByVal INFLATIONPRESSURE As Decimal,  _
                    ByVal BEFOREDIAMETER As Decimal,  _
                    ByVal AFTERDIAMETER As Decimal,  _
                    ByVal BEFOREINFLATION As Decimal,  _
                    ByVal AFTERINFLATION As Decimal,  _
                    ByVal WHEELPOSITION As Decimal,  _
                    ByVal WHEELNUMBER As Decimal,  _
                    ByVal FINALTEMP As Decimal,  _
                    ByVal FINALDISTANCE As Decimal,  _
                    ByVal FINALINFLATION As Decimal,  _
                    ByVal POSTCONDSTARTDATE As Date,  _
                    ByVal POSTCONDENDDATE As Date,  _
                    ByVal POSTCONDENDTEMP As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal POSTCONDTIME As Decimal,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal DIAMETERTESTDRUM As Decimal,  _
                    ByVal PRECONDTIME As Decimal,  _
                    ByVal PRECONDTEMP As Decimal,  _
                    ByVal INFLATIONPRESSUREREADJUSTED As Decimal,  _
                    ByVal CIRCUNFERENCEBEFORETEST As Decimal,  _
                    ByVal WHEELSPEEDRPM As Decimal,  _
                    ByVal WHEELSPEEDKMH As Decimal,  _
                    ByVal CIRCUNFERENCEAFTERTEST As Decimal,  _
                    ByVal ODDIFERENCE As Decimal,  _
                    ByVal ODDIFERENCETOLERANCE As Decimal,  _
                    ByVal SERIENOM As String,  _
                    ByVal FINALJUDGEMENT As String,  _
                    ByVal APPROVER As String,  _
                    ByVal PASSATKMH As Decimal,  _
                    ByVal SPEEDTTESTPASSFAIL As String,  _
                    ByVal SPEEDTOTALTIME As Decimal,  _
                    ByVal MAXSPEED As Decimal,  _
                    ByVal MAXLOAD As Decimal) As HIGHSPEEDHDRRow
            Dim rowHIGHSPEEDHDRRow As HIGHSPEEDHDRRow = CType(Me.NewRow,HIGHSPEEDHDRRow)
            Dim columnValuesArray() As Object = New Object() {HIGHSPEEDID, PROJECTNUMBER, TIRENUM, TESTSPEC, COMPETIONDATE, DOTSERIALNUMBER, MFGWWYY, PRECONDSTARTDATE, PRECONDSARTTEMP, RIMDIAMETER, RIMWIDTH, PRECONDENDDATE, PRECONDENDTEMP, INFLATIONPRESSURE, BEFOREDIAMETER, AFTERDIAMETER, BEFOREINFLATION, AFTERINFLATION, WHEELPOSITION, WHEELNUMBER, FINALTEMP, FINALDISTANCE, FINALINFLATION, POSTCONDSTARTDATE, POSTCONDENDDATE, POSTCONDENDTEMP, PASSYN, SERIALDATE, POSTCONDTIME, CERTIFICATIONTYPEID, CERTIFICATENUMBER, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, DIAMETERTESTDRUM, PRECONDTIME, PRECONDTEMP, INFLATIONPRESSUREREADJUSTED, CIRCUNFERENCEBEFORETEST, WHEELSPEEDRPM, WHEELSPEEDKMH, CIRCUNFERENCEAFTERTEST, ODDIFERENCE, ODDIFERENCETOLERANCE, SERIENOM, FINALJUDGEMENT, APPROVER, PASSATKMH, SPEEDTTESTPASSFAIL, SPEEDTOTALTIME, MAXSPEED, MAXLOAD}
            rowHIGHSPEEDHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHIGHSPEEDHDRRow)
            Return rowHIGHSPEEDHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByHIGHSPEEDID(ByVal HIGHSPEEDID As Decimal) As HIGHSPEEDHDRRow
            Return CType(Me.Rows.Find(New Object() {HIGHSPEEDID}),HIGHSPEEDHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HIGHSPEEDHDRDataTable = CType(MyBase.Clone,HIGHSPEEDHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HIGHSPEEDHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHIGHSPEEDID = MyBase.Columns("HIGHSPEEDID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUM = MyBase.Columns("TIRENUM")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPETIONDATE = MyBase.Columns("COMPETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnMFGWWYY = MyBase.Columns("MFGWWYY")
            Me.columnPRECONDSTARTDATE = MyBase.Columns("PRECONDSTARTDATE")
            Me.columnPRECONDSARTTEMP = MyBase.Columns("PRECONDSARTTEMP")
            Me.columnRIMDIAMETER = MyBase.Columns("RIMDIAMETER")
            Me.columnRIMWIDTH = MyBase.Columns("RIMWIDTH")
            Me.columnPRECONDENDDATE = MyBase.Columns("PRECONDENDDATE")
            Me.columnPRECONDENDTEMP = MyBase.Columns("PRECONDENDTEMP")
            Me.columnINFLATIONPRESSURE = MyBase.Columns("INFLATIONPRESSURE")
            Me.columnBEFOREDIAMETER = MyBase.Columns("BEFOREDIAMETER")
            Me.columnAFTERDIAMETER = MyBase.Columns("AFTERDIAMETER")
            Me.columnBEFOREINFLATION = MyBase.Columns("BEFOREINFLATION")
            Me.columnAFTERINFLATION = MyBase.Columns("AFTERINFLATION")
            Me.columnWHEELPOSITION = MyBase.Columns("WHEELPOSITION")
            Me.columnWHEELNUMBER = MyBase.Columns("WHEELNUMBER")
            Me.columnFINALTEMP = MyBase.Columns("FINALTEMP")
            Me.columnFINALDISTANCE = MyBase.Columns("FINALDISTANCE")
            Me.columnFINALINFLATION = MyBase.Columns("FINALINFLATION")
            Me.columnPOSTCONDSTARTDATE = MyBase.Columns("POSTCONDSTARTDATE")
            Me.columnPOSTCONDENDDATE = MyBase.Columns("POSTCONDENDDATE")
            Me.columnPOSTCONDENDTEMP = MyBase.Columns("POSTCONDENDTEMP")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnPOSTCONDTIME = MyBase.Columns("POSTCONDTIME")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnDIAMETERTESTDRUM = MyBase.Columns("DIAMETERTESTDRUM")
            Me.columnPRECONDTIME = MyBase.Columns("PRECONDTIME")
            Me.columnPRECONDTEMP = MyBase.Columns("PRECONDTEMP")
            Me.columnINFLATIONPRESSUREREADJUSTED = MyBase.Columns("INFLATIONPRESSUREREADJUSTED")
            Me.columnCIRCUNFERENCEBEFORETEST = MyBase.Columns("CIRCUNFERENCEBEFORETEST")
            Me.columnWHEELSPEEDRPM = MyBase.Columns("WHEELSPEEDRPM")
            Me.columnWHEELSPEEDKMH = MyBase.Columns("WHEELSPEEDKMH")
            Me.columnCIRCUNFERENCEAFTERTEST = MyBase.Columns("CIRCUNFERENCEAFTERTEST")
            Me.columnODDIFERENCE = MyBase.Columns("ODDIFERENCE")
            Me.columnODDIFERENCETOLERANCE = MyBase.Columns("ODDIFERENCETOLERANCE")
            Me.columnSERIENOM = MyBase.Columns("SERIENOM")
            Me.columnFINALJUDGEMENT = MyBase.Columns("FINALJUDGEMENT")
            Me.columnAPPROVER = MyBase.Columns("APPROVER")
            Me.columnPASSATKMH = MyBase.Columns("PASSATKMH")
            Me.columnSPEEDTTESTPASSFAIL = MyBase.Columns("SPEEDTTESTPASSFAIL")
            Me.columnSPEEDTOTALTIME = MyBase.Columns("SPEEDTOTALTIME")
            Me.columnMAXSPEED = MyBase.Columns("MAXSPEED")
            Me.columnMAXLOAD = MyBase.Columns("MAXLOAD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHIGHSPEEDID = New Global.System.Data.DataColumn("HIGHSPEEDID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHIGHSPEEDID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUM = New Global.System.Data.DataColumn("TIRENUM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUM)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPETIONDATE = New Global.System.Data.DataColumn("COMPETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnMFGWWYY = New Global.System.Data.DataColumn("MFGWWYY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMFGWWYY)
            Me.columnPRECONDSTARTDATE = New Global.System.Data.DataColumn("PRECONDSTARTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDSTARTDATE)
            Me.columnPRECONDSARTTEMP = New Global.System.Data.DataColumn("PRECONDSARTTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDSARTTEMP)
            Me.columnRIMDIAMETER = New Global.System.Data.DataColumn("RIMDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMDIAMETER)
            Me.columnRIMWIDTH = New Global.System.Data.DataColumn("RIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMWIDTH)
            Me.columnPRECONDENDDATE = New Global.System.Data.DataColumn("PRECONDENDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDENDDATE)
            Me.columnPRECONDENDTEMP = New Global.System.Data.DataColumn("PRECONDENDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDENDTEMP)
            Me.columnINFLATIONPRESSURE = New Global.System.Data.DataColumn("INFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSURE)
            Me.columnBEFOREDIAMETER = New Global.System.Data.DataColumn("BEFOREDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEFOREDIAMETER)
            Me.columnAFTERDIAMETER = New Global.System.Data.DataColumn("AFTERDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTERDIAMETER)
            Me.columnBEFOREINFLATION = New Global.System.Data.DataColumn("BEFOREINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEFOREINFLATION)
            Me.columnAFTERINFLATION = New Global.System.Data.DataColumn("AFTERINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTERINFLATION)
            Me.columnWHEELPOSITION = New Global.System.Data.DataColumn("WHEELPOSITION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELPOSITION)
            Me.columnWHEELNUMBER = New Global.System.Data.DataColumn("WHEELNUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELNUMBER)
            Me.columnFINALTEMP = New Global.System.Data.DataColumn("FINALTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALTEMP)
            Me.columnFINALDISTANCE = New Global.System.Data.DataColumn("FINALDISTANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALDISTANCE)
            Me.columnFINALINFLATION = New Global.System.Data.DataColumn("FINALINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALINFLATION)
            Me.columnPOSTCONDSTARTDATE = New Global.System.Data.DataColumn("POSTCONDSTARTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDSTARTDATE)
            Me.columnPOSTCONDENDDATE = New Global.System.Data.DataColumn("POSTCONDENDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDENDDATE)
            Me.columnPOSTCONDENDTEMP = New Global.System.Data.DataColumn("POSTCONDENDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDENDTEMP)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSYN)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnPOSTCONDTIME = New Global.System.Data.DataColumn("POSTCONDTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDTIME)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnDIAMETERTESTDRUM = New Global.System.Data.DataColumn("DIAMETERTESTDRUM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERTESTDRUM)
            Me.columnPRECONDTIME = New Global.System.Data.DataColumn("PRECONDTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDTIME)
            Me.columnPRECONDTEMP = New Global.System.Data.DataColumn("PRECONDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDTEMP)
            Me.columnINFLATIONPRESSUREREADJUSTED = New Global.System.Data.DataColumn("INFLATIONPRESSUREREADJUSTED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSUREREADJUSTED)
            Me.columnCIRCUNFERENCEBEFORETEST = New Global.System.Data.DataColumn("CIRCUNFERENCEBEFORETEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEBEFORETEST)
            Me.columnWHEELSPEEDRPM = New Global.System.Data.DataColumn("WHEELSPEEDRPM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELSPEEDRPM)
            Me.columnWHEELSPEEDKMH = New Global.System.Data.DataColumn("WHEELSPEEDKMH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELSPEEDKMH)
            Me.columnCIRCUNFERENCEAFTERTEST = New Global.System.Data.DataColumn("CIRCUNFERENCEAFTERTEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEAFTERTEST)
            Me.columnODDIFERENCE = New Global.System.Data.DataColumn("ODDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDIFERENCE)
            Me.columnODDIFERENCETOLERANCE = New Global.System.Data.DataColumn("ODDIFERENCETOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDIFERENCETOLERANCE)
            Me.columnSERIENOM = New Global.System.Data.DataColumn("SERIENOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIENOM)
            Me.columnFINALJUDGEMENT = New Global.System.Data.DataColumn("FINALJUDGEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALJUDGEMENT)
            Me.columnAPPROVER = New Global.System.Data.DataColumn("APPROVER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVER)
            Me.columnPASSATKMH = New Global.System.Data.DataColumn("PASSATKMH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSATKMH)
            Me.columnSPEEDTTESTPASSFAIL = New Global.System.Data.DataColumn("SPEEDTTESTPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDTTESTPASSFAIL)
            Me.columnSPEEDTOTALTIME = New Global.System.Data.DataColumn("SPEEDTOTALTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDTOTALTIME)
            Me.columnMAXSPEED = New Global.System.Data.DataColumn("MAXSPEED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXSPEED)
            Me.columnMAXLOAD = New Global.System.Data.DataColumn("MAXLOAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXLOAD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHIGHSPEEDID}, true))
            Me.columnHIGHSPEEDID.AllowDBNull = false
            Me.columnHIGHSPEEDID.Unique = true
            Me.columnPROJECTNUMBER.MaxLength = 40
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnMFGWWYY.MaxLength = 80
            Me.columnPASSYN.MaxLength = 4
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
            Me.columnSERIENOM.MaxLength = 50
            Me.columnFINALJUDGEMENT.MaxLength = 1
            Me.columnAPPROVER.MaxLength = 100
            Me.columnSPEEDTTESTPASSFAIL.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHIGHSPEEDHDRRow() As HIGHSPEEDHDRRow
            Return CType(Me.NewRow,HIGHSPEEDHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HIGHSPEEDHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HIGHSPEEDHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HIGHSPEEDHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDHDRRowChanged(Me, New HIGHSPEEDHDRRowChangeEvent(CType(e.Row,HIGHSPEEDHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HIGHSPEEDHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDHDRRowChanging(Me, New HIGHSPEEDHDRRowChangeEvent(CType(e.Row,HIGHSPEEDHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HIGHSPEEDHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDHDRRowDeleted(Me, New HIGHSPEEDHDRRowChangeEvent(CType(e.Row,HIGHSPEEDHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HIGHSPEEDHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDHDRRowDeleting(Me, New HIGHSPEEDHDRRowChangeEvent(CType(e.Row,HIGHSPEEDHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHIGHSPEEDHDRRow(ByVal row As HIGHSPEEDHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HIGHSPEEDHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MEASUREDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnMEASUREID As Global.System.Data.DataColumn
        
        Private columnSECTIONWIDTH As Global.System.Data.DataColumn
        
        Private columnOVERALLWIDTH As Global.System.Data.DataColumn
        
        Private columnITERATION As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MEASUREDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEASUREIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEASUREID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SECTIONWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECTIONWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OVERALLWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVERALLWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITERATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITERATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MEASUREDTLRow
            Get
                Return CType(Me.Rows(index),MEASUREDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREDTLRowChanging As MEASUREDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREDTLRowChanged As MEASUREDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREDTLRowDeleting As MEASUREDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREDTLRowDeleted As MEASUREDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMEASUREDTLRow(ByVal row As MEASUREDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMEASUREDTLRow(ByVal parentMEASUREHDRRowByMEASUREHDR_MEASUREDTL As MEASUREHDRRow, ByVal SECTIONWIDTH As Decimal, ByVal OVERALLWIDTH As Decimal, ByVal ITERATION As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As MEASUREDTLRow
            Dim rowMEASUREDTLRow As MEASUREDTLRow = CType(Me.NewRow,MEASUREDTLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SECTIONWIDTH, OVERALLWIDTH, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentMEASUREHDRRowByMEASUREHDR_MEASUREDTL) Is Nothing) Then
                columnValuesArray(0) = parentMEASUREHDRRowByMEASUREHDR_MEASUREDTL(0)
            End If
            rowMEASUREDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMEASUREDTLRow)
            Return rowMEASUREDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MEASUREDTLDataTable = CType(MyBase.Clone,MEASUREDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MEASUREDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMEASUREID = MyBase.Columns("MEASUREID")
            Me.columnSECTIONWIDTH = MyBase.Columns("SECTIONWIDTH")
            Me.columnOVERALLWIDTH = MyBase.Columns("OVERALLWIDTH")
            Me.columnITERATION = MyBase.Columns("ITERATION")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMEASUREID = New Global.System.Data.DataColumn("MEASUREID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEASUREID)
            Me.columnSECTIONWIDTH = New Global.System.Data.DataColumn("SECTIONWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECTIONWIDTH)
            Me.columnOVERALLWIDTH = New Global.System.Data.DataColumn("OVERALLWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVERALLWIDTH)
            Me.columnITERATION = New Global.System.Data.DataColumn("ITERATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITERATION)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnMEASUREID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMEASUREDTLRow() As MEASUREDTLRow
            Return CType(Me.NewRow,MEASUREDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MEASUREDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MEASUREDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MEASUREDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent MEASUREDTLRowChanged(Me, New MEASUREDTLRowChangeEvent(CType(e.Row,MEASUREDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MEASUREDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent MEASUREDTLRowChanging(Me, New MEASUREDTLRowChangeEvent(CType(e.Row,MEASUREDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MEASUREDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent MEASUREDTLRowDeleted(Me, New MEASUREDTLRowChangeEvent(CType(e.Row,MEASUREDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MEASUREDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent MEASUREDTLRowDeleting(Me, New MEASUREDTLRowChangeEvent(CType(e.Row,MEASUREDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMEASUREDTLRow(ByVal row As MEASUREDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MEASUREDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MEASUREHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnMEASUREID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnMOLDDESIGN As Global.System.Data.DataColumn
        
        Private columnRIMWIDTH As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnDIAMETER As Global.System.Data.DataColumn
        
        Private columnAVGSECTIONWIDTH As Global.System.Data.DataColumn
        
        Private columnAVGOVERALLWIDTH As Global.System.Data.DataColumn
        
        Private columnMAXOVERALLWIDTH As Global.System.Data.DataColumn
        
        Private columnSIZEFACTOR As Global.System.Data.DataColumn
        
        Private columnMOUNTTIME As Global.System.Data.DataColumn
        
        Private columnMOUNTTEMP As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnENDTIME As Global.System.Data.DataColumn
        
        Private columnACTSIZEFACTOR As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnSTARTINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnENDINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnADJUSTMENT As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCE As Global.System.Data.DataColumn
        
        Private columnNOMINALDIAMETER As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTH As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTHPASSFAIL As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTHDIFERENCE As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTHTOLERANCE As Global.System.Data.DataColumn
        
        Private columnMAXOVERALLDIAMETER As Global.System.Data.DataColumn
        
        Private columnMINOVERALLDIAMETER As Global.System.Data.DataColumn
        
        Private columnOVERALLWIDTHPASSFAIL As Global.System.Data.DataColumn
        
        Private columnOVERALLDIAMETERPASSFAIL As Global.System.Data.DataColumn
        
        Private columnDIAMETERDIFERENCE As Global.System.Data.DataColumn
        
        Private columnDIAMETERTOLERANCE As Global.System.Data.DataColumn
        
        Private columnTEMPRESISTANCEGRADING As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHT1 As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHT2 As Global.System.Data.DataColumn
        
        Private columnELONGATION1 As Global.System.Data.DataColumn
        
        Private columnELONGATION2 As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHTAFTERAGE1 As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHTAFTERAGE2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MEASUREHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEASUREIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEASUREID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOLDDESIGNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOLDDESIGN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AVGSECTIONWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVGSECTIONWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AVGOVERALLWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVGOVERALLWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXOVERALLWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXOVERALLWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIZEFACTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZEFACTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOUNTTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOUNTTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOUNTTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOUNTTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTSIZEFACTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTSIZEFACTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STARTINFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTARTINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDINFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADJUSTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUSTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTHPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTHDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHTOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTHTOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXOVERALLDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXOVERALLDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MINOVERALLDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINOVERALLDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OVERALLWIDTHPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVERALLWIDTHPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OVERALLDIAMETERPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVERALLDIAMETERPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERTOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERTOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TEMPRESISTANCEGRADINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEMPRESISTANCEGRADING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELONGATION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnELONGATION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELONGATION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnELONGATION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHTAFTERAGE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHTAFTERAGE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHTAFTERAGE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHTAFTERAGE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MEASUREHDRRow
            Get
                Return CType(Me.Rows(index),MEASUREHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREHDRRowChanging As MEASUREHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREHDRRowChanged As MEASUREHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREHDRRowDeleting As MEASUREHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREHDRRowDeleted As MEASUREHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMEASUREHDRRow(ByVal row As MEASUREHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMEASUREHDRRow( _
                    ByVal MEASUREID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal INFLATIONPRESSURE As Decimal,  _
                    ByVal MOLDDESIGN As String,  _
                    ByVal RIMWIDTH As Decimal,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal DIAMETER As Decimal,  _
                    ByVal AVGSECTIONWIDTH As Decimal,  _
                    ByVal AVGOVERALLWIDTH As Decimal,  _
                    ByVal MAXOVERALLWIDTH As Decimal,  _
                    ByVal SIZEFACTOR As Decimal,  _
                    ByVal MOUNTTIME As Date,  _
                    ByVal MOUNTTEMP As Decimal,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal ENDTIME As Date,  _
                    ByVal ACTSIZEFACTOR As Decimal,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal STARTINFLATIONPRESSURE As Decimal,  _
                    ByVal ENDINFLATIONPRESSURE As Decimal,  _
                    ByVal ADJUSTMENT As String,  _
                    ByVal CIRCUNFERENCE As Decimal,  _
                    ByVal NOMINALDIAMETER As Decimal,  _
                    ByVal NOMINALWIDTH As Decimal,  _
                    ByVal NOMINALWIDTHPASSFAIL As String,  _
                    ByVal NOMINALWIDTHDIFERENCE As Decimal,  _
                    ByVal NOMINALWIDTHTOLERANCE As Decimal,  _
                    ByVal MAXOVERALLDIAMETER As Decimal,  _
                    ByVal MINOVERALLDIAMETER As Decimal,  _
                    ByVal OVERALLWIDTHPASSFAIL As String,  _
                    ByVal OVERALLDIAMETERPASSFAIL As String,  _
                    ByVal DIAMETERDIFERENCE As Decimal,  _
                    ByVal DIAMETERTOLERANCE As Decimal,  _
                    ByVal TEMPRESISTANCEGRADING As Decimal,  _
                    ByVal TENSILESTRENGHT1 As Decimal,  _
                    ByVal TENSILESTRENGHT2 As Decimal,  _
                    ByVal ELONGATION1 As Decimal,  _
                    ByVal ELONGATION2 As Decimal,  _
                    ByVal TENSILESTRENGHTAFTERAGE1 As Decimal,  _
                    ByVal TENSILESTRENGHTAFTERAGE2 As Decimal) As MEASUREHDRRow
            Dim rowMEASUREHDRRow As MEASUREHDRRow = CType(Me.NewRow,MEASUREHDRRow)
            Dim columnValuesArray() As Object = New Object() {MEASUREID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, INFLATIONPRESSURE, MOLDDESIGN, RIMWIDTH, DOTSERIALNUMBER, DIAMETER, AVGSECTIONWIDTH, AVGOVERALLWIDTH, MAXOVERALLWIDTH, SIZEFACTOR, MOUNTTIME, MOUNTTEMP, SERIALDATE, ENDTIME, ACTSIZEFACTOR, CERTIFICATIONTYPEID, CERTIFICATENUMBER, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, STARTINFLATIONPRESSURE, ENDINFLATIONPRESSURE, ADJUSTMENT, CIRCUNFERENCE, NOMINALDIAMETER, NOMINALWIDTH, NOMINALWIDTHPASSFAIL, NOMINALWIDTHDIFERENCE, NOMINALWIDTHTOLERANCE, MAXOVERALLDIAMETER, MINOVERALLDIAMETER, OVERALLWIDTHPASSFAIL, OVERALLDIAMETERPASSFAIL, DIAMETERDIFERENCE, DIAMETERTOLERANCE, TEMPRESISTANCEGRADING, TENSILESTRENGHT1, TENSILESTRENGHT2, ELONGATION1, ELONGATION2, TENSILESTRENGHTAFTERAGE1, TENSILESTRENGHTAFTERAGE2}
            rowMEASUREHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMEASUREHDRRow)
            Return rowMEASUREHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByMEASUREID(ByVal MEASUREID As Decimal) As MEASUREHDRRow
            Return CType(Me.Rows.Find(New Object() {MEASUREID}),MEASUREHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MEASUREHDRDataTable = CType(MyBase.Clone,MEASUREHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MEASUREHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMEASUREID = MyBase.Columns("MEASUREID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnINFLATIONPRESSURE = MyBase.Columns("INFLATIONPRESSURE")
            Me.columnMOLDDESIGN = MyBase.Columns("MOLDDESIGN")
            Me.columnRIMWIDTH = MyBase.Columns("RIMWIDTH")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnDIAMETER = MyBase.Columns("DIAMETER")
            Me.columnAVGSECTIONWIDTH = MyBase.Columns("AVGSECTIONWIDTH")
            Me.columnAVGOVERALLWIDTH = MyBase.Columns("AVGOVERALLWIDTH")
            Me.columnMAXOVERALLWIDTH = MyBase.Columns("MAXOVERALLWIDTH")
            Me.columnSIZEFACTOR = MyBase.Columns("SIZEFACTOR")
            Me.columnMOUNTTIME = MyBase.Columns("MOUNTTIME")
            Me.columnMOUNTTEMP = MyBase.Columns("MOUNTTEMP")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnENDTIME = MyBase.Columns("ENDTIME")
            Me.columnACTSIZEFACTOR = MyBase.Columns("ACTSIZEFACTOR")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnSTARTINFLATIONPRESSURE = MyBase.Columns("STARTINFLATIONPRESSURE")
            Me.columnENDINFLATIONPRESSURE = MyBase.Columns("ENDINFLATIONPRESSURE")
            Me.columnADJUSTMENT = MyBase.Columns("ADJUSTMENT")
            Me.columnCIRCUNFERENCE = MyBase.Columns("CIRCUNFERENCE")
            Me.columnNOMINALDIAMETER = MyBase.Columns("NOMINALDIAMETER")
            Me.columnNOMINALWIDTH = MyBase.Columns("NOMINALWIDTH")
            Me.columnNOMINALWIDTHPASSFAIL = MyBase.Columns("NOMINALWIDTHPASSFAIL")
            Me.columnNOMINALWIDTHDIFERENCE = MyBase.Columns("NOMINALWIDTHDIFERENCE")
            Me.columnNOMINALWIDTHTOLERANCE = MyBase.Columns("NOMINALWIDTHTOLERANCE")
            Me.columnMAXOVERALLDIAMETER = MyBase.Columns("MAXOVERALLDIAMETER")
            Me.columnMINOVERALLDIAMETER = MyBase.Columns("MINOVERALLDIAMETER")
            Me.columnOVERALLWIDTHPASSFAIL = MyBase.Columns("OVERALLWIDTHPASSFAIL")
            Me.columnOVERALLDIAMETERPASSFAIL = MyBase.Columns("OVERALLDIAMETERPASSFAIL")
            Me.columnDIAMETERDIFERENCE = MyBase.Columns("DIAMETERDIFERENCE")
            Me.columnDIAMETERTOLERANCE = MyBase.Columns("DIAMETERTOLERANCE")
            Me.columnTEMPRESISTANCEGRADING = MyBase.Columns("TEMPRESISTANCEGRADING")
            Me.columnTENSILESTRENGHT1 = MyBase.Columns("TENSILESTRENGHT1")
            Me.columnTENSILESTRENGHT2 = MyBase.Columns("TENSILESTRENGHT2")
            Me.columnELONGATION1 = MyBase.Columns("ELONGATION1")
            Me.columnELONGATION2 = MyBase.Columns("ELONGATION2")
            Me.columnTENSILESTRENGHTAFTERAGE1 = MyBase.Columns("TENSILESTRENGHTAFTERAGE1")
            Me.columnTENSILESTRENGHTAFTERAGE2 = MyBase.Columns("TENSILESTRENGHTAFTERAGE2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMEASUREID = New Global.System.Data.DataColumn("MEASUREID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEASUREID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnINFLATIONPRESSURE = New Global.System.Data.DataColumn("INFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSURE)
            Me.columnMOLDDESIGN = New Global.System.Data.DataColumn("MOLDDESIGN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOLDDESIGN)
            Me.columnRIMWIDTH = New Global.System.Data.DataColumn("RIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMWIDTH)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnDIAMETER = New Global.System.Data.DataColumn("DIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETER)
            Me.columnAVGSECTIONWIDTH = New Global.System.Data.DataColumn("AVGSECTIONWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVGSECTIONWIDTH)
            Me.columnAVGOVERALLWIDTH = New Global.System.Data.DataColumn("AVGOVERALLWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVGOVERALLWIDTH)
            Me.columnMAXOVERALLWIDTH = New Global.System.Data.DataColumn("MAXOVERALLWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXOVERALLWIDTH)
            Me.columnSIZEFACTOR = New Global.System.Data.DataColumn("SIZEFACTOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZEFACTOR)
            Me.columnMOUNTTIME = New Global.System.Data.DataColumn("MOUNTTIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOUNTTIME)
            Me.columnMOUNTTEMP = New Global.System.Data.DataColumn("MOUNTTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOUNTTEMP)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnENDTIME = New Global.System.Data.DataColumn("ENDTIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDTIME)
            Me.columnACTSIZEFACTOR = New Global.System.Data.DataColumn("ACTSIZEFACTOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTSIZEFACTOR)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnSTARTINFLATIONPRESSURE = New Global.System.Data.DataColumn("STARTINFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTARTINFLATIONPRESSURE)
            Me.columnENDINFLATIONPRESSURE = New Global.System.Data.DataColumn("ENDINFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDINFLATIONPRESSURE)
            Me.columnADJUSTMENT = New Global.System.Data.DataColumn("ADJUSTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUSTMENT)
            Me.columnCIRCUNFERENCE = New Global.System.Data.DataColumn("CIRCUNFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCE)
            Me.columnNOMINALDIAMETER = New Global.System.Data.DataColumn("NOMINALDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALDIAMETER)
            Me.columnNOMINALWIDTH = New Global.System.Data.DataColumn("NOMINALWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTH)
            Me.columnNOMINALWIDTHPASSFAIL = New Global.System.Data.DataColumn("NOMINALWIDTHPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTHPASSFAIL)
            Me.columnNOMINALWIDTHDIFERENCE = New Global.System.Data.DataColumn("NOMINALWIDTHDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTHDIFERENCE)
            Me.columnNOMINALWIDTHTOLERANCE = New Global.System.Data.DataColumn("NOMINALWIDTHTOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTHTOLERANCE)
            Me.columnMAXOVERALLDIAMETER = New Global.System.Data.DataColumn("MAXOVERALLDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXOVERALLDIAMETER)
            Me.columnMINOVERALLDIAMETER = New Global.System.Data.DataColumn("MINOVERALLDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINOVERALLDIAMETER)
            Me.columnOVERALLWIDTHPASSFAIL = New Global.System.Data.DataColumn("OVERALLWIDTHPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVERALLWIDTHPASSFAIL)
            Me.columnOVERALLDIAMETERPASSFAIL = New Global.System.Data.DataColumn("OVERALLDIAMETERPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVERALLDIAMETERPASSFAIL)
            Me.columnDIAMETERDIFERENCE = New Global.System.Data.DataColumn("DIAMETERDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERDIFERENCE)
            Me.columnDIAMETERTOLERANCE = New Global.System.Data.DataColumn("DIAMETERTOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERTOLERANCE)
            Me.columnTEMPRESISTANCEGRADING = New Global.System.Data.DataColumn("TEMPRESISTANCEGRADING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEMPRESISTANCEGRADING)
            Me.columnTENSILESTRENGHT1 = New Global.System.Data.DataColumn("TENSILESTRENGHT1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHT1)
            Me.columnTENSILESTRENGHT2 = New Global.System.Data.DataColumn("TENSILESTRENGHT2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHT2)
            Me.columnELONGATION1 = New Global.System.Data.DataColumn("ELONGATION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELONGATION1)
            Me.columnELONGATION2 = New Global.System.Data.DataColumn("ELONGATION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELONGATION2)
            Me.columnTENSILESTRENGHTAFTERAGE1 = New Global.System.Data.DataColumn("TENSILESTRENGHTAFTERAGE1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHTAFTERAGE1)
            Me.columnTENSILESTRENGHTAFTERAGE2 = New Global.System.Data.DataColumn("TENSILESTRENGHTAFTERAGE2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHTAFTERAGE2)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMEASUREID}, true))
            Me.columnMEASUREID.AllowDBNull = false
            Me.columnMEASUREID.Unique = true
            Me.columnPROJECTNUMBER.AllowDBNull = false
            Me.columnPROJECTNUMBER.MaxLength = 40
            Me.columnTIRENUMBER.AllowDBNull = false
            Me.columnTESTSPEC.AllowDBNull = false
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnMOLDDESIGN.MaxLength = 80
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
            Me.columnADJUSTMENT.MaxLength = 50
            Me.columnNOMINALWIDTHPASSFAIL.MaxLength = 1
            Me.columnOVERALLWIDTHPASSFAIL.MaxLength = 1
            Me.columnOVERALLDIAMETERPASSFAIL.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMEASUREHDRRow() As MEASUREHDRRow
            Return CType(Me.NewRow,MEASUREHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MEASUREHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MEASUREHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MEASUREHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent MEASUREHDRRowChanged(Me, New MEASUREHDRRowChangeEvent(CType(e.Row,MEASUREHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MEASUREHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent MEASUREHDRRowChanging(Me, New MEASUREHDRRowChangeEvent(CType(e.Row,MEASUREHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MEASUREHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent MEASUREHDRRowDeleted(Me, New MEASUREHDRRowChangeEvent(CType(e.Row,MEASUREHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MEASUREHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent MEASUREHDRRowDeleting(Me, New MEASUREHDRRowChangeEvent(CType(e.Row,MEASUREHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMEASUREHDRRow(ByVal row As MEASUREHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MEASUREHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PLUNGERDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnPLUNGERID As Global.System.Data.DataColumn
        
        Private columnBREAKINGENERGY As Global.System.Data.DataColumn
        
        Private columnITERATION As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PLUNGERDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUNGERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUNGERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BREAKINGENERGYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBREAKINGENERGY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITERATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITERATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PLUNGERDTLRow
            Get
                Return CType(Me.Rows(index),PLUNGERDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERDTLRowChanging As PLUNGERDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERDTLRowChanged As PLUNGERDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERDTLRowDeleting As PLUNGERDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERDTLRowDeleted As PLUNGERDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPLUNGERDTLRow(ByVal row As PLUNGERDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPLUNGERDTLRow(ByVal parentPLUNGERHDRRowByPLUNGERDTL_PLUNGERHDR As PLUNGERHDRRow, ByVal BREAKINGENERGY As Decimal, ByVal ITERATION As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As PLUNGERDTLRow
            Dim rowPLUNGERDTLRow As PLUNGERDTLRow = CType(Me.NewRow,PLUNGERDTLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, BREAKINGENERGY, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentPLUNGERHDRRowByPLUNGERDTL_PLUNGERHDR) Is Nothing) Then
                columnValuesArray(0) = parentPLUNGERHDRRowByPLUNGERDTL_PLUNGERHDR(0)
            End If
            rowPLUNGERDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPLUNGERDTLRow)
            Return rowPLUNGERDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PLUNGERDTLDataTable = CType(MyBase.Clone,PLUNGERDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PLUNGERDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPLUNGERID = MyBase.Columns("PLUNGERID")
            Me.columnBREAKINGENERGY = MyBase.Columns("BREAKINGENERGY")
            Me.columnITERATION = MyBase.Columns("ITERATION")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPLUNGERID = New Global.System.Data.DataColumn("PLUNGERID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUNGERID)
            Me.columnBREAKINGENERGY = New Global.System.Data.DataColumn("BREAKINGENERGY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBREAKINGENERGY)
            Me.columnITERATION = New Global.System.Data.DataColumn("ITERATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITERATION)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnPLUNGERID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPLUNGERDTLRow() As PLUNGERDTLRow
            Return CType(Me.NewRow,PLUNGERDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PLUNGERDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PLUNGERDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PLUNGERDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent PLUNGERDTLRowChanged(Me, New PLUNGERDTLRowChangeEvent(CType(e.Row,PLUNGERDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PLUNGERDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent PLUNGERDTLRowChanging(Me, New PLUNGERDTLRowChangeEvent(CType(e.Row,PLUNGERDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PLUNGERDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent PLUNGERDTLRowDeleted(Me, New PLUNGERDTLRowChangeEvent(CType(e.Row,PLUNGERDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PLUNGERDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent PLUNGERDTLRowDeleting(Me, New PLUNGERDTLRowChangeEvent(CType(e.Row,PLUNGERDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePLUNGERDTLRow(ByVal row As PLUNGERDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PLUNGERDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PLUNGERHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnPLUNGERID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnAVGBREAKINGENERGY As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnMINPLUNGER As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PLUNGERHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUNGERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUNGERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AVGBREAKINGENERGYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVGBREAKINGENERGY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MINPLUNGERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINPLUNGER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PLUNGERHDRRow
            Get
                Return CType(Me.Rows(index),PLUNGERHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERHDRRowChanging As PLUNGERHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERHDRRowChanged As PLUNGERHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERHDRRowDeleting As PLUNGERHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERHDRRowDeleted As PLUNGERHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPLUNGERHDRRow(ByVal row As PLUNGERHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPLUNGERHDRRow( _
                    ByVal PLUNGERID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal AVGBREAKINGENERGY As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal MINPLUNGER As Decimal,  _
                    ByVal CREATEDON As String,  _
                    ByVal CREATEDBY As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date) As PLUNGERHDRRow
            Dim rowPLUNGERHDRRow As PLUNGERHDRRow = CType(Me.NewRow,PLUNGERHDRRow)
            Dim columnValuesArray() As Object = New Object() {PLUNGERID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIALNUMBER, AVGBREAKINGENERGY, PASSYN, CERTIFICATIONTYPEID, CERTIFICATENUMBER, SERIALDATE, MINPLUNGER, CREATEDON, CREATEDBY, MODIFIEDBY, MODIFIEDON}
            rowPLUNGERHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPLUNGERHDRRow)
            Return rowPLUNGERHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByPLUNGERID(ByVal PLUNGERID As Decimal) As PLUNGERHDRRow
            Return CType(Me.Rows.Find(New Object() {PLUNGERID}),PLUNGERHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PLUNGERHDRDataTable = CType(MyBase.Clone,PLUNGERHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PLUNGERHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPLUNGERID = MyBase.Columns("PLUNGERID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnAVGBREAKINGENERGY = MyBase.Columns("AVGBREAKINGENERGY")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnMINPLUNGER = MyBase.Columns("MINPLUNGER")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPLUNGERID = New Global.System.Data.DataColumn("PLUNGERID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUNGERID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnAVGBREAKINGENERGY = New Global.System.Data.DataColumn("AVGBREAKINGENERGY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVGBREAKINGENERGY)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSYN)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnMINPLUNGER = New Global.System.Data.DataColumn("MINPLUNGER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINPLUNGER)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPLUNGERID}, true))
            Me.columnPLUNGERID.AllowDBNull = false
            Me.columnPLUNGERID.Unique = true
            Me.columnPROJECTNUMBER.MaxLength = 10
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnPASSYN.MaxLength = 4
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnCREATEDON.MaxLength = 200
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPLUNGERHDRRow() As PLUNGERHDRRow
            Return CType(Me.NewRow,PLUNGERHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PLUNGERHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PLUNGERHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PLUNGERHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent PLUNGERHDRRowChanged(Me, New PLUNGERHDRRowChangeEvent(CType(e.Row,PLUNGERHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PLUNGERHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent PLUNGERHDRRowChanging(Me, New PLUNGERHDRRowChangeEvent(CType(e.Row,PLUNGERHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PLUNGERHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent PLUNGERHDRRowDeleted(Me, New PLUNGERHDRRowChangeEvent(CType(e.Row,PLUNGERHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PLUNGERHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent PLUNGERHDRRowDeleting(Me, New PLUNGERHDRRowChangeEvent(CType(e.Row,PLUNGERHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePLUNGERHDRRow(ByVal row As PLUNGERHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PLUNGERHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TREADWEARHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTREADWEARID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnLOWESTWEARBAR As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnINDICATORSREQUIREMENT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TREADWEARHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADWEARIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADWEARID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOWESTWEARBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOWESTWEARBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDICATORSREQUIREMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICATORSREQUIREMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TREADWEARHDRRow
            Get
                Return CType(Me.Rows(index),TREADWEARHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARHDRRowChanging As TREADWEARHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARHDRRowChanged As TREADWEARHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARHDRRowDeleting As TREADWEARHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARHDRRowDeleted As TREADWEARHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTREADWEARHDRRow(ByVal row As TREADWEARHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTREADWEARHDRRow( _
                    ByVal TREADWEARID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal LOWESTWEARBAR As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal INDICATORSREQUIREMENT As Decimal) As TREADWEARHDRRow
            Dim rowTREADWEARHDRRow As TREADWEARHDRRow = CType(Me.NewRow,TREADWEARHDRRow)
            Dim columnValuesArray() As Object = New Object() {TREADWEARID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIALNUMBER, LOWESTWEARBAR, PASSYN, SERIALDATE, CERTIFICATIONTYPEID, CERTIFICATENUMBER, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, INDICATORSREQUIREMENT}
            rowTREADWEARHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTREADWEARHDRRow)
            Return rowTREADWEARHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByTREADWEARID(ByVal TREADWEARID As Decimal) As TREADWEARHDRRow
            Return CType(Me.Rows.Find(New Object() {TREADWEARID}),TREADWEARHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TREADWEARHDRDataTable = CType(MyBase.Clone,TREADWEARHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TREADWEARHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTREADWEARID = MyBase.Columns("TREADWEARID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnLOWESTWEARBAR = MyBase.Columns("LOWESTWEARBAR")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnINDICATORSREQUIREMENT = MyBase.Columns("INDICATORSREQUIREMENT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTREADWEARID = New Global.System.Data.DataColumn("TREADWEARID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADWEARID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnLOWESTWEARBAR = New Global.System.Data.DataColumn("LOWESTWEARBAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOWESTWEARBAR)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSYN)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnINDICATORSREQUIREMENT = New Global.System.Data.DataColumn("INDICATORSREQUIREMENT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICATORSREQUIREMENT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTREADWEARID}, true))
            Me.columnTREADWEARID.AllowDBNull = false
            Me.columnTREADWEARID.Unique = true
            Me.columnPROJECTNUMBER.AllowDBNull = false
            Me.columnPROJECTNUMBER.MaxLength = 40
            Me.columnTIRENUMBER.AllowDBNull = false
            Me.columnTESTSPEC.AllowDBNull = false
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnPASSYN.MaxLength = 4
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTREADWEARHDRRow() As TREADWEARHDRRow
            Return CType(Me.NewRow,TREADWEARHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TREADWEARHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TREADWEARHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TREADWEARHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent TREADWEARHDRRowChanged(Me, New TREADWEARHDRRowChangeEvent(CType(e.Row,TREADWEARHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TREADWEARHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent TREADWEARHDRRowChanging(Me, New TREADWEARHDRRowChangeEvent(CType(e.Row,TREADWEARHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TREADWEARHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent TREADWEARHDRRowDeleted(Me, New TREADWEARHDRRowChangeEvent(CType(e.Row,TREADWEARHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TREADWEARHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent TREADWEARHDRRowDeleting(Me, New TREADWEARHDRRowChangeEvent(CType(e.Row,TREADWEARHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTREADWEARHDRRow(ByVal row As TREADWEARHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TREADWEARHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TREADWEARDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTREADWEARID As Global.System.Data.DataColumn
        
        Private columnWEARBARHEIGHT As Global.System.Data.DataColumn
        
        Private columnITERATION As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TREADWEARDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADWEARIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADWEARID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WEARBARHEIGHTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWEARBARHEIGHT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITERATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITERATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TREADWEARDTLRow
            Get
                Return CType(Me.Rows(index),TREADWEARDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARDTLRowChanging As TREADWEARDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARDTLRowChanged As TREADWEARDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARDTLRowDeleting As TREADWEARDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARDTLRowDeleted As TREADWEARDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTREADWEARDTLRow(ByVal row As TREADWEARDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTREADWEARDTLRow(ByVal parentTREADWEARHDRRowByTREADWEARHDR_TREADWEARDTL As TREADWEARHDRRow, ByVal WEARBARHEIGHT As Decimal, ByVal ITERATION As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As TREADWEARDTLRow
            Dim rowTREADWEARDTLRow As TREADWEARDTLRow = CType(Me.NewRow,TREADWEARDTLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, WEARBARHEIGHT, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentTREADWEARHDRRowByTREADWEARHDR_TREADWEARDTL) Is Nothing) Then
                columnValuesArray(0) = parentTREADWEARHDRRowByTREADWEARHDR_TREADWEARDTL(0)
            End If
            rowTREADWEARDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTREADWEARDTLRow)
            Return rowTREADWEARDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TREADWEARDTLDataTable = CType(MyBase.Clone,TREADWEARDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TREADWEARDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTREADWEARID = MyBase.Columns("TREADWEARID")
            Me.columnWEARBARHEIGHT = MyBase.Columns("WEARBARHEIGHT")
            Me.columnITERATION = MyBase.Columns("ITERATION")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTREADWEARID = New Global.System.Data.DataColumn("TREADWEARID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADWEARID)
            Me.columnWEARBARHEIGHT = New Global.System.Data.DataColumn("WEARBARHEIGHT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWEARBARHEIGHT)
            Me.columnITERATION = New Global.System.Data.DataColumn("ITERATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITERATION)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnTREADWEARID.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnMODIFIEDBY.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTREADWEARDTLRow() As TREADWEARDTLRow
            Return CType(Me.NewRow,TREADWEARDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TREADWEARDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TREADWEARDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TREADWEARDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent TREADWEARDTLRowChanged(Me, New TREADWEARDTLRowChangeEvent(CType(e.Row,TREADWEARDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TREADWEARDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent TREADWEARDTLRowChanging(Me, New TREADWEARDTLRowChangeEvent(CType(e.Row,TREADWEARDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TREADWEARDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent TREADWEARDTLRowDeleted(Me, New TREADWEARDTLRowChangeEvent(CType(e.Row,TREADWEARDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TREADWEARDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent TREADWEARDTLRowDeleting(Me, New TREADWEARDTLRowChangeEvent(CType(e.Row,TREADWEARDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTREADWEARDTLRow(ByVal row As TREADWEARDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TREADWEARDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPEEDTESTDETAILDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnITERATION As Global.System.Data.DataColumn
        
        Private columnTIME As Global.System.Data.DataColumn
        
        Private columnSPEED As Global.System.Data.DataColumn
        
        Private columnHIGHSPEEDID As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPEEDTESTDETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITERATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITERATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HIGHSPEEDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHIGHSPEEDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPEEDTESTDETAILRow
            Get
                Return CType(Me.Rows(index),SPEEDTESTDETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPEEDTESTDETAILRowChanging As SPEEDTESTDETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPEEDTESTDETAILRowChanged As SPEEDTESTDETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPEEDTESTDETAILRowDeleting As SPEEDTESTDETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPEEDTESTDETAILRowDeleted As SPEEDTESTDETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSPEEDTESTDETAILRow(ByVal row As SPEEDTESTDETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSPEEDTESTDETAILRow(ByVal ITERATION As Decimal, ByVal TIME As Date, ByVal SPEED As Decimal, ByVal parentHIGHSPEEDHDRRowByHIGHSPEEDHDR_SPEEDTESTDETAIL As HIGHSPEEDHDRRow, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As SPEEDTESTDETAILRow
            Dim rowSPEEDTESTDETAILRow As SPEEDTESTDETAILRow = CType(Me.NewRow,SPEEDTESTDETAILRow)
            Dim columnValuesArray() As Object = New Object() {ITERATION, TIME, SPEED, Nothing, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentHIGHSPEEDHDRRowByHIGHSPEEDHDR_SPEEDTESTDETAIL) Is Nothing) Then
                columnValuesArray(3) = parentHIGHSPEEDHDRRowByHIGHSPEEDHDR_SPEEDTESTDETAIL(0)
            End If
            rowSPEEDTESTDETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPEEDTESTDETAILRow)
            Return rowSPEEDTESTDETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPEEDTESTDETAILDataTable = CType(MyBase.Clone,SPEEDTESTDETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPEEDTESTDETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnITERATION = MyBase.Columns("ITERATION")
            Me.columnTIME = MyBase.Columns("TIME")
            Me.columnSPEED = MyBase.Columns("SPEED")
            Me.columnHIGHSPEEDID = MyBase.Columns("HIGHSPEEDID")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnITERATION = New Global.System.Data.DataColumn("ITERATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITERATION)
            Me.columnTIME = New Global.System.Data.DataColumn("TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIME)
            Me.columnSPEED = New Global.System.Data.DataColumn("SPEED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEED)
            Me.columnHIGHSPEEDID = New Global.System.Data.DataColumn("HIGHSPEEDID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHIGHSPEEDID)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnHIGHSPEEDID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSPEEDTESTDETAILRow() As SPEEDTESTDETAILRow
            Return CType(Me.NewRow,SPEEDTESTDETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPEEDTESTDETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPEEDTESTDETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPEEDTESTDETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent SPEEDTESTDETAILRowChanged(Me, New SPEEDTESTDETAILRowChangeEvent(CType(e.Row,SPEEDTESTDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPEEDTESTDETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent SPEEDTESTDETAILRowChanging(Me, New SPEEDTESTDETAILRowChangeEvent(CType(e.Row,SPEEDTESTDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPEEDTESTDETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent SPEEDTESTDETAILRowDeleted(Me, New SPEEDTESTDETAILRowChangeEvent(CType(e.Row,SPEEDTESTDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPEEDTESTDETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent SPEEDTESTDETAILRowDeleting(Me, New SPEEDTESTDETAILRowChangeEvent(CType(e.Row,SPEEDTESTDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSPEEDTESTDETAILRow(ByVal row As SPEEDTESTDETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPEEDTESTDETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BRAND_VIEWDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnBRANDCODE As Global.System.Data.DataColumn
        
        Private columnBRANDNAME As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnEXTENSION_EN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BRAND_VIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BRAND_VIEWRow
            Get
                Return CType(Me.Rows(index),BRAND_VIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BRAND_VIEWRowChanging As BRAND_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BRAND_VIEWRowChanged As BRAND_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BRAND_VIEWRowDeleting As BRAND_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BRAND_VIEWRowDeleted As BRAND_VIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBRAND_VIEWRow(ByVal row As BRAND_VIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBRAND_VIEWRow(ByVal BRANDCODE As String, ByVal BRANDNAME As String, ByVal parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_BRAND_VIEW As CERTIFICATE_VIEWRow, ByVal EXTENSION_EN As String) As BRAND_VIEWRow
            Dim rowBRAND_VIEWRow As BRAND_VIEWRow = CType(Me.NewRow,BRAND_VIEWRow)
            Dim columnValuesArray() As Object = New Object() {BRANDCODE, BRANDNAME, Nothing, EXTENSION_EN}
            If (Not (parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_BRAND_VIEW) Is Nothing) Then
                columnValuesArray(2) = parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_BRAND_VIEW(3)
            End If
            rowBRAND_VIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBRAND_VIEWRow)
            Return rowBRAND_VIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BRAND_VIEWDataTable = CType(MyBase.Clone,BRAND_VIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BRAND_VIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBRANDCODE = MyBase.Columns("BRANDCODE")
            Me.columnBRANDNAME = MyBase.Columns("BRANDNAME")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnEXTENSION_EN = MyBase.Columns("EXTENSION_EN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBRANDCODE = New Global.System.Data.DataColumn("BRANDCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDCODE)
            Me.columnBRANDNAME = New Global.System.Data.DataColumn("BRANDNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDNAME)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnEXTENSION_EN = New Global.System.Data.DataColumn("EXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION_EN)
            Me.columnBRANDCODE.AllowDBNull = false
            Me.columnBRANDCODE.MaxLength = 10
            Me.columnBRANDNAME.AllowDBNull = false
            Me.columnBRANDNAME.MaxLength = 100
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnEXTENSION_EN.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBRAND_VIEWRow() As BRAND_VIEWRow
            Return CType(Me.NewRow,BRAND_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BRAND_VIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BRAND_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BRAND_VIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent BRAND_VIEWRowChanged(Me, New BRAND_VIEWRowChangeEvent(CType(e.Row,BRAND_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BRAND_VIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent BRAND_VIEWRowChanging(Me, New BRAND_VIEWRowChangeEvent(CType(e.Row,BRAND_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BRAND_VIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent BRAND_VIEWRowDeleted(Me, New BRAND_VIEWRowChangeEvent(CType(e.Row,BRAND_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BRAND_VIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent BRAND_VIEWRowDeleting(Me, New BRAND_VIEWRowChangeEvent(CType(e.Row,BRAND_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBRAND_VIEWRow(ByVal row As BRAND_VIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BRAND_VIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DEFAULTVALUES_VIEWDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnMANUFACTURERNAME_E As Global.System.Data.DataColumn
        
        Private columnMANUFACTURERNAMEADDRESS_E As Global.System.Data.DataColumn
        
        Private columnTECHNICALSERVICE_E As Global.System.Data.DataColumn
        
        Private columnPLACE_E As Global.System.Data.DataColumn
        
        Private columnMEASURERIM_E As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSURE_E As Global.System.Data.DataColumn
        
        Private columnTESTLABORATORY_E As Global.System.Data.DataColumn
        
        Private columnREPRESENTATIVENAME_E As Global.System.Data.DataColumn
        
        Private columnREPRESENTATIVEADDRESS_E As Global.System.Data.DataColumn
        
        Private columnREASONOFEXTENSION_E As Global.System.Data.DataColumn
        
        Private columnREMARKS_E As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DEFAULTVALUES_VIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MANUFACTURERNAME_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMANUFACTURERNAME_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MANUFACTURERNAMEADDRESS_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMANUFACTURERNAMEADDRESS_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TECHNICALSERVICE_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTECHNICALSERVICE_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLACE_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACE_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEASURERIM_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEASURERIM_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSURE_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSURE_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTLABORATORY_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTLABORATORY_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPRESENTATIVENAME_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPRESENTATIVENAME_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPRESENTATIVEADDRESS_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPRESENTATIVEADDRESS_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REASONOFEXTENSION_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREASONOFEXTENSION_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REMARKS_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREMARKS_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DEFAULTVALUES_VIEWRow
            Get
                Return CType(Me.Rows(index),DEFAULTVALUES_VIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DEFAULTVALUES_VIEWRowChanging As DEFAULTVALUES_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DEFAULTVALUES_VIEWRowChanged As DEFAULTVALUES_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DEFAULTVALUES_VIEWRowDeleting As DEFAULTVALUES_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DEFAULTVALUES_VIEWRowDeleted As DEFAULTVALUES_VIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDEFAULTVALUES_VIEWRow(ByVal row As DEFAULTVALUES_VIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDEFAULTVALUES_VIEWRow(ByVal parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_DEFAULTVALUES_VIEW As CERTIFICATE_VIEWRow, ByVal MANUFACTURERNAME_E As String, ByVal MANUFACTURERNAMEADDRESS_E As String, ByVal TECHNICALSERVICE_E As String, ByVal PLACE_E As String, ByVal MEASURERIM_E As String, ByVal INFLATIONPRESSURE_E As String, ByVal TESTLABORATORY_E As String, ByVal REPRESENTATIVENAME_E As String, ByVal REPRESENTATIVEADDRESS_E As String, ByVal REASONOFEXTENSION_E As String, ByVal REMARKS_E As String) As DEFAULTVALUES_VIEWRow
            Dim rowDEFAULTVALUES_VIEWRow As DEFAULTVALUES_VIEWRow = CType(Me.NewRow,DEFAULTVALUES_VIEWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, MANUFACTURERNAME_E, MANUFACTURERNAMEADDRESS_E, TECHNICALSERVICE_E, PLACE_E, MEASURERIM_E, INFLATIONPRESSURE_E, TESTLABORATORY_E, REPRESENTATIVENAME_E, REPRESENTATIVEADDRESS_E, REASONOFEXTENSION_E, REMARKS_E}
            If (Not (parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_DEFAULTVALUES_VIEW) Is Nothing) Then
                columnValuesArray(0) = parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_DEFAULTVALUES_VIEW(3)
            End If
            rowDEFAULTVALUES_VIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDEFAULTVALUES_VIEWRow)
            Return rowDEFAULTVALUES_VIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DEFAULTVALUES_VIEWDataTable = CType(MyBase.Clone,DEFAULTVALUES_VIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DEFAULTVALUES_VIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnMANUFACTURERNAME_E = MyBase.Columns("MANUFACTURERNAME_E")
            Me.columnMANUFACTURERNAMEADDRESS_E = MyBase.Columns("MANUFACTURERNAMEADDRESS_E")
            Me.columnTECHNICALSERVICE_E = MyBase.Columns("TECHNICALSERVICE_E")
            Me.columnPLACE_E = MyBase.Columns("PLACE_E")
            Me.columnMEASURERIM_E = MyBase.Columns("MEASURERIM_E")
            Me.columnINFLATIONPRESSURE_E = MyBase.Columns("INFLATIONPRESSURE_E")
            Me.columnTESTLABORATORY_E = MyBase.Columns("TESTLABORATORY_E")
            Me.columnREPRESENTATIVENAME_E = MyBase.Columns("REPRESENTATIVENAME_E")
            Me.columnREPRESENTATIVEADDRESS_E = MyBase.Columns("REPRESENTATIVEADDRESS_E")
            Me.columnREASONOFEXTENSION_E = MyBase.Columns("REASONOFEXTENSION_E")
            Me.columnREMARKS_E = MyBase.Columns("REMARKS_E")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnMANUFACTURERNAME_E = New Global.System.Data.DataColumn("MANUFACTURERNAME_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMANUFACTURERNAME_E)
            Me.columnMANUFACTURERNAMEADDRESS_E = New Global.System.Data.DataColumn("MANUFACTURERNAMEADDRESS_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMANUFACTURERNAMEADDRESS_E)
            Me.columnTECHNICALSERVICE_E = New Global.System.Data.DataColumn("TECHNICALSERVICE_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTECHNICALSERVICE_E)
            Me.columnPLACE_E = New Global.System.Data.DataColumn("PLACE_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACE_E)
            Me.columnMEASURERIM_E = New Global.System.Data.DataColumn("MEASURERIM_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEASURERIM_E)
            Me.columnINFLATIONPRESSURE_E = New Global.System.Data.DataColumn("INFLATIONPRESSURE_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSURE_E)
            Me.columnTESTLABORATORY_E = New Global.System.Data.DataColumn("TESTLABORATORY_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTLABORATORY_E)
            Me.columnREPRESENTATIVENAME_E = New Global.System.Data.DataColumn("REPRESENTATIVENAME_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPRESENTATIVENAME_E)
            Me.columnREPRESENTATIVEADDRESS_E = New Global.System.Data.DataColumn("REPRESENTATIVEADDRESS_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPRESENTATIVEADDRESS_E)
            Me.columnREASONOFEXTENSION_E = New Global.System.Data.DataColumn("REASONOFEXTENSION_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREASONOFEXTENSION_E)
            Me.columnREMARKS_E = New Global.System.Data.DataColumn("REMARKS_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREMARKS_E)
            Me.columnCERTIFICATENUMBER.MaxLength = 80
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDEFAULTVALUES_VIEWRow() As DEFAULTVALUES_VIEWRow
            Return CType(Me.NewRow,DEFAULTVALUES_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DEFAULTVALUES_VIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DEFAULTVALUES_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DEFAULTVALUES_VIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent DEFAULTVALUES_VIEWRowChanged(Me, New DEFAULTVALUES_VIEWRowChangeEvent(CType(e.Row,DEFAULTVALUES_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DEFAULTVALUES_VIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent DEFAULTVALUES_VIEWRowChanging(Me, New DEFAULTVALUES_VIEWRowChangeEvent(CType(e.Row,DEFAULTVALUES_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DEFAULTVALUES_VIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent DEFAULTVALUES_VIEWRowDeleted(Me, New DEFAULTVALUES_VIEWRowChangeEvent(CType(e.Row,DEFAULTVALUES_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DEFAULTVALUES_VIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent DEFAULTVALUES_VIEWRowDeleting(Me, New DEFAULTVALUES_VIEWRowChangeEvent(CType(e.Row,DEFAULTVALUES_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDEFAULTVALUES_VIEWRow(ByVal row As DEFAULTVALUES_VIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DEFAULTVALUES_VIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CERTIFICATE_VIEWRow
        Inherits Global.System.Data.DataRow
        
        Private tableCERTIFICATE_VIEW As CERTIFICATE_VIEWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCERTIFICATE_VIEW = CType(Me.Table,CERTIFICATE_VIEWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SKUID() As Decimal
            Get
                Return CType(Me(Me.tableCERTIFICATE_VIEW.SKUIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.SKUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATIONTYPEID() As Decimal
            Get
                Return CType(Me(Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATIONTYPENAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPENAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CERTIFICATIONTYPENAME' in table 'CERTIFICATE_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPENAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATESUBMITED() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.DATESUBMITEDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATESUBMITED' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.DATESUBMITEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTIVESTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.ACTIVESTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTIVESTATUS' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.ACTIVESTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEASSIGNED_EGI() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.DATEASSIGNED_EGIColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEASSIGNED_EGI' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.DATEASSIGNED_EGIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEAPPROVED_CEGI() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.DATEAPPROVED_CEGIColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEAPPROVED_CEGI' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.DATEAPPROVED_CEGIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RENEWALREQUIRED_CGIN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.RENEWALREQUIRED_CGINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RENEWALREQUIRED_CGIN' in table 'CERTIFICATE_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.RENEWALREQUIRED_CGINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALREQUIRED_EI() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALREQUIRED_EIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALREQUIRED_EI' in table 'CERTIFICATE_VIEW' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALREQUIRED_EIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALNUMBER_EI() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALNUMBER_EIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALNUMBER_EI' in table 'CERTIFICATE_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALNUMBER_EIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOBREPORTNUMBER_CEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.JOBREPORTNUMBER_CENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JOBREPORTNUMBER_CEN' in table 'CERTIFICATE_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.JOBREPORTNUMBER_CENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTENSION_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.EXTENSION_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENSION_EN' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.EXTENSION_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALMOLDSTAMPING_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALMOLDSTAMPING_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALMOLDSTAMPING_E' in table 'CERTIFICATE_VIEW' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALMOLDSTAMPING_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALDATEASSIGNED_E() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATEASSIGNED_EColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALDATEASSIGNED_E' in table 'CERTIFICATE_VIEW' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATEASSIGNED_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALDATESUBMITTED_E() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATESUBMITTED_EColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALDATESUBMITTED_E' in table 'CERTIFICATE_VIEW' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATESUBMITTED_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALDATEAPPROVED_E() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATEAPPROVED_EColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALDATEAPPROVED_E' in table 'CERTIFICATE_VIEW' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATEAPPROVED_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMARKREFERENCE_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.EMARKREFERENCE_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMARKREFERENCE_I' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.EMARKREFERENCE_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXPIRYDATE_I() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.EXPIRYDATE_IColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXPIRYDATE_I' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.EXPIRYDATE_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAMILY_I() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.FAMILY_IColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAMILY_I' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.FAMILY_IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTLOCATION_C() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.PRODUCTLOCATION_CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTLOCATION_C' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.PRODUCTLOCATION_CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COUNTRYOFMANUFACTURE_N() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.COUNTRYOFMANUFACTURE_NColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COUNTRYOFMANUFACTURE_N' in table 'CERTIFICATE_VIEW' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.COUNTRYOFMANUFACTURE_NColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTOMER_N() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.CUSTOMER_NColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMER_N' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.CUSTOMER_NColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTOMERSPECIFIC_N() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.CUSTOMERSPECIFIC_NColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMERSPECIFIC_N' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.CUSTOMERSPECIFIC_NColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTER_N() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.IMPORTER_NColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTER_N' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.IMPORTER_NColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTERADDRESS_N() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.IMPORTERADDRESS_NColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTERADDRESS_N' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.IMPORTERADDRESS_NColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTERREPRESENTATIVE_N() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.IMPORTERREPRESENTATIVE_NColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTERREPRESENTATIVE_N' in table 'CERTIFICATE_VIEW' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.IMPORTERREPRESENTATIVE_NColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COUNTRYLOCATION_N() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.COUNTRYLOCATION_NColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COUNTRYLOCATION_N' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.COUNTRYLOCATION_NColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BATCHNUMBER_G() As String
            Get
                Try 
                    Return CType(Me(Me.tableCERTIFICATE_VIEW.BATCHNUMBER_GColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BATCHNUMBER_G' in table 'CERTIFICATE_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCERTIFICATE_VIEW.BATCHNUMBER_GColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCERTIFICATIONTYPENAMENull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPENAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCERTIFICATIONTYPENAMENull()
            Me(Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPENAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATESUBMITEDNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.DATESUBMITEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATESUBMITEDNull()
            Me(Me.tableCERTIFICATE_VIEW.DATESUBMITEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACTIVESTATUSNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.ACTIVESTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACTIVESTATUSNull()
            Me(Me.tableCERTIFICATE_VIEW.ACTIVESTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEASSIGNED_EGINull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.DATEASSIGNED_EGIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEASSIGNED_EGINull()
            Me(Me.tableCERTIFICATE_VIEW.DATEASSIGNED_EGIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEAPPROVED_CEGINull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.DATEAPPROVED_CEGIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEAPPROVED_CEGINull()
            Me(Me.tableCERTIFICATE_VIEW.DATEAPPROVED_CEGIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRENEWALREQUIRED_CGINNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.RENEWALREQUIRED_CGINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRENEWALREQUIRED_CGINNull()
            Me(Me.tableCERTIFICATE_VIEW.RENEWALREQUIRED_CGINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALREQUIRED_EINull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALREQUIRED_EIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALREQUIRED_EINull()
            Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALREQUIRED_EIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALNUMBER_EINull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALNUMBER_EIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALNUMBER_EINull()
            Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALNUMBER_EIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOBREPORTNUMBER_CENNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.JOBREPORTNUMBER_CENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOBREPORTNUMBER_CENNull()
            Me(Me.tableCERTIFICATE_VIEW.JOBREPORTNUMBER_CENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTENSION_ENNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.EXTENSION_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTENSION_ENNull()
            Me(Me.tableCERTIFICATE_VIEW.EXTENSION_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALMOLDSTAMPING_ENull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALMOLDSTAMPING_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALMOLDSTAMPING_ENull()
            Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALMOLDSTAMPING_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALDATEASSIGNED_ENull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATEASSIGNED_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALDATEASSIGNED_ENull()
            Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATEASSIGNED_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALDATESUBMITTED_ENull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATESUBMITTED_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALDATESUBMITTED_ENull()
            Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATESUBMITTED_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALDATEAPPROVED_ENull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATEAPPROVED_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALDATEAPPROVED_ENull()
            Me(Me.tableCERTIFICATE_VIEW.SUPPLEMENTALDATEAPPROVED_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMARKREFERENCE_INull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.EMARKREFERENCE_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMARKREFERENCE_INull()
            Me(Me.tableCERTIFICATE_VIEW.EMARKREFERENCE_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXPIRYDATE_INull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.EXPIRYDATE_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXPIRYDATE_INull()
            Me(Me.tableCERTIFICATE_VIEW.EXPIRYDATE_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFAMILY_INull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.FAMILY_IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFAMILY_INull()
            Me(Me.tableCERTIFICATE_VIEW.FAMILY_IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTLOCATION_CNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.PRODUCTLOCATION_CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTLOCATION_CNull()
            Me(Me.tableCERTIFICATE_VIEW.PRODUCTLOCATION_CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOUNTRYOFMANUFACTURE_NNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.COUNTRYOFMANUFACTURE_NColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOUNTRYOFMANUFACTURE_NNull()
            Me(Me.tableCERTIFICATE_VIEW.COUNTRYOFMANUFACTURE_NColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTOMER_NNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.CUSTOMER_NColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTOMER_NNull()
            Me(Me.tableCERTIFICATE_VIEW.CUSTOMER_NColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTOMERSPECIFIC_NNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.CUSTOMERSPECIFIC_NColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTOMERSPECIFIC_NNull()
            Me(Me.tableCERTIFICATE_VIEW.CUSTOMERSPECIFIC_NColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTER_NNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.IMPORTER_NColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTER_NNull()
            Me(Me.tableCERTIFICATE_VIEW.IMPORTER_NColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTERADDRESS_NNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.IMPORTERADDRESS_NColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTERADDRESS_NNull()
            Me(Me.tableCERTIFICATE_VIEW.IMPORTERADDRESS_NColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTERREPRESENTATIVE_NNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.IMPORTERREPRESENTATIVE_NColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTERREPRESENTATIVE_NNull()
            Me(Me.tableCERTIFICATE_VIEW.IMPORTERREPRESENTATIVE_NColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOUNTRYLOCATION_NNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.COUNTRYLOCATION_NColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOUNTRYLOCATION_NNull()
            Me(Me.tableCERTIFICATE_VIEW.COUNTRYLOCATION_NColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBATCHNUMBER_GNull() As Boolean
            Return Me.IsNull(Me.tableCERTIFICATE_VIEW.BATCHNUMBER_GColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBATCHNUMBER_GNull()
            Me(Me.tableCERTIFICATE_VIEW.BATCHNUMBER_GColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPRODUCTDATA_REPORT_VIEWRows() As PRODUCTDATA_REPORT_VIEWRow()
            If (Me.Table.ChildRelations("CERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW") Is Nothing) Then
                Return New PRODUCTDATA_REPORT_VIEWRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW")),PRODUCTDATA_REPORT_VIEWRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPLUNGERHDRRows() As PLUNGERHDRRow()
            If (Me.Table.ChildRelations("CERTIFICATE_VIEW_PLUNGERHDR") Is Nothing) Then
                Return New PLUNGERHDRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CERTIFICATE_VIEW_PLUNGERHDR")),PLUNGERHDRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetENDURANCEHDRRows() As ENDURANCEHDRRow()
            If (Me.Table.ChildRelations("CERTIFICATE_VIEW_ENDURANCEHDR") Is Nothing) Then
                Return New ENDURANCEHDRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CERTIFICATE_VIEW_ENDURANCEHDR")),ENDURANCEHDRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTREADWEARHDRRows() As TREADWEARHDRRow()
            If (Me.Table.ChildRelations("CERTIFICATE_VIEW_TREADWEARHDR") Is Nothing) Then
                Return New TREADWEARHDRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CERTIFICATE_VIEW_TREADWEARHDR")),TREADWEARHDRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetMEASUREHDRRows() As MEASUREHDRRow()
            If (Me.Table.ChildRelations("CERTIFICATE_VIEW_MEASUREHDR") Is Nothing) Then
                Return New MEASUREHDRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CERTIFICATE_VIEW_MEASUREHDR")),MEASUREHDRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetHIGHSPEEDHDRRows() As HIGHSPEEDHDRRow()
            If (Me.Table.ChildRelations("CERTIFICATE_VIEW_HIGHSPEEDHDR") Is Nothing) Then
                Return New HIGHSPEEDHDRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CERTIFICATE_VIEW_HIGHSPEEDHDR")),HIGHSPEEDHDRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetBEADUNSEATHDRRows() As BEADUNSEATHDRRow()
            If (Me.Table.ChildRelations("CERTIFICATE_VIEW_BEADUNSEATHDR") Is Nothing) Then
                Return New BEADUNSEATHDRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CERTIFICATE_VIEW_BEADUNSEATHDR")),BEADUNSEATHDRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetBRAND_VIEWRows() As BRAND_VIEWRow()
            If (Me.Table.ChildRelations("CERTIFICATE_VIEW_BRAND_VIEW") Is Nothing) Then
                Return New BRAND_VIEWRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CERTIFICATE_VIEW_BRAND_VIEW")),BRAND_VIEWRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetDEFAULTVALUES_VIEWRows() As DEFAULTVALUES_VIEWRow()
            If (Me.Table.ChildRelations("CERTIFICATE_VIEW_DEFAULTVALUES_VIEW") Is Nothing) Then
                Return New DEFAULTVALUES_VIEWRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CERTIFICATE_VIEW_DEFAULTVALUES_VIEW")),DEFAULTVALUES_VIEWRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PRODUCTDATA_REPORT_VIEWRow
        Inherits Global.System.Data.DataRow
        
        Private tablePRODUCTDATA_REPORT_VIEW As PRODUCTDATA_REPORT_VIEWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRODUCTDATA_REPORT_VIEW = CType(Me.Table,PRODUCTDATA_REPORT_VIEWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SKUID() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SKUIDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SKUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SKU() As String
            Get
                Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SKUColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRANDCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRANDCODE' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIRETYPEID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.TIRETYPEIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIRETYPEID' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.TIRETYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NPRID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.NPRIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NPRID' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.NPRIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIZESTAMP() As String
            Get
                Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SIZESTAMPColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SIZESTAMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCONTINUEDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.DISCONTINUEDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCONTINUEDDATE' in table 'PRODUCTDATA_REPORT_VIEW' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.DISCONTINUEDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECNUMBER' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEEDRATING() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPEEDRATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEEDRATING' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPEEDRATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SINGLOADINDEX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SINGLOADINDEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SINGLOADINDEX' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SINGLOADINDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DUALLOADINDEX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.DUALLOADINDEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DUALLOADINDEX' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.DUALLOADINDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BELTEDRADIALYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.BELTEDRADIALYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BELTEDRADIALYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.BELTEDRADIALYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TUBELESSYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.TUBELESSYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TUBELESSYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.TUBELESSYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REINFORCEDYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.REINFORCEDYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REINFORCEDYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.REINFORCEDYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTRALOADYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTRALOADYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRALOADYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTRALOADYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEASURINGRIM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEASURINGRIMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEASURINGRIM' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEASURINGRIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTQGTREADWEAR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTREADWEARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTQGTREADWEAR' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTREADWEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTQGTRACTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTRACTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTQGTRACTION' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTRACTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTQGTEMP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTEMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTQGTEMP' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MUDSNOWYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.MUDSNOWYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MUDSNOWYN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.MUDSNOWYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIMDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.RIMDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIMDIAMETER' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.RIMDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIALDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SERIALDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIALDATE' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SERIALDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRANDDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRANDDESC' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOADRANGE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.LOADRANGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOADRANGE' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.LOADRANGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEARIMWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEARIMWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEARIMWIDTH' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEARIMWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REGROOVABLEIND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.REGROOVABLEINDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REGROOVABLEIND' in table 'PRODUCTDATA_REPORT_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.REGROOVABLEINDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLANTPRODUCED() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.PLANTPRODUCEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLANTPRODUCED' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.PLANTPRODUCEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOSTRECENTTESTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.MOSTRECENTTESTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOSTRECENTTESTDATE' in table 'PRODUCTDATA_REPORT_VIEW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.MOSTRECENTTESTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMARK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.IMARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMARK' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.IMARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFORMENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.INFORMENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFORMENUMBER' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.INFORMENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHADATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.FECHADATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHADATE' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.FECHADATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TREADPATTERN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADPATTERNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TREADPATTERN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADPATTERNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIALPROTECTIVEBAND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECIALPROTECTIVEBANDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECIALPROTECTIVEBAND' in table 'PRODUCTDATA_REPORT_VIEW' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECIALPROTECTIVEBANDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALTIREWIDTH() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.NOMINALTIREWIDTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALTIREWIDTH' in table 'PRODUCTDATA_REPORT_VIEW' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.NOMINALTIREWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ASPECTRADIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.ASPECTRADIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASPECTRADIO' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.ASPECTRADIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TREADWEARINDICATORS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADWEARINDICATORSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TREADWEARINDICATORS' in table 'PRODUCTDATA_REPORT_VIEW' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADWEARINDICATORSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMEOFMANUFACTURER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.NAMEOFMANUFACTURERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMEOFMANUFACTURER' in table 'PRODUCTDATA_REPORT_VIEW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.NAMEOFMANUFACTURERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAMILY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.FAMILYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAMILY' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.FAMILYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSERIALNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.DOTSERIALNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSERIALNUMBER' in table 'PRODUCTDATA_REPORT_VIEW' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.DOTSERIALNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALEXTENSION_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALEXTENSION_EN' in table 'PRODUCTDATA_REPORT_VIEW"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTENSION_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTENSION_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENSION_EN' in table 'PRODUCTDATA_REPORT_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTENSION_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATE_VIEWRow() As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW")),CERTIFICATE_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRANDCODENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRANDCODENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIRETYPEIDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.TIRETYPEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIRETYPEIDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.TIRETYPEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNPRIDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.NPRIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNPRIDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.NPRIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCONTINUEDDATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.DISCONTINUEDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCONTINUEDDATENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.DISCONTINUEDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECNUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SPECNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECNUMBERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDRATINGNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SPEEDRATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDRATINGNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPEEDRATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSINGLOADINDEXNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SINGLOADINDEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSINGLOADINDEXNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SINGLOADINDEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDUALLOADINDEXNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.DUALLOADINDEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDUALLOADINDEXNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.DUALLOADINDEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBELTEDRADIALYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.BELTEDRADIALYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBELTEDRADIALYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.BELTEDRADIALYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTUBELESSYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.TUBELESSYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTUBELESSYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.TUBELESSYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREINFORCEDYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.REINFORCEDYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREINFORCEDYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.REINFORCEDYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTRALOADYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.EXTRALOADYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTRALOADYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTRALOADYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEASURINGRIMNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.MEASURINGRIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEASURINGRIMNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEASURINGRIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTQGTREADWEARNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTREADWEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTQGTREADWEARNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTREADWEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTQGTRACTIONNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTRACTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTQGTRACTIONNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTRACTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTQGTEMPNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTQGTEMPNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.UTQGTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMUDSNOWYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.MUDSNOWYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMUDSNOWYNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.MUDSNOWYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIMDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.RIMDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIMDIAMETERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.RIMDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIALDATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SERIALDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIALDATENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SERIALDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRANDDESCNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRANDDESCNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.BRANDDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOADRANGENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.LOADRANGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOADRANGENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.LOADRANGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEARIMWIDTHNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.MEARIMWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEARIMWIDTHNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.MEARIMWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREGROOVABLEINDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.REGROOVABLEINDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREGROOVABLEINDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.REGROOVABLEINDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLANTPRODUCEDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.PLANTPRODUCEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLANTPRODUCEDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.PLANTPRODUCEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMOSTRECENTTESTDATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.MOSTRECENTTESTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMOSTRECENTTESTDATENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.MOSTRECENTTESTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMARKNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.IMARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMARKNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.IMARKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFORMENUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.INFORMENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFORMENUMBERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.INFORMENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHADATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.FECHADATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHADATENull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.FECHADATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTREADPATTERNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.TREADPATTERNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTREADPATTERNNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADPATTERNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECIALPROTECTIVEBANDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SPECIALPROTECTIVEBANDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECIALPROTECTIVEBANDNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SPECIALPROTECTIVEBANDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALTIREWIDTHNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.NOMINALTIREWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALTIREWIDTHNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.NOMINALTIREWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsASPECTRADIONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.ASPECTRADIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetASPECTRADIONull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.ASPECTRADIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTREADWEARINDICATORSNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.TREADWEARINDICATORSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTREADWEARINDICATORSNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.TREADWEARINDICATORSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMEOFMANUFACTURERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.NAMEOFMANUFACTURERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMEOFMANUFACTURERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.NAMEOFMANUFACTURERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFAMILYNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.FAMILYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFAMILYNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.FAMILYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSERIALNUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.DOTSERIALNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSERIALNUMBERNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.DOTSERIALNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALEXTENSION_ENNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALEXTENSION_ENNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTENSION_ENNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTDATA_REPORT_VIEW.EXTENSION_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTENSION_ENNull()
            Me(Me.tablePRODUCTDATA_REPORT_VIEW.EXTENSION_ENColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BEADUNSEATHDRRow
        Inherits Global.System.Data.DataRow
        
        Private tableBEADUNSEATHDR As BEADUNSEATHDRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBEADUNSEATHDR = CType(Me.Table,BEADUNSEATHDRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEADUNSEATID() As Decimal
            Get
                Return CType(Me(Me.tableBEADUNSEATHDR.BEADUNSEATIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.BEADUNSEATIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROJECTNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.PROJECTNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROJECTNUMBER' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.PROJECTNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIRENUMBER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.TIRENUMBERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIRENUMBER' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.TIRENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTSPEC() As String
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.TESTSPECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TESTSPEC' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.TESTSPECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPLETIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.COMPLETIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPLETIONDATE' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.COMPLETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSERIALNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.DOTSERIALNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSERIALNUMBER' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.DOTSERIALNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOWESTUNSEATVALUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.LOWESTUNSEATVALUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOWESTUNSEATVALUE' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.LOWESTUNSEATVALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PASSYN() As String
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.PASSYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PASSYN' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.PASSYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATIONTYPEID() As Decimal
            Get
                Return CType(Me(Me.tableBEADUNSEATHDR.CERTIFICATIONTYPEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.CERTIFICATIONTYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tableBEADUNSEATHDR.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIALDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.SERIALDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIALDATE' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.SERIALDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MINBEADUNSEAT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.MINBEADUNSEATColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MINBEADUNSEAT' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.MINBEADUNSEATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableBEADUNSEATHDR.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableBEADUNSEATHDR.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableBEADUNSEATHDR.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableBEADUNSEATHDR.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATHDR.TESTPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TESTPASSFAIL' in table 'BEADUNSEATHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATHDR.TESTPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATE_VIEWRowParent() As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CERTIFICATE_VIEW_BEADUNSEATHDR")),CERTIFICATE_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CERTIFICATE_VIEW_BEADUNSEATHDR"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROJECTNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.PROJECTNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROJECTNUMBERNull()
            Me(Me.tableBEADUNSEATHDR.PROJECTNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIRENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.TIRENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIRENUMBERNull()
            Me(Me.tableBEADUNSEATHDR.TIRENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTESTSPECNull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.TESTSPECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTESTSPECNull()
            Me(Me.tableBEADUNSEATHDR.TESTSPECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPLETIONDATENull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.COMPLETIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPLETIONDATENull()
            Me(Me.tableBEADUNSEATHDR.COMPLETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSERIALNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.DOTSERIALNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSERIALNUMBERNull()
            Me(Me.tableBEADUNSEATHDR.DOTSERIALNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOWESTUNSEATVALUENull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.LOWESTUNSEATVALUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOWESTUNSEATVALUENull()
            Me(Me.tableBEADUNSEATHDR.LOWESTUNSEATVALUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPASSYNNull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.PASSYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPASSYNNull()
            Me(Me.tableBEADUNSEATHDR.PASSYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIALDATENull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.SERIALDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIALDATENull()
            Me(Me.tableBEADUNSEATHDR.SERIALDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMINBEADUNSEATNull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.MINBEADUNSEATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMINBEADUNSEATNull()
            Me(Me.tableBEADUNSEATHDR.MINBEADUNSEATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTESTPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATHDR.TESTPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTESTPASSFAILNull()
            Me(Me.tableBEADUNSEATHDR.TESTPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetBEADUNSEATDTLRows() As BEADUNSEATDTLRow()
            If (Me.Table.ChildRelations("BEADUNSEATHDR_BEADUNSEATDTL") Is Nothing) Then
                Return New BEADUNSEATDTLRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("BEADUNSEATHDR_BEADUNSEATDTL")),BEADUNSEATDTLRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BEADUNSEATDTLRow
        Inherits Global.System.Data.DataRow
        
        Private tableBEADUNSEATDTL As BEADUNSEATDTLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBEADUNSEATDTL = CType(Me.Table,BEADUNSEATDTLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEADUNSEATID() As Decimal
            Get
                Return CType(Me(Me.tableBEADUNSEATDTL.BEADUNSEATIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableBEADUNSEATDTL.BEADUNSEATIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNSEATFORCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATDTL.UNSEATFORCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNSEATFORCE' in table 'BEADUNSEATDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATDTL.UNSEATFORCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITERATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBEADUNSEATDTL.ITERATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITERATION' in table 'BEADUNSEATDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBEADUNSEATDTL.ITERATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableBEADUNSEATDTL.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableBEADUNSEATDTL.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableBEADUNSEATDTL.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableBEADUNSEATDTL.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableBEADUNSEATDTL.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableBEADUNSEATDTL.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableBEADUNSEATDTL.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableBEADUNSEATDTL.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEADUNSEATHDRRow() As BEADUNSEATHDRRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("BEADUNSEATHDR_BEADUNSEATDTL")),BEADUNSEATHDRRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("BEADUNSEATHDR_BEADUNSEATDTL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUNSEATFORCENull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATDTL.UNSEATFORCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUNSEATFORCENull()
            Me(Me.tableBEADUNSEATDTL.UNSEATFORCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITERATIONNull() As Boolean
            Return Me.IsNull(Me.tableBEADUNSEATDTL.ITERATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITERATIONNull()
            Me(Me.tableBEADUNSEATDTL.ITERATIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ENDURANCEDTLRow
        Inherits Global.System.Data.DataRow
        
        Private tableENDURANCEDTL As ENDURANCEDTLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableENDURANCEDTL = CType(Me.Table,ENDURANCEDTLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTSTEP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.TESTSTEPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TESTSTEP' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.TESTSTEPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIMEINMIN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.TIMEINMINColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMEINMIN' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.TIMEINMINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.SPEEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEED' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.SPEEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTMILES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.TOTMILESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTMILES' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.TOTMILESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.LOADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOAD' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.LOADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOADPERCENT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.LOADPERCENTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOADPERCENT' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.LOADPERCENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SETINFLATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.SETINFLATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SETINFLATION' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.SETINFLATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMBTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.AMBTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMBTEMP' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.AMBTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFPRESSURE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.INFPRESSUREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFPRESSURE' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.INFPRESSUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STEPCOMPLETIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEDTL.STEPCOMPLETIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STEPCOMPLETIONDATE' in table 'ENDURANCEDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEDTL.STEPCOMPLETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENDURANCEID() As Decimal
            Get
                Return CType(Me(Me.tableENDURANCEDTL.ENDURANCEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableENDURANCEDTL.ENDURANCEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableENDURANCEDTL.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableENDURANCEDTL.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableENDURANCEDTL.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableENDURANCEDTL.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableENDURANCEDTL.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableENDURANCEDTL.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableENDURANCEDTL.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableENDURANCEDTL.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENDURANCEHDRRow() As ENDURANCEHDRRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ENDURANCEHDR_ENDURANCEDTL")),ENDURANCEHDRRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("ENDURANCEHDR_ENDURANCEDTL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTESTSTEPNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.TESTSTEPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTESTSTEPNull()
            Me(Me.tableENDURANCEDTL.TESTSTEPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIMEINMINNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.TIMEINMINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIMEINMINNull()
            Me(Me.tableENDURANCEDTL.TIMEINMINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.SPEEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDNull()
            Me(Me.tableENDURANCEDTL.SPEEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTMILESNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.TOTMILESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTMILESNull()
            Me(Me.tableENDURANCEDTL.TOTMILESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOADNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.LOADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOADNull()
            Me(Me.tableENDURANCEDTL.LOADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOADPERCENTNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.LOADPERCENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOADPERCENTNull()
            Me(Me.tableENDURANCEDTL.LOADPERCENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSETINFLATIONNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.SETINFLATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSETINFLATIONNull()
            Me(Me.tableENDURANCEDTL.SETINFLATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMBTEMPNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.AMBTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMBTEMPNull()
            Me(Me.tableENDURANCEDTL.AMBTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFPRESSURENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.INFPRESSUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFPRESSURENull()
            Me(Me.tableENDURANCEDTL.INFPRESSUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTEPCOMPLETIONDATENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEDTL.STEPCOMPLETIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTEPCOMPLETIONDATENull()
            Me(Me.tableENDURANCEDTL.STEPCOMPLETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ENDURANCEHDRRow
        Inherits Global.System.Data.DataRow
        
        Private tableENDURANCEHDR As ENDURANCEHDRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableENDURANCEHDR = CType(Me.Table,ENDURANCEHDRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENDURANCEID() As Decimal
            Get
                Return CType(Me(Me.tableENDURANCEHDR.ENDURANCEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableENDURANCEHDR.ENDURANCEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROJECTNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.PROJECTNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROJECTNUMBER' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.PROJECTNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIRENUMBER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.TIRENUMBERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIRENUMBER' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.TIRENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTSPEC() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.TESTSPECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TESTSPEC' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.TESTSPECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPLETIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.COMPLETIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPLETIONDATE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.COMPLETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSERIALNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.DOTSERIALNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSERIALNUMBER' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.DOTSERIALNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MFGWWYY() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.MFGWWYYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MFGWWYY' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.MFGWWYYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDSTARTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.PRECONDSTARTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDSTARTDATE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.PRECONDSTARTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDSTARTTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.PRECONDSTARTTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDSTARTTEMP' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.PRECONDSTARTTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIMDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.RIMDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIMDIAMETER' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.RIMDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIMWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.RIMWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIMWIDTH' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.RIMWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDENDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.PRECONDENDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDENDDATE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.PRECONDENDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDENDTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.PRECONDENDTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDENDTEMP' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.PRECONDENDTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFLATIONPRESSURE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.INFLATIONPRESSUREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFLATIONPRESSURE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.INFLATIONPRESSUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEFOREDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.BEFOREDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BEFOREDIAMETER' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.BEFOREDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AFTERDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.AFTERDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AFTERDIAMETER' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.AFTERDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEFOREINFLATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.BEFOREINFLATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BEFOREINFLATION' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.BEFOREINFLATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AFTERINFLATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.AFTERINFLATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AFTERINFLATION' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.AFTERINFLATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WHEELPOSITION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.WHEELPOSITIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WHEELPOSITION' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.WHEELPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WHEELNUMBER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.WHEELNUMBERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WHEELNUMBER' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.WHEELNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FINALTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.FINALTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINALTEMP' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.FINALTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FINALDISTANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.FINALDISTANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINALDISTANCE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.FINALDISTANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FINALINFLATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.FINALINFLATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINALINFLATION' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.FINALINFLATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTCONDSTARTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.POSTCONDSTARTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTCONDSTARTDATE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.POSTCONDSTARTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTCONDENDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.POSTCONDENDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTCONDENDDATE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.POSTCONDENDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTCONDENDTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.POSTCONDENDTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTCONDENDTEMP' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.POSTCONDENDTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PASSYN() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.PASSYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PASSYN' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.PASSYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATIONTYPEID() As Decimal
            Get
                Return CType(Me(Me.tableENDURANCEHDR.CERTIFICATIONTYPEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableENDURANCEHDR.CERTIFICATIONTYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tableENDURANCEHDR.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableENDURANCEHDR.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIALDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.SERIALDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIALDATE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.SERIALDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDTIME() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.PRECONDTIMEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDTIME' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.PRECONDTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTCONDTIME() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.POSTCONDTIMEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTCONDTIME' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.POSTCONDTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableENDURANCEHDR.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableENDURANCEHDR.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableENDURANCEHDR.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableENDURANCEHDR.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableENDURANCEHDR.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableENDURANCEHDR.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableENDURANCEHDR.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableENDURANCEHDR.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAMETERTESTDRUM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.DIAMETERTESTDRUMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAMETERTESTDRUM' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.DIAMETERTESTDRUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.PRECONDTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDTEMP' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.PRECONDTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFLATIONPRESSUREREADJUSTED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.INFLATIONPRESSUREREADJUSTEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFLATIONPRESSUREREADJUSTED' in table 'ENDURANCEHDR' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.INFLATIONPRESSUREREADJUSTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CIRCUNFERENCEBEFORETEST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.CIRCUNFERENCEBEFORETESTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCUNFERENCEBEFORETEST' in table 'ENDURANCEHDR' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.CIRCUNFERENCEBEFORETESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RESULTPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.RESULTPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RESULTPASSFAIL' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.RESULTPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENDURANCEHOURS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.ENDURANCEHOURSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENDURANCEHOURS' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.ENDURANCEHOURSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSSIBLEFAILURESFOUND() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.POSSIBLEFAILURESFOUNDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSSIBLEFAILURESFOUND' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.POSSIBLEFAILURESFOUNDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CIRCUNFERENCEAFTERTEST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.CIRCUNFERENCEAFTERTESTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCUNFERENCEAFTERTEST' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.CIRCUNFERENCEAFTERTESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OUTERDIAMETERDIFERENCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.OUTERDIAMETERDIFERENCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OUTERDIAMETERDIFERENCE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.OUTERDIAMETERDIFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ODDIFERENCETOLERANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.ODDIFERENCETOLERANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDIFERENCETOLERANCE' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.ODDIFERENCETOLERANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIENOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.SERIENOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIENOM' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.SERIENOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FINALJUDGEMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.FINALJUDGEMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINALJUDGEMENT' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.FINALJUDGEMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVER() As String
            Get
                Try 
                    Return CType(Me(Me.tableENDURANCEHDR.APPROVERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPROVER' in table 'ENDURANCEHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENDURANCEHDR.APPROVERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATE_VIEWRowParent() As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CERTIFICATE_VIEW_ENDURANCEHDR")),CERTIFICATE_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CERTIFICATE_VIEW_ENDURANCEHDR"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROJECTNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.PROJECTNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROJECTNUMBERNull()
            Me(Me.tableENDURANCEHDR.PROJECTNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIRENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.TIRENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIRENUMBERNull()
            Me(Me.tableENDURANCEHDR.TIRENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTESTSPECNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.TESTSPECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTESTSPECNull()
            Me(Me.tableENDURANCEHDR.TESTSPECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPLETIONDATENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.COMPLETIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPLETIONDATENull()
            Me(Me.tableENDURANCEHDR.COMPLETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSERIALNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.DOTSERIALNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSERIALNUMBERNull()
            Me(Me.tableENDURANCEHDR.DOTSERIALNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMFGWWYYNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.MFGWWYYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMFGWWYYNull()
            Me(Me.tableENDURANCEHDR.MFGWWYYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDSTARTDATENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.PRECONDSTARTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDSTARTDATENull()
            Me(Me.tableENDURANCEHDR.PRECONDSTARTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDSTARTTEMPNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.PRECONDSTARTTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDSTARTTEMPNull()
            Me(Me.tableENDURANCEHDR.PRECONDSTARTTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIMDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.RIMDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIMDIAMETERNull()
            Me(Me.tableENDURANCEHDR.RIMDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIMWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.RIMWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIMWIDTHNull()
            Me(Me.tableENDURANCEHDR.RIMWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDENDDATENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.PRECONDENDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDENDDATENull()
            Me(Me.tableENDURANCEHDR.PRECONDENDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDENDTEMPNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.PRECONDENDTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDENDTEMPNull()
            Me(Me.tableENDURANCEHDR.PRECONDENDTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFLATIONPRESSURENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.INFLATIONPRESSUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFLATIONPRESSURENull()
            Me(Me.tableENDURANCEHDR.INFLATIONPRESSUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBEFOREDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.BEFOREDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBEFOREDIAMETERNull()
            Me(Me.tableENDURANCEHDR.BEFOREDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAFTERDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.AFTERDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAFTERDIAMETERNull()
            Me(Me.tableENDURANCEHDR.AFTERDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBEFOREINFLATIONNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.BEFOREINFLATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBEFOREINFLATIONNull()
            Me(Me.tableENDURANCEHDR.BEFOREINFLATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAFTERINFLATIONNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.AFTERINFLATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAFTERINFLATIONNull()
            Me(Me.tableENDURANCEHDR.AFTERINFLATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHEELPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.WHEELPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHEELPOSITIONNull()
            Me(Me.tableENDURANCEHDR.WHEELPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHEELNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.WHEELNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHEELNUMBERNull()
            Me(Me.tableENDURANCEHDR.WHEELNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINALTEMPNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.FINALTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINALTEMPNull()
            Me(Me.tableENDURANCEHDR.FINALTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINALDISTANCENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.FINALDISTANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINALDISTANCENull()
            Me(Me.tableENDURANCEHDR.FINALDISTANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINALINFLATIONNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.FINALINFLATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINALINFLATIONNull()
            Me(Me.tableENDURANCEHDR.FINALINFLATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTCONDSTARTDATENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.POSTCONDSTARTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTCONDSTARTDATENull()
            Me(Me.tableENDURANCEHDR.POSTCONDSTARTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTCONDENDDATENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.POSTCONDENDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTCONDENDDATENull()
            Me(Me.tableENDURANCEHDR.POSTCONDENDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTCONDENDTEMPNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.POSTCONDENDTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTCONDENDTEMPNull()
            Me(Me.tableENDURANCEHDR.POSTCONDENDTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPASSYNNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.PASSYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPASSYNNull()
            Me(Me.tableENDURANCEHDR.PASSYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIALDATENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.SERIALDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIALDATENull()
            Me(Me.tableENDURANCEHDR.SERIALDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDTIMENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.PRECONDTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDTIMENull()
            Me(Me.tableENDURANCEHDR.PRECONDTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTCONDTIMENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.POSTCONDTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTCONDTIMENull()
            Me(Me.tableENDURANCEHDR.POSTCONDTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAMETERTESTDRUMNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.DIAMETERTESTDRUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAMETERTESTDRUMNull()
            Me(Me.tableENDURANCEHDR.DIAMETERTESTDRUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDTEMPNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.PRECONDTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDTEMPNull()
            Me(Me.tableENDURANCEHDR.PRECONDTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFLATIONPRESSUREREADJUSTEDNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.INFLATIONPRESSUREREADJUSTEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFLATIONPRESSUREREADJUSTEDNull()
            Me(Me.tableENDURANCEHDR.INFLATIONPRESSUREREADJUSTEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCIRCUNFERENCEBEFORETESTNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.CIRCUNFERENCEBEFORETESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCIRCUNFERENCEBEFORETESTNull()
            Me(Me.tableENDURANCEHDR.CIRCUNFERENCEBEFORETESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRESULTPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.RESULTPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRESULTPASSFAILNull()
            Me(Me.tableENDURANCEHDR.RESULTPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENDURANCEHOURSNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.ENDURANCEHOURSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENDURANCEHOURSNull()
            Me(Me.tableENDURANCEHDR.ENDURANCEHOURSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSSIBLEFAILURESFOUNDNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.POSSIBLEFAILURESFOUNDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSSIBLEFAILURESFOUNDNull()
            Me(Me.tableENDURANCEHDR.POSSIBLEFAILURESFOUNDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCIRCUNFERENCEAFTERTESTNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.CIRCUNFERENCEAFTERTESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCIRCUNFERENCEAFTERTESTNull()
            Me(Me.tableENDURANCEHDR.CIRCUNFERENCEAFTERTESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOUTERDIAMETERDIFERENCENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.OUTERDIAMETERDIFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOUTERDIAMETERDIFERENCENull()
            Me(Me.tableENDURANCEHDR.OUTERDIAMETERDIFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsODDIFERENCETOLERANCENull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.ODDIFERENCETOLERANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetODDIFERENCETOLERANCENull()
            Me(Me.tableENDURANCEHDR.ODDIFERENCETOLERANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIENOMNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.SERIENOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIENOMNull()
            Me(Me.tableENDURANCEHDR.SERIENOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINALJUDGEMENTNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.FINALJUDGEMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINALJUDGEMENTNull()
            Me(Me.tableENDURANCEHDR.FINALJUDGEMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVERNull() As Boolean
            Return Me.IsNull(Me.tableENDURANCEHDR.APPROVERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVERNull()
            Me(Me.tableENDURANCEHDR.APPROVERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetENDURANCEDTLRows() As ENDURANCEDTLRow()
            If (Me.Table.ChildRelations("ENDURANCEHDR_ENDURANCEDTL") Is Nothing) Then
                Return New ENDURANCEDTLRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ENDURANCEHDR_ENDURANCEDTL")),ENDURANCEDTLRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HIGHSPEEDDTLRow
        Inherits Global.System.Data.DataRow
        
        Private tableHIGHSPEEDDTL As HIGHSPEEDDTLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHIGHSPEEDDTL = CType(Me.Table,HIGHSPEEDDTLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTSTEP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.TESTSTEPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TESTSTEP' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.TESTSTEPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIMEINMIN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.TIMEINMINColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMEINMIN' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.TIMEINMINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.SPEEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEED' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.SPEEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTMILES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.TOTMILESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTMILES' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.TOTMILESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.LOADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOAD' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.LOADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOADPERCENT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.LOADPERCENTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOADPERCENT' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.LOADPERCENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SETINFLATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.SETINFLATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SETINFLATION' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.SETINFLATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMBTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.AMBTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMBTEMP' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.AMBTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFPRESSURE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.INFPRESSUREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFPRESSURE' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.INFPRESSUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STEPCOMPLETIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDDTL.STEPCOMPLETIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STEPCOMPLETIONDATE' in table 'HIGHSPEEDDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.STEPCOMPLETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HIGHSPEEDID() As Decimal
            Get
                Return CType(Me(Me.tableHIGHSPEEDDTL.HIGHSPEEDIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.HIGHSPEEDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableHIGHSPEEDDTL.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableHIGHSPEEDDTL.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableHIGHSPEEDDTL.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableHIGHSPEEDDTL.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableHIGHSPEEDDTL.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HIGHSPEEDHDRRow() As HIGHSPEEDHDRRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("HIGHSPEEDHDR_HIGHSPEEDDTL")),HIGHSPEEDHDRRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("HIGHSPEEDHDR_HIGHSPEEDDTL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTESTSTEPNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.TESTSTEPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTESTSTEPNull()
            Me(Me.tableHIGHSPEEDDTL.TESTSTEPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIMEINMINNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.TIMEINMINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIMEINMINNull()
            Me(Me.tableHIGHSPEEDDTL.TIMEINMINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.SPEEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDNull()
            Me(Me.tableHIGHSPEEDDTL.SPEEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTMILESNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.TOTMILESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTMILESNull()
            Me(Me.tableHIGHSPEEDDTL.TOTMILESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOADNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.LOADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOADNull()
            Me(Me.tableHIGHSPEEDDTL.LOADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOADPERCENTNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.LOADPERCENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOADPERCENTNull()
            Me(Me.tableHIGHSPEEDDTL.LOADPERCENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSETINFLATIONNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.SETINFLATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSETINFLATIONNull()
            Me(Me.tableHIGHSPEEDDTL.SETINFLATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMBTEMPNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.AMBTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMBTEMPNull()
            Me(Me.tableHIGHSPEEDDTL.AMBTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFPRESSURENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.INFPRESSUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFPRESSURENull()
            Me(Me.tableHIGHSPEEDDTL.INFPRESSUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTEPCOMPLETIONDATENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDDTL.STEPCOMPLETIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTEPCOMPLETIONDATENull()
            Me(Me.tableHIGHSPEEDDTL.STEPCOMPLETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HIGHSPEEDHDRRow
        Inherits Global.System.Data.DataRow
        
        Private tableHIGHSPEEDHDR As HIGHSPEEDHDRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHIGHSPEEDHDR = CType(Me.Table,HIGHSPEEDHDRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HIGHSPEEDID() As Decimal
            Get
                Return CType(Me(Me.tableHIGHSPEEDHDR.HIGHSPEEDIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.HIGHSPEEDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROJECTNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.PROJECTNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROJECTNUMBER' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.PROJECTNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIRENUM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.TIRENUMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIRENUM' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.TIRENUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTSPEC() As String
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.TESTSPECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TESTSPEC' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.TESTSPECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPETIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.COMPETIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPETIONDATE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.COMPETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSERIALNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.DOTSERIALNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSERIALNUMBER' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.DOTSERIALNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MFGWWYY() As String
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.MFGWWYYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MFGWWYY' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.MFGWWYYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDSTARTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.PRECONDSTARTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDSTARTDATE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.PRECONDSTARTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDSARTTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.PRECONDSARTTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDSARTTEMP' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.PRECONDSARTTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIMDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.RIMDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIMDIAMETER' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.RIMDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIMWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.RIMWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIMWIDTH' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.RIMWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDENDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.PRECONDENDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDENDDATE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.PRECONDENDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDENDTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.PRECONDENDTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDENDTEMP' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.PRECONDENDTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFLATIONPRESSURE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.INFLATIONPRESSUREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFLATIONPRESSURE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.INFLATIONPRESSUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEFOREDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.BEFOREDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BEFOREDIAMETER' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.BEFOREDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AFTERDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.AFTERDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AFTERDIAMETER' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.AFTERDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEFOREINFLATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.BEFOREINFLATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BEFOREINFLATION' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.BEFOREINFLATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AFTERINFLATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.AFTERINFLATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AFTERINFLATION' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.AFTERINFLATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WHEELPOSITION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.WHEELPOSITIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WHEELPOSITION' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.WHEELPOSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WHEELNUMBER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.WHEELNUMBERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WHEELNUMBER' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.WHEELNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FINALTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.FINALTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINALTEMP' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.FINALTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FINALDISTANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.FINALDISTANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINALDISTANCE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.FINALDISTANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FINALINFLATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.FINALINFLATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINALINFLATION' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.FINALINFLATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTCONDSTARTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.POSTCONDSTARTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTCONDSTARTDATE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.POSTCONDSTARTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTCONDENDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.POSTCONDENDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTCONDENDDATE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.POSTCONDENDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTCONDENDTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.POSTCONDENDTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTCONDENDTEMP' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.POSTCONDENDTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PASSYN() As String
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.PASSYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PASSYN' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.PASSYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIALDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.SERIALDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIALDATE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.SERIALDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTCONDTIME() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.POSTCONDTIMEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTCONDTIME' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.POSTCONDTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATIONTYPEID() As Decimal
            Get
                Return CType(Me(Me.tableHIGHSPEEDHDR.CERTIFICATIONTYPEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.CERTIFICATIONTYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tableHIGHSPEEDHDR.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableHIGHSPEEDHDR.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableHIGHSPEEDHDR.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableHIGHSPEEDHDR.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableHIGHSPEEDHDR.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAMETERTESTDRUM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.DIAMETERTESTDRUMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAMETERTESTDRUM' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.DIAMETERTESTDRUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDTIME() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.PRECONDTIMEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDTIME' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.PRECONDTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECONDTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.PRECONDTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECONDTEMP' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.PRECONDTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFLATIONPRESSUREREADJUSTED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.INFLATIONPRESSUREREADJUSTEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFLATIONPRESSUREREADJUSTED' in table 'HIGHSPEEDHDR' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.INFLATIONPRESSUREREADJUSTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CIRCUNFERENCEBEFORETEST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.CIRCUNFERENCEBEFORETESTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCUNFERENCEBEFORETEST' in table 'HIGHSPEEDHDR' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.CIRCUNFERENCEBEFORETESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WHEELSPEEDRPM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.WHEELSPEEDRPMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WHEELSPEEDRPM' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.WHEELSPEEDRPMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WHEELSPEEDKMH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.WHEELSPEEDKMHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WHEELSPEEDKMH' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.WHEELSPEEDKMHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CIRCUNFERENCEAFTERTEST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.CIRCUNFERENCEAFTERTESTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCUNFERENCEAFTERTEST' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.CIRCUNFERENCEAFTERTESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ODDIFERENCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.ODDIFERENCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDIFERENCE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.ODDIFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ODDIFERENCETOLERANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.ODDIFERENCETOLERANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDIFERENCETOLERANCE' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.ODDIFERENCETOLERANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIENOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.SERIENOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIENOM' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.SERIENOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FINALJUDGEMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.FINALJUDGEMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINALJUDGEMENT' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.FINALJUDGEMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVER() As String
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.APPROVERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPROVER' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.APPROVERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PASSATKMH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.PASSATKMHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PASSATKMH' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.PASSATKMHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEEDTTESTPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.SPEEDTTESTPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEEDTTESTPASSFAIL' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.SPEEDTTESTPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEEDTOTALTIME() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.SPEEDTOTALTIMEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEEDTOTALTIME' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.SPEEDTOTALTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAXSPEED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.MAXSPEEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXSPEED' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.MAXSPEEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAXLOAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHIGHSPEEDHDR.MAXLOADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXLOAD' in table 'HIGHSPEEDHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHIGHSPEEDHDR.MAXLOADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATE_VIEWRowParent() As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CERTIFICATE_VIEW_HIGHSPEEDHDR")),CERTIFICATE_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CERTIFICATE_VIEW_HIGHSPEEDHDR"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROJECTNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.PROJECTNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROJECTNUMBERNull()
            Me(Me.tableHIGHSPEEDHDR.PROJECTNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIRENUMNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.TIRENUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIRENUMNull()
            Me(Me.tableHIGHSPEEDHDR.TIRENUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTESTSPECNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.TESTSPECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTESTSPECNull()
            Me(Me.tableHIGHSPEEDHDR.TESTSPECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPETIONDATENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.COMPETIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPETIONDATENull()
            Me(Me.tableHIGHSPEEDHDR.COMPETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSERIALNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.DOTSERIALNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSERIALNUMBERNull()
            Me(Me.tableHIGHSPEEDHDR.DOTSERIALNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMFGWWYYNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.MFGWWYYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMFGWWYYNull()
            Me(Me.tableHIGHSPEEDHDR.MFGWWYYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDSTARTDATENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.PRECONDSTARTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDSTARTDATENull()
            Me(Me.tableHIGHSPEEDHDR.PRECONDSTARTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDSARTTEMPNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.PRECONDSARTTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDSARTTEMPNull()
            Me(Me.tableHIGHSPEEDHDR.PRECONDSARTTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIMDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.RIMDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIMDIAMETERNull()
            Me(Me.tableHIGHSPEEDHDR.RIMDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIMWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.RIMWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIMWIDTHNull()
            Me(Me.tableHIGHSPEEDHDR.RIMWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDENDDATENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.PRECONDENDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDENDDATENull()
            Me(Me.tableHIGHSPEEDHDR.PRECONDENDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDENDTEMPNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.PRECONDENDTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDENDTEMPNull()
            Me(Me.tableHIGHSPEEDHDR.PRECONDENDTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFLATIONPRESSURENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.INFLATIONPRESSUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFLATIONPRESSURENull()
            Me(Me.tableHIGHSPEEDHDR.INFLATIONPRESSUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBEFOREDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.BEFOREDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBEFOREDIAMETERNull()
            Me(Me.tableHIGHSPEEDHDR.BEFOREDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAFTERDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.AFTERDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAFTERDIAMETERNull()
            Me(Me.tableHIGHSPEEDHDR.AFTERDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBEFOREINFLATIONNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.BEFOREINFLATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBEFOREINFLATIONNull()
            Me(Me.tableHIGHSPEEDHDR.BEFOREINFLATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAFTERINFLATIONNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.AFTERINFLATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAFTERINFLATIONNull()
            Me(Me.tableHIGHSPEEDHDR.AFTERINFLATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHEELPOSITIONNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.WHEELPOSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHEELPOSITIONNull()
            Me(Me.tableHIGHSPEEDHDR.WHEELPOSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHEELNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.WHEELNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHEELNUMBERNull()
            Me(Me.tableHIGHSPEEDHDR.WHEELNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINALTEMPNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.FINALTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINALTEMPNull()
            Me(Me.tableHIGHSPEEDHDR.FINALTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINALDISTANCENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.FINALDISTANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINALDISTANCENull()
            Me(Me.tableHIGHSPEEDHDR.FINALDISTANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINALINFLATIONNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.FINALINFLATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINALINFLATIONNull()
            Me(Me.tableHIGHSPEEDHDR.FINALINFLATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTCONDSTARTDATENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.POSTCONDSTARTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTCONDSTARTDATENull()
            Me(Me.tableHIGHSPEEDHDR.POSTCONDSTARTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTCONDENDDATENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.POSTCONDENDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTCONDENDDATENull()
            Me(Me.tableHIGHSPEEDHDR.POSTCONDENDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTCONDENDTEMPNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.POSTCONDENDTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTCONDENDTEMPNull()
            Me(Me.tableHIGHSPEEDHDR.POSTCONDENDTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPASSYNNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.PASSYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPASSYNNull()
            Me(Me.tableHIGHSPEEDHDR.PASSYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIALDATENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.SERIALDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIALDATENull()
            Me(Me.tableHIGHSPEEDHDR.SERIALDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTCONDTIMENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.POSTCONDTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTCONDTIMENull()
            Me(Me.tableHIGHSPEEDHDR.POSTCONDTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAMETERTESTDRUMNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.DIAMETERTESTDRUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAMETERTESTDRUMNull()
            Me(Me.tableHIGHSPEEDHDR.DIAMETERTESTDRUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDTIMENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.PRECONDTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDTIMENull()
            Me(Me.tableHIGHSPEEDHDR.PRECONDTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECONDTEMPNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.PRECONDTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECONDTEMPNull()
            Me(Me.tableHIGHSPEEDHDR.PRECONDTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFLATIONPRESSUREREADJUSTEDNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.INFLATIONPRESSUREREADJUSTEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFLATIONPRESSUREREADJUSTEDNull()
            Me(Me.tableHIGHSPEEDHDR.INFLATIONPRESSUREREADJUSTEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCIRCUNFERENCEBEFORETESTNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.CIRCUNFERENCEBEFORETESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCIRCUNFERENCEBEFORETESTNull()
            Me(Me.tableHIGHSPEEDHDR.CIRCUNFERENCEBEFORETESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHEELSPEEDRPMNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.WHEELSPEEDRPMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHEELSPEEDRPMNull()
            Me(Me.tableHIGHSPEEDHDR.WHEELSPEEDRPMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHEELSPEEDKMHNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.WHEELSPEEDKMHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHEELSPEEDKMHNull()
            Me(Me.tableHIGHSPEEDHDR.WHEELSPEEDKMHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCIRCUNFERENCEAFTERTESTNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.CIRCUNFERENCEAFTERTESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCIRCUNFERENCEAFTERTESTNull()
            Me(Me.tableHIGHSPEEDHDR.CIRCUNFERENCEAFTERTESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsODDIFERENCENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.ODDIFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetODDIFERENCENull()
            Me(Me.tableHIGHSPEEDHDR.ODDIFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsODDIFERENCETOLERANCENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.ODDIFERENCETOLERANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetODDIFERENCETOLERANCENull()
            Me(Me.tableHIGHSPEEDHDR.ODDIFERENCETOLERANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIENOMNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.SERIENOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIENOMNull()
            Me(Me.tableHIGHSPEEDHDR.SERIENOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINALJUDGEMENTNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.FINALJUDGEMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINALJUDGEMENTNull()
            Me(Me.tableHIGHSPEEDHDR.FINALJUDGEMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVERNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.APPROVERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVERNull()
            Me(Me.tableHIGHSPEEDHDR.APPROVERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPASSATKMHNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.PASSATKMHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPASSATKMHNull()
            Me(Me.tableHIGHSPEEDHDR.PASSATKMHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDTTESTPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.SPEEDTTESTPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDTTESTPASSFAILNull()
            Me(Me.tableHIGHSPEEDHDR.SPEEDTTESTPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDTOTALTIMENull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.SPEEDTOTALTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDTOTALTIMENull()
            Me(Me.tableHIGHSPEEDHDR.SPEEDTOTALTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAXSPEEDNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.MAXSPEEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAXSPEEDNull()
            Me(Me.tableHIGHSPEEDHDR.MAXSPEEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAXLOADNull() As Boolean
            Return Me.IsNull(Me.tableHIGHSPEEDHDR.MAXLOADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAXLOADNull()
            Me(Me.tableHIGHSPEEDHDR.MAXLOADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetHIGHSPEEDDTLRows() As HIGHSPEEDDTLRow()
            If (Me.Table.ChildRelations("HIGHSPEEDHDR_HIGHSPEEDDTL") Is Nothing) Then
                Return New HIGHSPEEDDTLRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("HIGHSPEEDHDR_HIGHSPEEDDTL")),HIGHSPEEDDTLRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetSPEEDTESTDETAILRows() As SPEEDTESTDETAILRow()
            If (Me.Table.ChildRelations("HIGHSPEEDHDR_SPEEDTESTDETAIL") Is Nothing) Then
                Return New SPEEDTESTDETAILRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("HIGHSPEEDHDR_SPEEDTESTDETAIL")),SPEEDTESTDETAILRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MEASUREDTLRow
        Inherits Global.System.Data.DataRow
        
        Private tableMEASUREDTL As MEASUREDTLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMEASUREDTL = CType(Me.Table,MEASUREDTLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEASUREID() As Decimal
            Get
                Return CType(Me(Me.tableMEASUREDTL.MEASUREIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableMEASUREDTL.MEASUREIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SECTIONWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREDTL.SECTIONWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECTIONWIDTH' in table 'MEASUREDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREDTL.SECTIONWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OVERALLWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREDTL.OVERALLWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OVERALLWIDTH' in table 'MEASUREDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREDTL.OVERALLWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITERATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREDTL.ITERATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITERATION' in table 'MEASUREDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREDTL.ITERATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableMEASUREDTL.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableMEASUREDTL.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableMEASUREDTL.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableMEASUREDTL.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableMEASUREDTL.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableMEASUREDTL.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableMEASUREDTL.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableMEASUREDTL.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEASUREHDRRow() As MEASUREHDRRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("MEASUREHDR_MEASUREDTL")),MEASUREHDRRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("MEASUREHDR_MEASUREDTL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSECTIONWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREDTL.SECTIONWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSECTIONWIDTHNull()
            Me(Me.tableMEASUREDTL.SECTIONWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOVERALLWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREDTL.OVERALLWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOVERALLWIDTHNull()
            Me(Me.tableMEASUREDTL.OVERALLWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITERATIONNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREDTL.ITERATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITERATIONNull()
            Me(Me.tableMEASUREDTL.ITERATIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MEASUREHDRRow
        Inherits Global.System.Data.DataRow
        
        Private tableMEASUREHDR As MEASUREHDRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMEASUREHDR = CType(Me.Table,MEASUREHDRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEASUREID() As Decimal
            Get
                Return CType(Me(Me.tableMEASUREHDR.MEASUREIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableMEASUREHDR.MEASUREIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROJECTNUMBER() As String
            Get
                Return CType(Me(Me.tableMEASUREHDR.PROJECTNUMBERColumn),String)
            End Get
            Set
                Me(Me.tableMEASUREHDR.PROJECTNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIRENUMBER() As Decimal
            Get
                Return CType(Me(Me.tableMEASUREHDR.TIRENUMBERColumn),Decimal)
            End Get
            Set
                Me(Me.tableMEASUREHDR.TIRENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTSPEC() As String
            Get
                Return CType(Me(Me.tableMEASUREHDR.TESTSPECColumn),String)
            End Get
            Set
                Me(Me.tableMEASUREHDR.TESTSPECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPLETIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.COMPLETIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPLETIONDATE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.COMPLETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFLATIONPRESSURE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.INFLATIONPRESSUREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFLATIONPRESSURE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.INFLATIONPRESSUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOLDDESIGN() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.MOLDDESIGNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOLDDESIGN' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.MOLDDESIGNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIMWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.RIMWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIMWIDTH' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.RIMWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSERIALNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.DOTSERIALNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSERIALNUMBER' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.DOTSERIALNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.DIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAMETER' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.DIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AVGSECTIONWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.AVGSECTIONWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AVGSECTIONWIDTH' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.AVGSECTIONWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AVGOVERALLWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.AVGOVERALLWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AVGOVERALLWIDTH' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.AVGOVERALLWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAXOVERALLWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.MAXOVERALLWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXOVERALLWIDTH' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.MAXOVERALLWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIZEFACTOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.SIZEFACTORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIZEFACTOR' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.SIZEFACTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOUNTTIME() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.MOUNTTIMEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOUNTTIME' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.MOUNTTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOUNTTEMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.MOUNTTEMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOUNTTEMP' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.MOUNTTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIALDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.SERIALDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIALDATE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.SERIALDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENDTIME() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.ENDTIMEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENDTIME' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.ENDTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTSIZEFACTOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.ACTSIZEFACTORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTSIZEFACTOR' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.ACTSIZEFACTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATIONTYPEID() As Decimal
            Get
                Return CType(Me(Me.tableMEASUREHDR.CERTIFICATIONTYPEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableMEASUREHDR.CERTIFICATIONTYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tableMEASUREHDR.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableMEASUREHDR.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableMEASUREHDR.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableMEASUREHDR.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableMEASUREHDR.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableMEASUREHDR.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableMEASUREHDR.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableMEASUREHDR.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableMEASUREHDR.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableMEASUREHDR.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STARTINFLATIONPRESSURE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.STARTINFLATIONPRESSUREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STARTINFLATIONPRESSURE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.STARTINFLATIONPRESSUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENDINFLATIONPRESSURE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.ENDINFLATIONPRESSUREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENDINFLATIONPRESSURE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.ENDINFLATIONPRESSUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADJUSTMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.ADJUSTMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADJUSTMENT' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.ADJUSTMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CIRCUNFERENCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.CIRCUNFERENCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCUNFERENCE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.CIRCUNFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.NOMINALDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALDIAMETER' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.NOMINALDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.NOMINALWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALWIDTH' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.NOMINALWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALWIDTHPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.NOMINALWIDTHPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALWIDTHPASSFAIL' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.NOMINALWIDTHPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALWIDTHDIFERENCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.NOMINALWIDTHDIFERENCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALWIDTHDIFERENCE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.NOMINALWIDTHDIFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALWIDTHTOLERANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.NOMINALWIDTHTOLERANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALWIDTHTOLERANCE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.NOMINALWIDTHTOLERANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAXOVERALLDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.MAXOVERALLDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXOVERALLDIAMETER' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.MAXOVERALLDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MINOVERALLDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.MINOVERALLDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MINOVERALLDIAMETER' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.MINOVERALLDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OVERALLWIDTHPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.OVERALLWIDTHPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OVERALLWIDTHPASSFAIL' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.OVERALLWIDTHPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OVERALLDIAMETERPASSFAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.OVERALLDIAMETERPASSFAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OVERALLDIAMETERPASSFAIL' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.OVERALLDIAMETERPASSFAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAMETERDIFERENCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.DIAMETERDIFERENCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAMETERDIFERENCE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.DIAMETERDIFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAMETERTOLERANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.DIAMETERTOLERANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAMETERTOLERANCE' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.DIAMETERTOLERANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TEMPRESISTANCEGRADING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.TEMPRESISTANCEGRADINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TEMPRESISTANCEGRADING' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.TEMPRESISTANCEGRADINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TENSILESTRENGHT1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.TENSILESTRENGHT1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TENSILESTRENGHT1' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.TENSILESTRENGHT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TENSILESTRENGHT2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.TENSILESTRENGHT2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TENSILESTRENGHT2' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.TENSILESTRENGHT2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELONGATION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.ELONGATION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELONGATION1' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.ELONGATION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELONGATION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.ELONGATION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELONGATION2' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.ELONGATION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TENSILESTRENGHTAFTERAGE1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.TENSILESTRENGHTAFTERAGE1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TENSILESTRENGHTAFTERAGE1' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.TENSILESTRENGHTAFTERAGE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TENSILESTRENGHTAFTERAGE2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEASUREHDR.TENSILESTRENGHTAFTERAGE2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TENSILESTRENGHTAFTERAGE2' in table 'MEASUREHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEASUREHDR.TENSILESTRENGHTAFTERAGE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATE_VIEWRowParent() As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CERTIFICATE_VIEW_MEASUREHDR")),CERTIFICATE_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CERTIFICATE_VIEW_MEASUREHDR"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPLETIONDATENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.COMPLETIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPLETIONDATENull()
            Me(Me.tableMEASUREHDR.COMPLETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFLATIONPRESSURENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.INFLATIONPRESSUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFLATIONPRESSURENull()
            Me(Me.tableMEASUREHDR.INFLATIONPRESSUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMOLDDESIGNNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.MOLDDESIGNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMOLDDESIGNNull()
            Me(Me.tableMEASUREHDR.MOLDDESIGNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIMWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.RIMWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIMWIDTHNull()
            Me(Me.tableMEASUREHDR.RIMWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSERIALNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.DOTSERIALNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSERIALNUMBERNull()
            Me(Me.tableMEASUREHDR.DOTSERIALNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.DIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAMETERNull()
            Me(Me.tableMEASUREHDR.DIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAVGSECTIONWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.AVGSECTIONWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAVGSECTIONWIDTHNull()
            Me(Me.tableMEASUREHDR.AVGSECTIONWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAVGOVERALLWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.AVGOVERALLWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAVGOVERALLWIDTHNull()
            Me(Me.tableMEASUREHDR.AVGOVERALLWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAXOVERALLWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.MAXOVERALLWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAXOVERALLWIDTHNull()
            Me(Me.tableMEASUREHDR.MAXOVERALLWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIZEFACTORNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.SIZEFACTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIZEFACTORNull()
            Me(Me.tableMEASUREHDR.SIZEFACTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMOUNTTIMENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.MOUNTTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMOUNTTIMENull()
            Me(Me.tableMEASUREHDR.MOUNTTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMOUNTTEMPNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.MOUNTTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMOUNTTEMPNull()
            Me(Me.tableMEASUREHDR.MOUNTTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIALDATENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.SERIALDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIALDATENull()
            Me(Me.tableMEASUREHDR.SERIALDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENDTIMENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.ENDTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENDTIMENull()
            Me(Me.tableMEASUREHDR.ENDTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACTSIZEFACTORNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.ACTSIZEFACTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACTSIZEFACTORNull()
            Me(Me.tableMEASUREHDR.ACTSIZEFACTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTARTINFLATIONPRESSURENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.STARTINFLATIONPRESSUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTARTINFLATIONPRESSURENull()
            Me(Me.tableMEASUREHDR.STARTINFLATIONPRESSUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENDINFLATIONPRESSURENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.ENDINFLATIONPRESSUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENDINFLATIONPRESSURENull()
            Me(Me.tableMEASUREHDR.ENDINFLATIONPRESSUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADJUSTMENTNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.ADJUSTMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADJUSTMENTNull()
            Me(Me.tableMEASUREHDR.ADJUSTMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCIRCUNFERENCENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.CIRCUNFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCIRCUNFERENCENull()
            Me(Me.tableMEASUREHDR.CIRCUNFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.NOMINALDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALDIAMETERNull()
            Me(Me.tableMEASUREHDR.NOMINALDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALWIDTHNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.NOMINALWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALWIDTHNull()
            Me(Me.tableMEASUREHDR.NOMINALWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALWIDTHPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.NOMINALWIDTHPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALWIDTHPASSFAILNull()
            Me(Me.tableMEASUREHDR.NOMINALWIDTHPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALWIDTHDIFERENCENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.NOMINALWIDTHDIFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALWIDTHDIFERENCENull()
            Me(Me.tableMEASUREHDR.NOMINALWIDTHDIFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALWIDTHTOLERANCENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.NOMINALWIDTHTOLERANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALWIDTHTOLERANCENull()
            Me(Me.tableMEASUREHDR.NOMINALWIDTHTOLERANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAXOVERALLDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.MAXOVERALLDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAXOVERALLDIAMETERNull()
            Me(Me.tableMEASUREHDR.MAXOVERALLDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMINOVERALLDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.MINOVERALLDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMINOVERALLDIAMETERNull()
            Me(Me.tableMEASUREHDR.MINOVERALLDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOVERALLWIDTHPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.OVERALLWIDTHPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOVERALLWIDTHPASSFAILNull()
            Me(Me.tableMEASUREHDR.OVERALLWIDTHPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOVERALLDIAMETERPASSFAILNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.OVERALLDIAMETERPASSFAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOVERALLDIAMETERPASSFAILNull()
            Me(Me.tableMEASUREHDR.OVERALLDIAMETERPASSFAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAMETERDIFERENCENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.DIAMETERDIFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAMETERDIFERENCENull()
            Me(Me.tableMEASUREHDR.DIAMETERDIFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAMETERTOLERANCENull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.DIAMETERTOLERANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAMETERTOLERANCENull()
            Me(Me.tableMEASUREHDR.DIAMETERTOLERANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTEMPRESISTANCEGRADINGNull() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.TEMPRESISTANCEGRADINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTEMPRESISTANCEGRADINGNull()
            Me(Me.tableMEASUREHDR.TEMPRESISTANCEGRADINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTENSILESTRENGHT1Null() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.TENSILESTRENGHT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTENSILESTRENGHT1Null()
            Me(Me.tableMEASUREHDR.TENSILESTRENGHT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTENSILESTRENGHT2Null() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.TENSILESTRENGHT2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTENSILESTRENGHT2Null()
            Me(Me.tableMEASUREHDR.TENSILESTRENGHT2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELONGATION1Null() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.ELONGATION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELONGATION1Null()
            Me(Me.tableMEASUREHDR.ELONGATION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELONGATION2Null() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.ELONGATION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELONGATION2Null()
            Me(Me.tableMEASUREHDR.ELONGATION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTENSILESTRENGHTAFTERAGE1Null() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.TENSILESTRENGHTAFTERAGE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTENSILESTRENGHTAFTERAGE1Null()
            Me(Me.tableMEASUREHDR.TENSILESTRENGHTAFTERAGE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTENSILESTRENGHTAFTERAGE2Null() As Boolean
            Return Me.IsNull(Me.tableMEASUREHDR.TENSILESTRENGHTAFTERAGE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTENSILESTRENGHTAFTERAGE2Null()
            Me(Me.tableMEASUREHDR.TENSILESTRENGHTAFTERAGE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetMEASUREDTLRows() As MEASUREDTLRow()
            If (Me.Table.ChildRelations("MEASUREHDR_MEASUREDTL") Is Nothing) Then
                Return New MEASUREDTLRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("MEASUREHDR_MEASUREDTL")),MEASUREDTLRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PLUNGERDTLRow
        Inherits Global.System.Data.DataRow
        
        Private tablePLUNGERDTL As PLUNGERDTLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePLUNGERDTL = CType(Me.Table,PLUNGERDTLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLUNGERID() As Decimal
            Get
                Return CType(Me(Me.tablePLUNGERDTL.PLUNGERIDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePLUNGERDTL.PLUNGERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BREAKINGENERGY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERDTL.BREAKINGENERGYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BREAKINGENERGY' in table 'PLUNGERDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERDTL.BREAKINGENERGYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITERATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERDTL.ITERATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITERATION' in table 'PLUNGERDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERDTL.ITERATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tablePLUNGERDTL.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tablePLUNGERDTL.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tablePLUNGERDTL.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tablePLUNGERDTL.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tablePLUNGERDTL.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tablePLUNGERDTL.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tablePLUNGERDTL.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tablePLUNGERDTL.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLUNGERHDRRow() As PLUNGERHDRRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("PLUNGERDTL_PLUNGERHDR")),PLUNGERHDRRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("PLUNGERDTL_PLUNGERHDR"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBREAKINGENERGYNull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERDTL.BREAKINGENERGYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBREAKINGENERGYNull()
            Me(Me.tablePLUNGERDTL.BREAKINGENERGYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITERATIONNull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERDTL.ITERATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITERATIONNull()
            Me(Me.tablePLUNGERDTL.ITERATIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PLUNGERHDRRow
        Inherits Global.System.Data.DataRow
        
        Private tablePLUNGERHDR As PLUNGERHDRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePLUNGERHDR = CType(Me.Table,PLUNGERHDRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLUNGERID() As Decimal
            Get
                Return CType(Me(Me.tablePLUNGERHDR.PLUNGERIDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePLUNGERHDR.PLUNGERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROJECTNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERHDR.PROJECTNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROJECTNUMBER' in table 'PLUNGERHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERHDR.PROJECTNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIRENUMBER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERHDR.TIRENUMBERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIRENUMBER' in table 'PLUNGERHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERHDR.TIRENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTSPEC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERHDR.TESTSPECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TESTSPEC' in table 'PLUNGERHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERHDR.TESTSPECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPLETIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERHDR.COMPLETIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPLETIONDATE' in table 'PLUNGERHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERHDR.COMPLETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSERIALNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERHDR.DOTSERIALNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSERIALNUMBER' in table 'PLUNGERHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERHDR.DOTSERIALNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AVGBREAKINGENERGY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERHDR.AVGBREAKINGENERGYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AVGBREAKINGENERGY' in table 'PLUNGERHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERHDR.AVGBREAKINGENERGYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PASSYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERHDR.PASSYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PASSYN' in table 'PLUNGERHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERHDR.PASSYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATIONTYPEID() As Decimal
            Get
                Return CType(Me(Me.tablePLUNGERHDR.CERTIFICATIONTYPEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePLUNGERHDR.CERTIFICATIONTYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tablePLUNGERHDR.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tablePLUNGERHDR.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIALDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERHDR.SERIALDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIALDATE' in table 'PLUNGERHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERHDR.SERIALDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MINPLUNGER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePLUNGERHDR.MINPLUNGERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MINPLUNGER' in table 'PLUNGERHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLUNGERHDR.MINPLUNGERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As String
            Get
                Return CType(Me(Me.tablePLUNGERHDR.CREATEDONColumn),String)
            End Get
            Set
                Me(Me.tablePLUNGERHDR.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As Date
            Get
                Return CType(Me(Me.tablePLUNGERHDR.CREATEDBYColumn),Date)
            End Get
            Set
                Me(Me.tablePLUNGERHDR.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tablePLUNGERHDR.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tablePLUNGERHDR.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tablePLUNGERHDR.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tablePLUNGERHDR.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATE_VIEWRowParent() As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CERTIFICATE_VIEW_PLUNGERHDR")),CERTIFICATE_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CERTIFICATE_VIEW_PLUNGERHDR"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROJECTNUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERHDR.PROJECTNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROJECTNUMBERNull()
            Me(Me.tablePLUNGERHDR.PROJECTNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIRENUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERHDR.TIRENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIRENUMBERNull()
            Me(Me.tablePLUNGERHDR.TIRENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTESTSPECNull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERHDR.TESTSPECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTESTSPECNull()
            Me(Me.tablePLUNGERHDR.TESTSPECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPLETIONDATENull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERHDR.COMPLETIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPLETIONDATENull()
            Me(Me.tablePLUNGERHDR.COMPLETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSERIALNUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERHDR.DOTSERIALNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSERIALNUMBERNull()
            Me(Me.tablePLUNGERHDR.DOTSERIALNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAVGBREAKINGENERGYNull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERHDR.AVGBREAKINGENERGYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAVGBREAKINGENERGYNull()
            Me(Me.tablePLUNGERHDR.AVGBREAKINGENERGYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPASSYNNull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERHDR.PASSYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPASSYNNull()
            Me(Me.tablePLUNGERHDR.PASSYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIALDATENull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERHDR.SERIALDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIALDATENull()
            Me(Me.tablePLUNGERHDR.SERIALDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMINPLUNGERNull() As Boolean
            Return Me.IsNull(Me.tablePLUNGERHDR.MINPLUNGERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMINPLUNGERNull()
            Me(Me.tablePLUNGERHDR.MINPLUNGERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPLUNGERDTLRows() As PLUNGERDTLRow()
            If (Me.Table.ChildRelations("PLUNGERDTL_PLUNGERHDR") Is Nothing) Then
                Return New PLUNGERDTLRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("PLUNGERDTL_PLUNGERHDR")),PLUNGERDTLRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TREADWEARHDRRow
        Inherits Global.System.Data.DataRow
        
        Private tableTREADWEARHDR As TREADWEARHDRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTREADWEARHDR = CType(Me.Table,TREADWEARHDRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TREADWEARID() As Decimal
            Get
                Return CType(Me(Me.tableTREADWEARHDR.TREADWEARIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.TREADWEARIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROJECTNUMBER() As String
            Get
                Return CType(Me(Me.tableTREADWEARHDR.PROJECTNUMBERColumn),String)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.PROJECTNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIRENUMBER() As Decimal
            Get
                Return CType(Me(Me.tableTREADWEARHDR.TIRENUMBERColumn),Decimal)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.TIRENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTSPEC() As String
            Get
                Return CType(Me(Me.tableTREADWEARHDR.TESTSPECColumn),String)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.TESTSPECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPLETIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARHDR.COMPLETIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPLETIONDATE' in table 'TREADWEARHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARHDR.COMPLETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTSERIALNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARHDR.DOTSERIALNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTSERIALNUMBER' in table 'TREADWEARHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARHDR.DOTSERIALNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOWESTWEARBAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARHDR.LOWESTWEARBARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOWESTWEARBAR' in table 'TREADWEARHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARHDR.LOWESTWEARBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PASSYN() As String
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARHDR.PASSYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PASSYN' in table 'TREADWEARHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARHDR.PASSYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIALDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARHDR.SERIALDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIALDATE' in table 'TREADWEARHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARHDR.SERIALDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATIONTYPEID() As Decimal
            Get
                Return CType(Me(Me.tableTREADWEARHDR.CERTIFICATIONTYPEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.CERTIFICATIONTYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tableTREADWEARHDR.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableTREADWEARHDR.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableTREADWEARHDR.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableTREADWEARHDR.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableTREADWEARHDR.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableTREADWEARHDR.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDICATORSREQUIREMENT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARHDR.INDICATORSREQUIREMENTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDICATORSREQUIREMENT' in table 'TREADWEARHDR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARHDR.INDICATORSREQUIREMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATE_VIEWRowParent() As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CERTIFICATE_VIEW_TREADWEARHDR")),CERTIFICATE_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CERTIFICATE_VIEW_TREADWEARHDR"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPLETIONDATENull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARHDR.COMPLETIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPLETIONDATENull()
            Me(Me.tableTREADWEARHDR.COMPLETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTSERIALNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARHDR.DOTSERIALNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTSERIALNUMBERNull()
            Me(Me.tableTREADWEARHDR.DOTSERIALNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOWESTWEARBARNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARHDR.LOWESTWEARBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOWESTWEARBARNull()
            Me(Me.tableTREADWEARHDR.LOWESTWEARBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPASSYNNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARHDR.PASSYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPASSYNNull()
            Me(Me.tableTREADWEARHDR.PASSYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIALDATENull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARHDR.SERIALDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIALDATENull()
            Me(Me.tableTREADWEARHDR.SERIALDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDICATORSREQUIREMENTNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARHDR.INDICATORSREQUIREMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDICATORSREQUIREMENTNull()
            Me(Me.tableTREADWEARHDR.INDICATORSREQUIREMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTREADWEARDTLRows() As TREADWEARDTLRow()
            If (Me.Table.ChildRelations("TREADWEARHDR_TREADWEARDTL") Is Nothing) Then
                Return New TREADWEARDTLRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("TREADWEARHDR_TREADWEARDTL")),TREADWEARDTLRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TREADWEARDTLRow
        Inherits Global.System.Data.DataRow
        
        Private tableTREADWEARDTL As TREADWEARDTLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTREADWEARDTL = CType(Me.Table,TREADWEARDTLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TREADWEARID() As Decimal
            Get
                Return CType(Me(Me.tableTREADWEARDTL.TREADWEARIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableTREADWEARDTL.TREADWEARIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WEARBARHEIGHT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARDTL.WEARBARHEIGHTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WEARBARHEIGHT' in table 'TREADWEARDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARDTL.WEARBARHEIGHTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITERATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARDTL.ITERATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITERATION' in table 'TREADWEARDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARDTL.ITERATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARDTL.CREATEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATEDBY' in table 'TREADWEARDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARDTL.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARDTL.CREATEDONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATEDON' in table 'TREADWEARDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARDTL.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARDTL.MODIFIEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFIEDBY' in table 'TREADWEARDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARDTL.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTREADWEARDTL.MODIFIEDONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODIFIEDON' in table 'TREADWEARDTL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTREADWEARDTL.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TREADWEARHDRRow() As TREADWEARHDRRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("TREADWEARHDR_TREADWEARDTL")),TREADWEARHDRRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("TREADWEARHDR_TREADWEARDTL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWEARBARHEIGHTNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARDTL.WEARBARHEIGHTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWEARBARHEIGHTNull()
            Me(Me.tableTREADWEARDTL.WEARBARHEIGHTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITERATIONNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARDTL.ITERATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITERATIONNull()
            Me(Me.tableTREADWEARDTL.ITERATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEDBYNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARDTL.CREATEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEDBYNull()
            Me(Me.tableTREADWEARDTL.CREATEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEDONNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARDTL.CREATEDONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEDONNull()
            Me(Me.tableTREADWEARDTL.CREATEDONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODIFIEDBYNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARDTL.MODIFIEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODIFIEDBYNull()
            Me(Me.tableTREADWEARDTL.MODIFIEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODIFIEDONNull() As Boolean
            Return Me.IsNull(Me.tableTREADWEARDTL.MODIFIEDONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODIFIEDONNull()
            Me(Me.tableTREADWEARDTL.MODIFIEDONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPEEDTESTDETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tableSPEEDTESTDETAIL As SPEEDTESTDETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPEEDTESTDETAIL = CType(Me.Table,SPEEDTESTDETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITERATION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSPEEDTESTDETAIL.ITERATIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITERATION' in table 'SPEEDTESTDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPEEDTESTDETAIL.ITERATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIME() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPEEDTESTDETAIL.TIMEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIME' in table 'SPEEDTESTDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPEEDTESTDETAIL.TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSPEEDTESTDETAIL.SPEEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEED' in table 'SPEEDTESTDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPEEDTESTDETAIL.SPEEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HIGHSPEEDID() As Decimal
            Get
                Return CType(Me(Me.tableSPEEDTESTDETAIL.HIGHSPEEDIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableSPEEDTESTDETAIL.HIGHSPEEDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tableSPEEDTESTDETAIL.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tableSPEEDTESTDETAIL.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tableSPEEDTESTDETAIL.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tableSPEEDTESTDETAIL.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tableSPEEDTESTDETAIL.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tableSPEEDTESTDETAIL.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tableSPEEDTESTDETAIL.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tableSPEEDTESTDETAIL.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HIGHSPEEDHDRRow() As HIGHSPEEDHDRRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("HIGHSPEEDHDR_SPEEDTESTDETAIL")),HIGHSPEEDHDRRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("HIGHSPEEDHDR_SPEEDTESTDETAIL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITERATIONNull() As Boolean
            Return Me.IsNull(Me.tableSPEEDTESTDETAIL.ITERATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITERATIONNull()
            Me(Me.tableSPEEDTESTDETAIL.ITERATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIMENull() As Boolean
            Return Me.IsNull(Me.tableSPEEDTESTDETAIL.TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIMENull()
            Me(Me.tableSPEEDTESTDETAIL.TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDNull() As Boolean
            Return Me.IsNull(Me.tableSPEEDTESTDETAIL.SPEEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDNull()
            Me(Me.tableSPEEDTESTDETAIL.SPEEDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BRAND_VIEWRow
        Inherits Global.System.Data.DataRow
        
        Private tableBRAND_VIEW As BRAND_VIEWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBRAND_VIEW = CType(Me.Table,BRAND_VIEWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRANDCODE() As String
            Get
                Return CType(Me(Me.tableBRAND_VIEW.BRANDCODEColumn),String)
            End Get
            Set
                Me(Me.tableBRAND_VIEW.BRANDCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRANDNAME() As String
            Get
                Return CType(Me(Me.tableBRAND_VIEW.BRANDNAMEColumn),String)
            End Get
            Set
                Me(Me.tableBRAND_VIEW.BRANDNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tableBRAND_VIEW.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableBRAND_VIEW.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTENSION_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableBRAND_VIEW.EXTENSION_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENSION_EN' in table 'BRAND_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBRAND_VIEW.EXTENSION_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATE_VIEWRow() As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CERTIFICATE_VIEW_BRAND_VIEW")),CERTIFICATE_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CERTIFICATE_VIEW_BRAND_VIEW"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTENSION_ENNull() As Boolean
            Return Me.IsNull(Me.tableBRAND_VIEW.EXTENSION_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTENSION_ENNull()
            Me(Me.tableBRAND_VIEW.EXTENSION_ENColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DEFAULTVALUES_VIEWRow
        Inherits Global.System.Data.DataRow
        
        Private tableDEFAULTVALUES_VIEW As DEFAULTVALUES_VIEWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDEFAULTVALUES_VIEW = CType(Me.Table,DEFAULTVALUES_VIEWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CERTIFICATENUMBER' in table 'DEFAULTVALUES_VIEW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MANUFACTURERNAME_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.MANUFACTURERNAME_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MANUFACTURERNAME_E' in table 'DEFAULTVALUES_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.MANUFACTURERNAME_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MANUFACTURERNAMEADDRESS_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.MANUFACTURERNAMEADDRESS_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MANUFACTURERNAMEADDRESS_E' in table 'DEFAULTVALUES_VIEW' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.MANUFACTURERNAMEADDRESS_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TECHNICALSERVICE_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.TECHNICALSERVICE_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TECHNICALSERVICE_E' in table 'DEFAULTVALUES_VIEW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.TECHNICALSERVICE_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLACE_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.PLACE_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACE_E' in table 'DEFAULTVALUES_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.PLACE_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEASURERIM_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.MEASURERIM_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEASURERIM_E' in table 'DEFAULTVALUES_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.MEASURERIM_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFLATIONPRESSURE_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.INFLATIONPRESSURE_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFLATIONPRESSURE_E' in table 'DEFAULTVALUES_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.INFLATIONPRESSURE_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TESTLABORATORY_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.TESTLABORATORY_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TESTLABORATORY_E' in table 'DEFAULTVALUES_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.TESTLABORATORY_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REPRESENTATIVENAME_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.REPRESENTATIVENAME_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REPRESENTATIVENAME_E' in table 'DEFAULTVALUES_VIEW' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.REPRESENTATIVENAME_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REPRESENTATIVEADDRESS_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.REPRESENTATIVEADDRESS_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REPRESENTATIVEADDRESS_E' in table 'DEFAULTVALUES_VIEW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.REPRESENTATIVEADDRESS_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REASONOFEXTENSION_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.REASONOFEXTENSION_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REASONOFEXTENSION_E' in table 'DEFAULTVALUES_VIEW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.REASONOFEXTENSION_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REMARKS_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableDEFAULTVALUES_VIEW.REMARKS_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REMARKS_E' in table 'DEFAULTVALUES_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDEFAULTVALUES_VIEW.REMARKS_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATE_VIEWRow() As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CERTIFICATE_VIEW_DEFAULTVALUES_VIEW")),CERTIFICATE_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CERTIFICATE_VIEW_DEFAULTVALUES_VIEW"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCERTIFICATENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCERTIFICATENUMBERNull()
            Me(Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMANUFACTURERNAME_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.MANUFACTURERNAME_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMANUFACTURERNAME_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.MANUFACTURERNAME_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMANUFACTURERNAMEADDRESS_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.MANUFACTURERNAMEADDRESS_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMANUFACTURERNAMEADDRESS_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.MANUFACTURERNAMEADDRESS_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTECHNICALSERVICE_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.TECHNICALSERVICE_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTECHNICALSERVICE_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.TECHNICALSERVICE_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLACE_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.PLACE_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLACE_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.PLACE_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEASURERIM_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.MEASURERIM_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEASURERIM_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.MEASURERIM_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFLATIONPRESSURE_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.INFLATIONPRESSURE_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFLATIONPRESSURE_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.INFLATIONPRESSURE_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTESTLABORATORY_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.TESTLABORATORY_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTESTLABORATORY_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.TESTLABORATORY_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREPRESENTATIVENAME_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.REPRESENTATIVENAME_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREPRESENTATIVENAME_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.REPRESENTATIVENAME_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREPRESENTATIVEADDRESS_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.REPRESENTATIVEADDRESS_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREPRESENTATIVEADDRESS_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.REPRESENTATIVEADDRESS_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREASONOFEXTENSION_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.REASONOFEXTENSION_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREASONOFEXTENSION_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.REASONOFEXTENSION_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREMARKS_ENull() As Boolean
            Return Me.IsNull(Me.tableDEFAULTVALUES_VIEW.REMARKS_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREMARKS_ENull()
            Me(Me.tableDEFAULTVALUES_VIEW.REMARKS_EColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CERTIFICATE_VIEWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CERTIFICATE_VIEWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CERTIFICATE_VIEWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CERTIFICATE_VIEWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PRODUCTDATA_REPORT_VIEWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PRODUCTDATA_REPORT_VIEWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PRODUCTDATA_REPORT_VIEWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PRODUCTDATA_REPORT_VIEWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BEADUNSEATHDRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BEADUNSEATHDRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BEADUNSEATHDRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BEADUNSEATHDRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BEADUNSEATDTLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BEADUNSEATDTLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BEADUNSEATDTLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BEADUNSEATDTLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ENDURANCEDTLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ENDURANCEDTLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ENDURANCEDTLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ENDURANCEDTLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ENDURANCEHDRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ENDURANCEHDRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ENDURANCEHDRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ENDURANCEHDRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HIGHSPEEDDTLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HIGHSPEEDDTLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HIGHSPEEDDTLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HIGHSPEEDDTLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HIGHSPEEDHDRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HIGHSPEEDHDRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HIGHSPEEDHDRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HIGHSPEEDHDRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MEASUREDTLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MEASUREDTLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MEASUREDTLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MEASUREDTLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MEASUREHDRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MEASUREHDRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MEASUREHDRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MEASUREHDRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PLUNGERDTLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PLUNGERDTLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PLUNGERDTLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PLUNGERDTLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PLUNGERHDRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PLUNGERHDRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PLUNGERHDRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PLUNGERHDRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TREADWEARHDRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TREADWEARHDRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TREADWEARHDRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TREADWEARHDRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TREADWEARDTLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TREADWEARDTLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TREADWEARDTLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TREADWEARDTLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SPEEDTESTDETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPEEDTESTDETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SPEEDTESTDETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SPEEDTESTDETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BRAND_VIEWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BRAND_VIEWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BRAND_VIEWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BRAND_VIEWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DEFAULTVALUES_VIEWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DEFAULTVALUES_VIEWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DEFAULTVALUES_VIEWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DEFAULTVALUES_VIEWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace EmarkPassengerWithTRTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CERTIFICATE_VIEWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CERTIFICATE_VIEW"
            tableMapping.ColumnMappings.Add("SKUID", "SKUID")
            tableMapping.ColumnMappings.Add("CERTIFICATIONTYPEID", "CERTIFICATIONTYPEID")
            tableMapping.ColumnMappings.Add("CERTIFICATIONTYPENAME", "CERTIFICATIONTYPENAME")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("DATESUBMITED", "DATESUBMITED")
            tableMapping.ColumnMappings.Add("ACTIVESTATUS", "ACTIVESTATUS")
            tableMapping.ColumnMappings.Add("DATEASSIGNED_EGI", "DATEASSIGNED_EGI")
            tableMapping.ColumnMappings.Add("DATEAPPROVED_CEGI", "DATEAPPROVED_CEGI")
            tableMapping.ColumnMappings.Add("RENEWALREQUIRED_CGIN", "RENEWALREQUIRED_CGIN")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALREQUIRED_EI", "SUPPLEMENTALREQUIRED_EI")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALNUMBER_EI", "SUPPLEMENTALNUMBER_EI")
            tableMapping.ColumnMappings.Add("JOBREPORTNUMBER_CEN", "JOBREPORTNUMBER_CEN")
            tableMapping.ColumnMappings.Add("EXTENSION_EN", "EXTENSION_EN")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALMOLDSTAMPING_E", "SUPPLEMENTALMOLDSTAMPING_E")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALDATEASSIGNED_E", "SUPPLEMENTALDATEASSIGNED_E")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALDATESUBMITTED_E", "SUPPLEMENTALDATESUBMITTED_E")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALDATEAPPROVED_E", "SUPPLEMENTALDATEAPPROVED_E")
            tableMapping.ColumnMappings.Add("EMARKREFERENCE_I", "EMARKREFERENCE_I")
            tableMapping.ColumnMappings.Add("EXPIRYDATE_I", "EXPIRYDATE_I")
            tableMapping.ColumnMappings.Add("FAMILY_I", "FAMILY_I")
            tableMapping.ColumnMappings.Add("PRODUCTLOCATION_C", "PRODUCTLOCATION_C")
            tableMapping.ColumnMappings.Add("COUNTRYOFMANUFACTURE_N", "COUNTRYOFMANUFACTURE_N")
            tableMapping.ColumnMappings.Add("CUSTOMER_N", "CUSTOMER_N")
            tableMapping.ColumnMappings.Add("CUSTOMERSPECIFIC_N", "CUSTOMERSPECIFIC_N")
            tableMapping.ColumnMappings.Add("IMPORTER_N", "IMPORTER_N")
            tableMapping.ColumnMappings.Add("IMPORTERADDRESS_N", "IMPORTERADDRESS_N")
            tableMapping.ColumnMappings.Add("IMPORTERREPRESENTATIVE_N", "IMPORTERREPRESENTATIVE_N")
            tableMapping.ColumnMappings.Add("COUNTRYLOCATION_N", "COUNTRYLOCATION_N")
            tableMapping.ColumnMappings.Add("BATCHNUMBER_G", "BATCHNUMBER_G")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SKUID, CERTIFICATIONTYPEID, CERTIFICATIONTYPENAME, CERTIFICATENUMBER, DATE"& _ 
                "SUBMITED, ACTIVESTATUS, DATEASSIGNED_EGI, DATEAPPROVED_CEGI, RENEWALREQUIRED_CGI"& _ 
                "N, SUPPLEMENTALREQUIRED_EI, SUPPLEMENTALNUMBER_EI, JOBREPORTNUMBER_CEN, EXTENSIO"& _ 
                "N_EN, SUPPLEMENTALMOLDSTAMPING_E, SUPPLEMENTALDATEASSIGNED_E, SUPPLEMENTALDATESU"& _ 
                "BMITTED_E, SUPPLEMENTALDATEAPPROVED_E, EMARKREFERENCE_I, EXPIRYDATE_I, FAMILY_I,"& _ 
                " PRODUCTLOCATION_C, COUNTRYOFMANUFACTURE_N, CUSTOMER_N, CUSTOMERSPECIFIC_N, IMPO"& _ 
                "RTER_N, IMPORTERADDRESS_N, IMPORTERREPRESENTATIVE_N, COUNTRYLOCATION_N, BATCHNUM"& _ 
                "BER_G FROM ICS.CERTIFICATE_VIEW"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.CERTIFICATE_VIEWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.CERTIFICATE_VIEWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.CERTIFICATE_VIEWDataTable = New EmarkPassengerWithTR.CERTIFICATE_VIEWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PRODUCTDATA_REPORT_VIEWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PRODUCTDATA_REPORT_VIEW"
            tableMapping.ColumnMappings.Add("SKUID", "SKUID")
            tableMapping.ColumnMappings.Add("SKU", "SKU")
            tableMapping.ColumnMappings.Add("BRANDCODE", "BRANDCODE")
            tableMapping.ColumnMappings.Add("TIRETYPEID", "TIRETYPEID")
            tableMapping.ColumnMappings.Add("NPRID", "NPRID")
            tableMapping.ColumnMappings.Add("SIZESTAMP", "SIZESTAMP")
            tableMapping.ColumnMappings.Add("DISCONTINUEDDATE", "DISCONTINUEDDATE")
            tableMapping.ColumnMappings.Add("SPECNUMBER", "SPECNUMBER")
            tableMapping.ColumnMappings.Add("SPEEDRATING", "SPEEDRATING")
            tableMapping.ColumnMappings.Add("SINGLOADINDEX", "SINGLOADINDEX")
            tableMapping.ColumnMappings.Add("DUALLOADINDEX", "DUALLOADINDEX")
            tableMapping.ColumnMappings.Add("BELTEDRADIALYN", "BELTEDRADIALYN")
            tableMapping.ColumnMappings.Add("TUBELESSYN", "TUBELESSYN")
            tableMapping.ColumnMappings.Add("REINFORCEDYN", "REINFORCEDYN")
            tableMapping.ColumnMappings.Add("EXTRALOADYN", "EXTRALOADYN")
            tableMapping.ColumnMappings.Add("MEASURINGRIM", "MEASURINGRIM")
            tableMapping.ColumnMappings.Add("UTQGTREADWEAR", "UTQGTREADWEAR")
            tableMapping.ColumnMappings.Add("UTQGTRACTION", "UTQGTRACTION")
            tableMapping.ColumnMappings.Add("UTQGTEMP", "UTQGTEMP")
            tableMapping.ColumnMappings.Add("MUDSNOWYN", "MUDSNOWYN")
            tableMapping.ColumnMappings.Add("RIMDIAMETER", "RIMDIAMETER")
            tableMapping.ColumnMappings.Add("SERIALDATE", "SERIALDATE")
            tableMapping.ColumnMappings.Add("BRANDDESC", "BRANDDESC")
            tableMapping.ColumnMappings.Add("LOADRANGE", "LOADRANGE")
            tableMapping.ColumnMappings.Add("MEARIMWIDTH", "MEARIMWIDTH")
            tableMapping.ColumnMappings.Add("REGROOVABLEIND", "REGROOVABLEIND")
            tableMapping.ColumnMappings.Add("PLANTPRODUCED", "PLANTPRODUCED")
            tableMapping.ColumnMappings.Add("MOSTRECENTTESTDATE", "MOSTRECENTTESTDATE")
            tableMapping.ColumnMappings.Add("IMARK", "IMARK")
            tableMapping.ColumnMappings.Add("INFORMENUMBER", "INFORMENUMBER")
            tableMapping.ColumnMappings.Add("FECHADATE", "FECHADATE")
            tableMapping.ColumnMappings.Add("TREADPATTERN", "TREADPATTERN")
            tableMapping.ColumnMappings.Add("SPECIALPROTECTIVEBAND", "SPECIALPROTECTIVEBAND")
            tableMapping.ColumnMappings.Add("NOMINALTIREWIDTH", "NOMINALTIREWIDTH")
            tableMapping.ColumnMappings.Add("ASPECTRADIO", "ASPECTRADIO")
            tableMapping.ColumnMappings.Add("TREADWEARINDICATORS", "TREADWEARINDICATORS")
            tableMapping.ColumnMappings.Add("NAMEOFMANUFACTURER", "NAMEOFMANUFACTURER")
            tableMapping.ColumnMappings.Add("FAMILY", "FAMILY")
            tableMapping.ColumnMappings.Add("DOTSERIALNUMBER", "DOTSERIALNUMBER")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALEXTENSION_EN", "SUPPLEMENTALEXTENSION_EN")
            tableMapping.ColumnMappings.Add("EXTENSION_EN", "EXTENSION_EN")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SKUID, SKU, BRANDCODE, TIRETYPEID, NPRID, SIZESTAMP, DISCONTINUEDDATE, SPE"& _ 
                "CNUMBER, SPEEDRATING, SINGLOADINDEX, DUALLOADINDEX, BELTEDRADIALYN, TUBELESSYN, "& _ 
                "REINFORCEDYN, EXTRALOADYN, MEASURINGRIM, UTQGTREADWEAR, UTQGTRACTION, UTQGTEMP, "& _ 
                "MUDSNOWYN, RIMDIAMETER, SERIALDATE, BRANDDESC, LOADRANGE, MEARIMWIDTH, REGROOVAB"& _ 
                "LEIND, PLANTPRODUCED, MOSTRECENTTESTDATE, IMARK, INFORMENUMBER, FECHADATE, TREAD"& _ 
                "PATTERN, SPECIALPROTECTIVEBAND, NOMINALTIREWIDTH, ASPECTRADIO, TREADWEARINDICATO"& _ 
                "RS, NAMEOFMANUFACTURER, FAMILY, DOTSERIALNUMBER, CERTIFICATENUMBER, SUPPLEMENTAL"& _ 
                "EXTENSION_EN, EXTENSION_EN FROM ICS.PRODUCTDATA_REPORT_VIEW"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.PRODUCTDATA_REPORT_VIEWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.PRODUCTDATA_REPORT_VIEWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.PRODUCTDATA_REPORT_VIEWDataTable = New EmarkPassengerWithTR.PRODUCTDATA_REPORT_VIEWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BEADUNSEATHDRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BEADUNSEATHDR"
            tableMapping.ColumnMappings.Add("BEADUNSEATID", "BEADUNSEATID")
            tableMapping.ColumnMappings.Add("PROJECTNUMBER", "PROJECTNUMBER")
            tableMapping.ColumnMappings.Add("TIRENUMBER", "TIRENUMBER")
            tableMapping.ColumnMappings.Add("TESTSPEC", "TESTSPEC")
            tableMapping.ColumnMappings.Add("COMPLETIONDATE", "COMPLETIONDATE")
            tableMapping.ColumnMappings.Add("DOTSERIALNUMBER", "DOTSERIALNUMBER")
            tableMapping.ColumnMappings.Add("LOWESTUNSEATVALUE", "LOWESTUNSEATVALUE")
            tableMapping.ColumnMappings.Add("PASSYN", "PASSYN")
            tableMapping.ColumnMappings.Add("CERTIFICATIONTYPEID", "CERTIFICATIONTYPEID")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("SERIALDATE", "SERIALDATE")
            tableMapping.ColumnMappings.Add("MINBEADUNSEAT", "MINBEADUNSEAT")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            tableMapping.ColumnMappings.Add("TESTPASSFAIL", "TESTPASSFAIL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""BEADUNSEATHDR"" (""BEADUNSEATID"", ""PROJECTNUMBER"", ""TIRENUMBER"","& _ 
                " ""TESTSPEC"", ""COMPLETIONDATE"", ""DOTSERIALNUMBER"", ""LOWESTUNSEATVALUE"", ""PASSYN"","& _ 
                " ""CERTIFICATIONTYPEID"", ""CERTIFICATENUMBER"", ""SERIALDATE"", ""MINBEADUNSEAT"", ""CRE"& _ 
                "ATEDBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"", ""TESTPASSFAIL"") VALUES (:BEADU"& _ 
                "NSEATID, :PROJECTNUMBER, :TIRENUMBER, :TESTSPEC, :COMPLETIONDATE, :DOTSERIALNUMB"& _ 
                "ER, :LOWESTUNSEATVALUE, :PASSYN, :CERTIFICATIONTYPEID, :CERTIFICATENUMBER, :SERI"& _ 
                "ALDATE, :MINBEADUNSEAT, :CREATEDBY, :CREATEDON, :MODIFIEDBY, :MODIFIEDON, :TESTP"& _ 
                "ASSFAIL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BEADUNSEATID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "BEADUNSEATID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PROJECTNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PROJECTNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIRENUMBER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TESTSPEC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TESTSPEC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("COMPLETIONDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "COMPLETIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DOTSERIALNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DOTSERIALNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("LOWESTUNSEATVALUE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "LOWESTUNSEATVALUE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PASSYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PASSYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATIONTYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATIONTYPEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIALDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MINBEADUNSEAT", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MINBEADUNSEAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TESTPASSFAIL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TESTPASSFAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT BEADUNSEATID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERI"& _ 
                "ALNUMBER, LOWESTUNSEATVALUE, PASSYN, CERTIFICATIONTYPEID, CERTIFICATENUMBER, SER"& _ 
                "IALDATE, MINBEADUNSEAT, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, TESTPASSFA"& _ 
                "IL FROM ICS.BEADUNSEATHDR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.BEADUNSEATHDRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.BEADUNSEATHDRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.BEADUNSEATHDRDataTable = New EmarkPassengerWithTR.BEADUNSEATHDRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.BEADUNSEATHDRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "BEADUNSEATHDR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal BEADUNSEATID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Global.System.Nullable(Of Decimal),  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal LOWESTUNSEATVALUE As Global.System.Nullable(Of Decimal),  _
                    ByVal PASSYN As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal MINBEADUNSEAT As Global.System.Nullable(Of Decimal),  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal TESTPASSFAIL As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(BEADUNSEATID,Decimal)
            If (PROJECTNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PROJECTNUMBER,String)
            End If
            If (TIRENUMBER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TIRENUMBER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TESTSPEC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TESTSPEC,String)
            End If
            If (COMPLETIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(COMPLETIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DOTSERIALNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DOTSERIALNUMBER,String)
            End If
            If (LOWESTUNSEATVALUE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(LOWESTUNSEATVALUE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PASSYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PASSYN,String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(CERTIFICATIONTYPEID,Decimal)
            If (CERTIFICATENUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CERTIFICATENUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CERTIFICATENUMBER,String)
            End If
            If (SERIALDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SERIALDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MINBEADUNSEAT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(MINBEADUNSEAT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(MODIFIEDON,Date)
            If (TESTPASSFAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(TESTPASSFAIL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BEADUNSEATDTLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BEADUNSEATDTL"
            tableMapping.ColumnMappings.Add("BEADUNSEATID", "BEADUNSEATID")
            tableMapping.ColumnMappings.Add("UNSEATFORCE", "UNSEATFORCE")
            tableMapping.ColumnMappings.Add("ITERATION", "ITERATION")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""BEADUNSEATDTL"" (""BEADUNSEATID"", ""UNSEATFORCE"", ""ITERATION"", ""C"& _ 
                "REATEDBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"") VALUES (:BEADUNSEATID, :UNSE"& _ 
                "ATFORCE, :ITERATION, :CREATEDBY, :CREATEDON, :MODIFIEDBY, :MODIFIEDON)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BEADUNSEATID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "BEADUNSEATID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("UNSEATFORCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "UNSEATFORCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ITERATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ITERATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT BEADUNSEATID, UNSEATFORCE, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, MO"& _ 
                "DIFIEDON FROM ICS.BEADUNSEATDTL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.BEADUNSEATDTLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.BEADUNSEATDTLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.BEADUNSEATDTLDataTable = New EmarkPassengerWithTR.BEADUNSEATDTLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.BEADUNSEATDTLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "BEADUNSEATDTL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal BEADUNSEATID As Decimal, ByVal UNSEATFORCE As Global.System.Nullable(Of Decimal), ByVal ITERATION As Global.System.Nullable(Of Decimal), ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(BEADUNSEATID,Decimal)
            If (UNSEATFORCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(UNSEATFORCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ITERATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ITERATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(MODIFIEDON,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ENDURANCEDTLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ENDURANCEDTL"
            tableMapping.ColumnMappings.Add("TESTSTEP", "TESTSTEP")
            tableMapping.ColumnMappings.Add("TIMEINMIN", "TIMEINMIN")
            tableMapping.ColumnMappings.Add("SPEED", "SPEED")
            tableMapping.ColumnMappings.Add("TOTMILES", "TOTMILES")
            tableMapping.ColumnMappings.Add("LOAD", "LOAD")
            tableMapping.ColumnMappings.Add("LOADPERCENT", "LOADPERCENT")
            tableMapping.ColumnMappings.Add("SETINFLATION", "SETINFLATION")
            tableMapping.ColumnMappings.Add("AMBTEMP", "AMBTEMP")
            tableMapping.ColumnMappings.Add("INFPRESSURE", "INFPRESSURE")
            tableMapping.ColumnMappings.Add("STEPCOMPLETIONDATE", "STEPCOMPLETIONDATE")
            tableMapping.ColumnMappings.Add("ENDURANCEID", "ENDURANCEID")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""ENDURANCEDTL"" (""TESTSTEP"", ""TIMEINMIN"", ""SPEED"", ""TOTMILES"", """& _ 
                "LOAD"", ""LOADPERCENT"", ""SETINFLATION"", ""AMBTEMP"", ""INFPRESSURE"", ""STEPCOMPLETIOND"& _ 
                "ATE"", ""ENDURANCEID"", ""CREATEDBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"") VALUE"& _ 
                "S (:TESTSTEP, :TIMEINMIN, :SPEED, :TOTMILES, :LOAD, :LOADPERCENT, :SETINFLATION,"& _ 
                " :AMBTEMP, :INFPRESSURE, :STEPCOMPLETIONDATE, :ENDURANCEID, :CREATEDBY, :CREATED"& _ 
                "ON, :MODIFIEDBY, :MODIFIEDON)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TESTSTEP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TESTSTEP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIMEINMIN", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIMEINMIN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPEED", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SPEED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TOTMILES", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TOTMILES", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("LOAD", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "LOAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("LOADPERCENT", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "LOADPERCENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SETINFLATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SETINFLATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("AMBTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "AMBTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("INFPRESSURE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "INFPRESSURE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("STEPCOMPLETIONDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "STEPCOMPLETIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ENDURANCEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ENDURANCEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TESTSTEP, TIMEINMIN, SPEED, TOTMILES, LOAD, LOADPERCENT, SETINFLATION, AMB"& _ 
                "TEMP, INFPRESSURE, STEPCOMPLETIONDATE, ENDURANCEID, CREATEDBY, CREATEDON, MODIFI"& _ 
                "EDBY, MODIFIEDON FROM ICS.ENDURANCEDTL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.ENDURANCEDTLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.ENDURANCEDTLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.ENDURANCEDTLDataTable = New EmarkPassengerWithTR.ENDURANCEDTLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.ENDURANCEDTLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "ENDURANCEDTL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal TESTSTEP As Global.System.Nullable(Of Decimal), ByVal TIMEINMIN As Global.System.Nullable(Of Decimal), ByVal SPEED As Global.System.Nullable(Of Decimal), ByVal TOTMILES As Global.System.Nullable(Of Decimal), ByVal LOAD As Global.System.Nullable(Of Decimal), ByVal LOADPERCENT As Global.System.Nullable(Of Decimal), ByVal SETINFLATION As Global.System.Nullable(Of Decimal), ByVal AMBTEMP As Global.System.Nullable(Of Decimal), ByVal INFPRESSURE As Global.System.Nullable(Of Decimal), ByVal STEPCOMPLETIONDATE As Global.System.Nullable(Of Date), ByVal ENDURANCEID As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As Integer
            If (TESTSTEP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(TESTSTEP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (TIMEINMIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TIMEINMIN.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SPEED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SPEED.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TOTMILES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TOTMILES.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LOAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LOAD.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (LOADPERCENT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(LOADPERCENT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SETINFLATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SETINFLATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (AMBTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(AMBTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (INFPRESSURE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(INFPRESSURE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (STEPCOMPLETIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(STEPCOMPLETIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(ENDURANCEID,Decimal)
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(MODIFIEDON,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ENDURANCEHDRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ENDURANCEHDR"
            tableMapping.ColumnMappings.Add("ENDURANCEID", "ENDURANCEID")
            tableMapping.ColumnMappings.Add("PROJECTNUMBER", "PROJECTNUMBER")
            tableMapping.ColumnMappings.Add("TIRENUMBER", "TIRENUMBER")
            tableMapping.ColumnMappings.Add("TESTSPEC", "TESTSPEC")
            tableMapping.ColumnMappings.Add("COMPLETIONDATE", "COMPLETIONDATE")
            tableMapping.ColumnMappings.Add("DOTSERIALNUMBER", "DOTSERIALNUMBER")
            tableMapping.ColumnMappings.Add("MFGWWYY", "MFGWWYY")
            tableMapping.ColumnMappings.Add("PRECONDSTARTDATE", "PRECONDSTARTDATE")
            tableMapping.ColumnMappings.Add("PRECONDSTARTTEMP", "PRECONDSTARTTEMP")
            tableMapping.ColumnMappings.Add("RIMDIAMETER", "RIMDIAMETER")
            tableMapping.ColumnMappings.Add("RIMWIDTH", "RIMWIDTH")
            tableMapping.ColumnMappings.Add("PRECONDENDDATE", "PRECONDENDDATE")
            tableMapping.ColumnMappings.Add("PRECONDENDTEMP", "PRECONDENDTEMP")
            tableMapping.ColumnMappings.Add("INFLATIONPRESSURE", "INFLATIONPRESSURE")
            tableMapping.ColumnMappings.Add("BEFOREDIAMETER", "BEFOREDIAMETER")
            tableMapping.ColumnMappings.Add("AFTERDIAMETER", "AFTERDIAMETER")
            tableMapping.ColumnMappings.Add("BEFOREINFLATION", "BEFOREINFLATION")
            tableMapping.ColumnMappings.Add("AFTERINFLATION", "AFTERINFLATION")
            tableMapping.ColumnMappings.Add("WHEELPOSITION", "WHEELPOSITION")
            tableMapping.ColumnMappings.Add("WHEELNUMBER", "WHEELNUMBER")
            tableMapping.ColumnMappings.Add("FINALTEMP", "FINALTEMP")
            tableMapping.ColumnMappings.Add("FINALDISTANCE", "FINALDISTANCE")
            tableMapping.ColumnMappings.Add("FINALINFLATION", "FINALINFLATION")
            tableMapping.ColumnMappings.Add("POSTCONDSTARTDATE", "POSTCONDSTARTDATE")
            tableMapping.ColumnMappings.Add("POSTCONDENDDATE", "POSTCONDENDDATE")
            tableMapping.ColumnMappings.Add("POSTCONDENDTEMP", "POSTCONDENDTEMP")
            tableMapping.ColumnMappings.Add("PASSYN", "PASSYN")
            tableMapping.ColumnMappings.Add("CERTIFICATIONTYPEID", "CERTIFICATIONTYPEID")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("SERIALDATE", "SERIALDATE")
            tableMapping.ColumnMappings.Add("PRECONDTIME", "PRECONDTIME")
            tableMapping.ColumnMappings.Add("POSTCONDTIME", "POSTCONDTIME")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            tableMapping.ColumnMappings.Add("DIAMETERTESTDRUM", "DIAMETERTESTDRUM")
            tableMapping.ColumnMappings.Add("PRECONDTEMP", "PRECONDTEMP")
            tableMapping.ColumnMappings.Add("INFLATIONPRESSUREREADJUSTED", "INFLATIONPRESSUREREADJUSTED")
            tableMapping.ColumnMappings.Add("CIRCUNFERENCEBEFORETEST", "CIRCUNFERENCEBEFORETEST")
            tableMapping.ColumnMappings.Add("RESULTPASSFAIL", "RESULTPASSFAIL")
            tableMapping.ColumnMappings.Add("ENDURANCEHOURS", "ENDURANCEHOURS")
            tableMapping.ColumnMappings.Add("POSSIBLEFAILURESFOUND", "POSSIBLEFAILURESFOUND")
            tableMapping.ColumnMappings.Add("CIRCUNFERENCEAFTERTEST", "CIRCUNFERENCEAFTERTEST")
            tableMapping.ColumnMappings.Add("OUTERDIAMETERDIFERENCE", "OUTERDIAMETERDIFERENCE")
            tableMapping.ColumnMappings.Add("ODDIFERENCETOLERANCE", "ODDIFERENCETOLERANCE")
            tableMapping.ColumnMappings.Add("SERIENOM", "SERIENOM")
            tableMapping.ColumnMappings.Add("FINALJUDGEMENT", "FINALJUDGEMENT")
            tableMapping.ColumnMappings.Add("APPROVER", "APPROVER")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""ENDURANCEHDR"" (""ENDURANCEID"", ""PROJECTNUMBER"", ""TIRENUMBER"", """& _ 
                "TESTSPEC"", ""COMPLETIONDATE"", ""DOTSERIALNUMBER"", ""MFGWWYY"", ""PRECONDSTARTDATE"", """& _ 
                "PRECONDSTARTTEMP"", ""RIMDIAMETER"", ""RIMWIDTH"", ""PRECONDENDDATE"", ""PRECONDENDTEMP"""& _ 
                ", ""INFLATIONPRESSURE"", ""BEFOREDIAMETER"", ""AFTERDIAMETER"", ""BEFOREINFLATION"", ""AF"& _ 
                "TERINFLATION"", ""WHEELPOSITION"", ""WHEELNUMBER"", ""FINALTEMP"", ""FINALDISTANCE"", ""FI"& _ 
                "NALINFLATION"", ""POSTCONDSTARTDATE"", ""POSTCONDENDDATE"", ""POSTCONDENDTEMP"", ""PASSY"& _ 
                "N"", ""CERTIFICATIONTYPEID"", ""CERTIFICATENUMBER"", ""SERIALDATE"", ""PRECONDTIME"", ""PO"& _ 
                "STCONDTIME"", ""CREATEDBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"", ""DIAMETERTEST"& _ 
                "DRUM"", ""PRECONDTEMP"", ""INFLATIONPRESSUREREADJUSTED"", ""CIRCUNFERENCEBEFORETEST"", "& _ 
                """RESULTPASSFAIL"", ""ENDURANCEHOURS"", ""POSSIBLEFAILURESFOUND"", ""CIRCUNFERENCEAFTER"& _ 
                "TEST"", ""OUTERDIAMETERDIFERENCE"", ""ODDIFERENCETOLERANCE"", ""SERIENOM"", ""FINALJUDGE"& _ 
                "MENT"", ""APPROVER"") VALUES (:ENDURANCEID, :PROJECTNUMBER, :TIRENUMBER, :TESTSPEC,"& _ 
                " :COMPLETIONDATE, :DOTSERIALNUMBER, :MFGWWYY, :PRECONDSTARTDATE, :PRECONDSTARTTE"& _ 
                "MP, :RIMDIAMETER, :RIMWIDTH, :PRECONDENDDATE, :PRECONDENDTEMP, :INFLATIONPRESSUR"& _ 
                "E, :BEFOREDIAMETER, :AFTERDIAMETER, :BEFOREINFLATION, :AFTERINFLATION, :WHEELPOS"& _ 
                "ITION, :WHEELNUMBER, :FINALTEMP, :FINALDISTANCE, :FINALINFLATION, :POSTCONDSTART"& _ 
                "DATE, :POSTCONDENDDATE, :POSTCONDENDTEMP, :PASSYN, :CERTIFICATIONTYPEID, :CERTIF"& _ 
                "ICATENUMBER, :SERIALDATE, :PRECONDTIME, :POSTCONDTIME, :CREATEDBY, :CREATEDON, :"& _ 
                "MODIFIEDBY, :MODIFIEDON, :DIAMETERTESTDRUM, :PRECONDTEMP, :p1, :p4, :RESULTPASSF"& _ 
                "AIL, :ENDURANCEHOURS, :POSSIBLEFAILURESFOUND, :p7, :p10, :ODDIFERENCETOLERANCE, "& _ 
                ":SERIENOM, :FINALJUDGEMENT, :APPROVER)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ENDURANCEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ENDURANCEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PROJECTNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PROJECTNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIRENUMBER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TESTSPEC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TESTSPEC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("COMPLETIONDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "COMPLETIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DOTSERIALNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DOTSERIALNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MFGWWYY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MFGWWYY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDSTARTDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "PRECONDSTARTDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDSTARTTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PRECONDSTARTTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("RIMDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "RIMDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("RIMWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "RIMWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDENDDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "PRECONDENDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDENDTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PRECONDENDTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("INFLATIONPRESSURE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "INFLATIONPRESSURE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BEFOREDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "BEFOREDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("AFTERDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "AFTERDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BEFOREINFLATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "BEFOREINFLATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("AFTERINFLATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "AFTERINFLATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("WHEELPOSITION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "WHEELPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("WHEELNUMBER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "WHEELNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FINALTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FINALTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FINALDISTANCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FINALDISTANCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FINALINFLATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FINALINFLATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSTCONDSTARTDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "POSTCONDSTARTDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSTCONDENDDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "POSTCONDENDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSTCONDENDTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSTCONDENDTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PASSYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PASSYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATIONTYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATIONTYPEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIALDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDTIME", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PRECONDTIME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSTCONDTIME", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSTCONDTIME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DIAMETERTESTDRUM", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "DIAMETERTESTDRUM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PRECONDTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "INFLATIONPRESSUREREADJUSTED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p4", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CIRCUNFERENCEBEFORETEST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("RESULTPASSFAIL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "RESULTPASSFAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ENDURANCEHOURS", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ENDURANCEHOURS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSSIBLEFAILURESFOUND", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "POSSIBLEFAILURESFOUND", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p7", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CIRCUNFERENCEAFTERTEST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p10", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "OUTERDIAMETERDIFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ODDIFERENCETOLERANCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ODDIFERENCETOLERANCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIENOM", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SERIENOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FINALJUDGEMENT", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FINALJUDGEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("APPROVER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "APPROVER", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ENDURANCEID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIA"& _ 
                "LNUMBER, MFGWWYY, PRECONDSTARTDATE, PRECONDSTARTTEMP, RIMDIAMETER, RIMWIDTH, PRE"& _ 
                "CONDENDDATE, PRECONDENDTEMP, INFLATIONPRESSURE, BEFOREDIAMETER, AFTERDIAMETER, B"& _ 
                "EFOREINFLATION, AFTERINFLATION, WHEELPOSITION, WHEELNUMBER, FINALTEMP, FINALDIST"& _ 
                "ANCE, FINALINFLATION, POSTCONDSTARTDATE, POSTCONDENDDATE, POSTCONDENDTEMP, PASSY"& _ 
                "N, CERTIFICATIONTYPEID, CERTIFICATENUMBER, SERIALDATE, PRECONDTIME, POSTCONDTIME"& _ 
                ", CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, DIAMETERTESTDRUM, PRECONDTEMP, I"& _ 
                "NFLATIONPRESSUREREADJUSTED, CIRCUNFERENCEBEFORETEST, RESULTPASSFAIL, ENDURANCEHO"& _ 
                "URS, POSSIBLEFAILURESFOUND, CIRCUNFERENCEAFTERTEST, OUTERDIAMETERDIFERENCE, ODDI"& _ 
                "FERENCETOLERANCE, SERIENOM, FINALJUDGEMENT, APPROVER FROM ICS.ENDURANCEHDR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.ENDURANCEHDRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.ENDURANCEHDRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.ENDURANCEHDRDataTable = New EmarkPassengerWithTR.ENDURANCEHDRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.ENDURANCEHDRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "ENDURANCEHDR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ENDURANCEID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Global.System.Nullable(Of Decimal),  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal MFGWWYY As String,  _
                    ByVal PRECONDSTARTDATE As Global.System.Nullable(Of Date),  _
                    ByVal PRECONDSTARTTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal RIMDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal RIMWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECONDENDDATE As Global.System.Nullable(Of Date),  _
                    ByVal PRECONDENDTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal INFLATIONPRESSURE As Global.System.Nullable(Of Decimal),  _
                    ByVal BEFOREDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal AFTERDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal BEFOREINFLATION As Global.System.Nullable(Of Decimal),  _
                    ByVal AFTERINFLATION As Global.System.Nullable(Of Decimal),  _
                    ByVal WHEELPOSITION As Global.System.Nullable(Of Decimal),  _
                    ByVal WHEELNUMBER As Global.System.Nullable(Of Decimal),  _
                    ByVal FINALTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal FINALDISTANCE As Global.System.Nullable(Of Decimal),  _
                    ByVal FINALINFLATION As Global.System.Nullable(Of Decimal),  _
                    ByVal POSTCONDSTARTDATE As Global.System.Nullable(Of Date),  _
                    ByVal POSTCONDENDDATE As Global.System.Nullable(Of Date),  _
                    ByVal POSTCONDENDTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal PASSYN As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal PRECONDTIME As Global.System.Nullable(Of Decimal),  _
                    ByVal POSTCONDTIME As Global.System.Nullable(Of Decimal),  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal DIAMETERTESTDRUM As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECONDTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal p1 As Global.System.Nullable(Of Decimal),  _
                    ByVal p4 As Global.System.Nullable(Of Decimal),  _
                    ByVal RESULTPASSFAIL As String,  _
                    ByVal ENDURANCEHOURS As Global.System.Nullable(Of Decimal),  _
                    ByVal POSSIBLEFAILURESFOUND As String,  _
                    ByVal p7 As Global.System.Nullable(Of Decimal),  _
                    ByVal p10 As Global.System.Nullable(Of Decimal),  _
                    ByVal ODDIFERENCETOLERANCE As Global.System.Nullable(Of Decimal),  _
                    ByVal SERIENOM As String,  _
                    ByVal FINALJUDGEMENT As String,  _
                    ByVal APPROVER As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ENDURANCEID,Decimal)
            If (PROJECTNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PROJECTNUMBER,String)
            End If
            If (TIRENUMBER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TIRENUMBER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TESTSPEC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TESTSPEC,String)
            End If
            If (COMPLETIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(COMPLETIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DOTSERIALNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DOTSERIALNUMBER,String)
            End If
            If (MFGWWYY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MFGWWYY,String)
            End If
            If (PRECONDSTARTDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PRECONDSTARTDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (PRECONDSTARTTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PRECONDSTARTTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (RIMDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(RIMDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (RIMWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(RIMWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PRECONDENDDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PRECONDENDDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PRECONDENDTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PRECONDENDTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (INFLATIONPRESSURE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(INFLATIONPRESSURE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (BEFOREDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BEFOREDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (AFTERDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(AFTERDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (BEFOREINFLATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(BEFOREINFLATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (AFTERINFLATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(AFTERINFLATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (WHEELPOSITION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(WHEELPOSITION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (WHEELNUMBER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(WHEELNUMBER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (FINALTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(FINALTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (FINALDISTANCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(FINALDISTANCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (FINALINFLATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(FINALINFLATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (POSTCONDSTARTDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(POSTCONDSTARTDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (POSTCONDENDDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(POSTCONDENDDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (POSTCONDENDTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(POSTCONDENDTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PASSYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PASSYN,String)
            End If
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(CERTIFICATIONTYPEID,Decimal)
            If (CERTIFICATENUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CERTIFICATENUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CERTIFICATENUMBER,String)
            End If
            If (SERIALDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(SERIALDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (PRECONDTIME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(PRECONDTIME.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (POSTCONDTIME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(POSTCONDTIME.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(MODIFIEDON,Date)
            If (DIAMETERTESTDRUM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(DIAMETERTESTDRUM.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (PRECONDTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PRECONDTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (p1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(p1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (p4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(p4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (RESULTPASSFAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(RESULTPASSFAIL,String)
            End If
            If (ENDURANCEHOURS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(ENDURANCEHOURS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (POSSIBLEFAILURESFOUND Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(POSSIBLEFAILURESFOUND,String)
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(p7.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(p10.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (ODDIFERENCETOLERANCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(ODDIFERENCETOLERANCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (SERIENOM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(SERIENOM,String)
            End If
            If (FINALJUDGEMENT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(FINALJUDGEMENT,String)
            End If
            If (APPROVER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(APPROVER,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HIGHSPEEDDTLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HIGHSPEEDDTL"
            tableMapping.ColumnMappings.Add("TESTSTEP", "TESTSTEP")
            tableMapping.ColumnMappings.Add("TIMEINMIN", "TIMEINMIN")
            tableMapping.ColumnMappings.Add("SPEED", "SPEED")
            tableMapping.ColumnMappings.Add("TOTMILES", "TOTMILES")
            tableMapping.ColumnMappings.Add("LOAD", "LOAD")
            tableMapping.ColumnMappings.Add("LOADPERCENT", "LOADPERCENT")
            tableMapping.ColumnMappings.Add("SETINFLATION", "SETINFLATION")
            tableMapping.ColumnMappings.Add("AMBTEMP", "AMBTEMP")
            tableMapping.ColumnMappings.Add("INFPRESSURE", "INFPRESSURE")
            tableMapping.ColumnMappings.Add("STEPCOMPLETIONDATE", "STEPCOMPLETIONDATE")
            tableMapping.ColumnMappings.Add("HIGHSPEEDID", "HIGHSPEEDID")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""HIGHSPEEDDTL"" (""TESTSTEP"", ""TIMEINMIN"", ""SPEED"", ""TOTMILES"", """& _ 
                "LOAD"", ""LOADPERCENT"", ""SETINFLATION"", ""AMBTEMP"", ""INFPRESSURE"", ""STEPCOMPLETIOND"& _ 
                "ATE"", ""HIGHSPEEDID"", ""CREATEDBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"") VALUE"& _ 
                "S (:TESTSTEP, :TIMEINMIN, :SPEED, :TOTMILES, :LOAD, :LOADPERCENT, :SETINFLATION,"& _ 
                " :AMBTEMP, :INFPRESSURE, :STEPCOMPLETIONDATE, :HIGHSPEEDID, :CREATEDBY, :CREATED"& _ 
                "ON, :MODIFIEDBY, :MODIFIEDON)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TESTSTEP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TESTSTEP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIMEINMIN", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIMEINMIN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPEED", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SPEED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TOTMILES", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TOTMILES", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("LOAD", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "LOAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("LOADPERCENT", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "LOADPERCENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SETINFLATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SETINFLATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("AMBTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "AMBTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("INFPRESSURE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "INFPRESSURE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("STEPCOMPLETIONDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "STEPCOMPLETIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("HIGHSPEEDID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "HIGHSPEEDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TESTSTEP, TIMEINMIN, SPEED, TOTMILES, LOAD, LOADPERCENT, SETINFLATION, AMB"& _ 
                "TEMP, INFPRESSURE, STEPCOMPLETIONDATE, HIGHSPEEDID, CREATEDBY, CREATEDON, MODIFI"& _ 
                "EDBY, MODIFIEDON FROM ICS.HIGHSPEEDDTL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.HIGHSPEEDDTLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.HIGHSPEEDDTLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.HIGHSPEEDDTLDataTable = New EmarkPassengerWithTR.HIGHSPEEDDTLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.HIGHSPEEDDTLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "HIGHSPEEDDTL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal TESTSTEP As Global.System.Nullable(Of Decimal), ByVal TIMEINMIN As Global.System.Nullable(Of Decimal), ByVal SPEED As Global.System.Nullable(Of Decimal), ByVal TOTMILES As Global.System.Nullable(Of Decimal), ByVal LOAD As Global.System.Nullable(Of Decimal), ByVal LOADPERCENT As Global.System.Nullable(Of Decimal), ByVal SETINFLATION As Global.System.Nullable(Of Decimal), ByVal AMBTEMP As Global.System.Nullable(Of Decimal), ByVal INFPRESSURE As Global.System.Nullable(Of Decimal), ByVal STEPCOMPLETIONDATE As Global.System.Nullable(Of Date), ByVal HIGHSPEEDID As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As Integer
            If (TESTSTEP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(TESTSTEP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (TIMEINMIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TIMEINMIN.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SPEED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SPEED.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TOTMILES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TOTMILES.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LOAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LOAD.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (LOADPERCENT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(LOADPERCENT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SETINFLATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SETINFLATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (AMBTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(AMBTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (INFPRESSURE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(INFPRESSURE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (STEPCOMPLETIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(STEPCOMPLETIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(HIGHSPEEDID,Decimal)
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(MODIFIEDON,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HIGHSPEEDHDRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HIGHSPEEDHDR"
            tableMapping.ColumnMappings.Add("HIGHSPEEDID", "HIGHSPEEDID")
            tableMapping.ColumnMappings.Add("PROJECTNUMBER", "PROJECTNUMBER")
            tableMapping.ColumnMappings.Add("TIRENUM", "TIRENUM")
            tableMapping.ColumnMappings.Add("TESTSPEC", "TESTSPEC")
            tableMapping.ColumnMappings.Add("COMPETIONDATE", "COMPETIONDATE")
            tableMapping.ColumnMappings.Add("DOTSERIALNUMBER", "DOTSERIALNUMBER")
            tableMapping.ColumnMappings.Add("MFGWWYY", "MFGWWYY")
            tableMapping.ColumnMappings.Add("PRECONDSTARTDATE", "PRECONDSTARTDATE")
            tableMapping.ColumnMappings.Add("PRECONDSARTTEMP", "PRECONDSARTTEMP")
            tableMapping.ColumnMappings.Add("RIMDIAMETER", "RIMDIAMETER")
            tableMapping.ColumnMappings.Add("RIMWIDTH", "RIMWIDTH")
            tableMapping.ColumnMappings.Add("PRECONDENDDATE", "PRECONDENDDATE")
            tableMapping.ColumnMappings.Add("PRECONDENDTEMP", "PRECONDENDTEMP")
            tableMapping.ColumnMappings.Add("INFLATIONPRESSURE", "INFLATIONPRESSURE")
            tableMapping.ColumnMappings.Add("BEFOREDIAMETER", "BEFOREDIAMETER")
            tableMapping.ColumnMappings.Add("AFTERDIAMETER", "AFTERDIAMETER")
            tableMapping.ColumnMappings.Add("BEFOREINFLATION", "BEFOREINFLATION")
            tableMapping.ColumnMappings.Add("AFTERINFLATION", "AFTERINFLATION")
            tableMapping.ColumnMappings.Add("WHEELPOSITION", "WHEELPOSITION")
            tableMapping.ColumnMappings.Add("WHEELNUMBER", "WHEELNUMBER")
            tableMapping.ColumnMappings.Add("FINALTEMP", "FINALTEMP")
            tableMapping.ColumnMappings.Add("FINALDISTANCE", "FINALDISTANCE")
            tableMapping.ColumnMappings.Add("FINALINFLATION", "FINALINFLATION")
            tableMapping.ColumnMappings.Add("POSTCONDSTARTDATE", "POSTCONDSTARTDATE")
            tableMapping.ColumnMappings.Add("POSTCONDENDDATE", "POSTCONDENDDATE")
            tableMapping.ColumnMappings.Add("POSTCONDENDTEMP", "POSTCONDENDTEMP")
            tableMapping.ColumnMappings.Add("PASSYN", "PASSYN")
            tableMapping.ColumnMappings.Add("SERIALDATE", "SERIALDATE")
            tableMapping.ColumnMappings.Add("POSTCONDTIME", "POSTCONDTIME")
            tableMapping.ColumnMappings.Add("CERTIFICATIONTYPEID", "CERTIFICATIONTYPEID")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            tableMapping.ColumnMappings.Add("DIAMETERTESTDRUM", "DIAMETERTESTDRUM")
            tableMapping.ColumnMappings.Add("PRECONDTIME", "PRECONDTIME")
            tableMapping.ColumnMappings.Add("PRECONDTEMP", "PRECONDTEMP")
            tableMapping.ColumnMappings.Add("INFLATIONPRESSUREREADJUSTED", "INFLATIONPRESSUREREADJUSTED")
            tableMapping.ColumnMappings.Add("CIRCUNFERENCEBEFORETEST", "CIRCUNFERENCEBEFORETEST")
            tableMapping.ColumnMappings.Add("WHEELSPEEDRPM", "WHEELSPEEDRPM")
            tableMapping.ColumnMappings.Add("WHEELSPEEDKMH", "WHEELSPEEDKMH")
            tableMapping.ColumnMappings.Add("CIRCUNFERENCEAFTERTEST", "CIRCUNFERENCEAFTERTEST")
            tableMapping.ColumnMappings.Add("ODDIFERENCE", "ODDIFERENCE")
            tableMapping.ColumnMappings.Add("ODDIFERENCETOLERANCE", "ODDIFERENCETOLERANCE")
            tableMapping.ColumnMappings.Add("SERIENOM", "SERIENOM")
            tableMapping.ColumnMappings.Add("FINALJUDGEMENT", "FINALJUDGEMENT")
            tableMapping.ColumnMappings.Add("APPROVER", "APPROVER")
            tableMapping.ColumnMappings.Add("PASSATKMH", "PASSATKMH")
            tableMapping.ColumnMappings.Add("SPEEDTTESTPASSFAIL", "SPEEDTTESTPASSFAIL")
            tableMapping.ColumnMappings.Add("SPEEDTOTALTIME", "SPEEDTOTALTIME")
            tableMapping.ColumnMappings.Add("MAXSPEED", "MAXSPEED")
            tableMapping.ColumnMappings.Add("MAXLOAD", "MAXLOAD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""HIGHSPEEDHDR"" (""HIGHSPEEDID"", ""PROJECTNUMBER"", ""TIRENUM"", ""TES"& _ 
                "TSPEC"", ""COMPETIONDATE"", ""DOTSERIALNUMBER"", ""MFGWWYY"", ""PRECONDSTARTDATE"", ""PREC"& _ 
                "ONDSARTTEMP"", ""RIMDIAMETER"", ""RIMWIDTH"", ""PRECONDENDDATE"", ""PRECONDENDTEMP"", ""IN"& _ 
                "FLATIONPRESSURE"", ""BEFOREDIAMETER"", ""AFTERDIAMETER"", ""BEFOREINFLATION"", ""AFTERIN"& _ 
                "FLATION"", ""WHEELPOSITION"", ""WHEELNUMBER"", ""FINALTEMP"", ""FINALDISTANCE"", ""FINALIN"& _ 
                "FLATION"", ""POSTCONDSTARTDATE"", ""POSTCONDENDDATE"", ""POSTCONDENDTEMP"", ""PASSYN"", """& _ 
                "SERIALDATE"", ""POSTCONDTIME"", ""CERTIFICATIONTYPEID"", ""CERTIFICATENUMBER"", ""CREATE"& _ 
                "DBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"", ""DIAMETERTESTDRUM"", ""PRECONDTIME"""& _ 
                ", ""PRECONDTEMP"", ""INFLATIONPRESSUREREADJUSTED"", ""CIRCUNFERENCEBEFORETEST"", ""WHEE"& _ 
                "LSPEEDRPM"", ""WHEELSPEEDKMH"", ""CIRCUNFERENCEAFTERTEST"", ""ODDIFERENCE"", ""ODDIFEREN"& _ 
                "CETOLERANCE"", ""SERIENOM"", ""FINALJUDGEMENT"", ""APPROVER"", ""PASSATKMH"", ""SPEEDTTEST"& _ 
                "PASSFAIL"", ""SPEEDTOTALTIME"", ""MAXSPEED"", ""MAXLOAD"") VALUES (:HIGHSPEEDID, :PROJE"& _ 
                "CTNUMBER, :TIRENUM, :TESTSPEC, :COMPETIONDATE, :DOTSERIALNUMBER, :MFGWWYY, :PREC"& _ 
                "ONDSTARTDATE, :PRECONDSARTTEMP, :RIMDIAMETER, :RIMWIDTH, :PRECONDENDDATE, :PRECO"& _ 
                "NDENDTEMP, :INFLATIONPRESSURE, :BEFOREDIAMETER, :AFTERDIAMETER, :BEFOREINFLATION"& _ 
                ", :AFTERINFLATION, :WHEELPOSITION, :WHEELNUMBER, :FINALTEMP, :FINALDISTANCE, :FI"& _ 
                "NALINFLATION, :POSTCONDSTARTDATE, :POSTCONDENDDATE, :POSTCONDENDTEMP, :PASSYN, :"& _ 
                "SERIALDATE, :POSTCONDTIME, :CERTIFICATIONTYPEID, :CERTIFICATENUMBER, :CREATEDBY,"& _ 
                " :CREATEDON, :MODIFIEDBY, :MODIFIEDON, :DIAMETERTESTDRUM, :PRECONDTIME, :PRECOND"& _ 
                "TEMP, :p1, :p4, :WHEELSPEEDRPM, :WHEELSPEEDKMH, :p7, :ODDIFERENCE, :ODDIFERENCET"& _ 
                "OLERANCE, :SERIENOM, :FINALJUDGEMENT, :APPROVER, :PASSATKMH, :SPEEDTTESTPASSFAIL"& _ 
                ", :SPEEDTOTALTIME, :MAXSPEED, :MAXLOAD)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("HIGHSPEEDID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "HIGHSPEEDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PROJECTNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PROJECTNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIRENUM", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRENUM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TESTSPEC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TESTSPEC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("COMPETIONDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "COMPETIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DOTSERIALNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DOTSERIALNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MFGWWYY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MFGWWYY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDSTARTDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "PRECONDSTARTDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDSARTTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PRECONDSARTTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("RIMDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "RIMDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("RIMWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "RIMWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDENDDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "PRECONDENDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDENDTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PRECONDENDTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("INFLATIONPRESSURE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "INFLATIONPRESSURE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BEFOREDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "BEFOREDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("AFTERDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "AFTERDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BEFOREINFLATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "BEFOREINFLATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("AFTERINFLATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "AFTERINFLATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("WHEELPOSITION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "WHEELPOSITION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("WHEELNUMBER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "WHEELNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FINALTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FINALTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FINALDISTANCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FINALDISTANCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FINALINFLATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "FINALINFLATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSTCONDSTARTDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "POSTCONDSTARTDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSTCONDENDDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "POSTCONDENDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSTCONDENDTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSTCONDENDTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PASSYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PASSYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIALDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("POSTCONDTIME", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "POSTCONDTIME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATIONTYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATIONTYPEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DIAMETERTESTDRUM", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "DIAMETERTESTDRUM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDTIME", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PRECONDTIME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PRECONDTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PRECONDTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "INFLATIONPRESSUREREADJUSTED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p4", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CIRCUNFERENCEBEFORETEST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("WHEELSPEEDRPM", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "WHEELSPEEDRPM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("WHEELSPEEDKMH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "WHEELSPEEDKMH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p7", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CIRCUNFERENCEAFTERTEST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ODDIFERENCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ODDIFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ODDIFERENCETOLERANCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ODDIFERENCETOLERANCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIENOM", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SERIENOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FINALJUDGEMENT", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FINALJUDGEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("APPROVER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "APPROVER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PASSATKMH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PASSATKMH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPEEDTTESTPASSFAIL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPEEDTTESTPASSFAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPEEDTOTALTIME", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SPEEDTOTALTIME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MAXSPEED", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MAXSPEED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MAXLOAD", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MAXLOAD", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT HIGHSPEEDID, PROJECTNUMBER, TIRENUM, TESTSPEC, COMPETIONDATE, DOTSERIALNUM"& _ 
                "BER, MFGWWYY, PRECONDSTARTDATE, PRECONDSARTTEMP, RIMDIAMETER, RIMWIDTH, PRECONDE"& _ 
                "NDDATE, PRECONDENDTEMP, INFLATIONPRESSURE, BEFOREDIAMETER, AFTERDIAMETER, BEFORE"& _ 
                "INFLATION, AFTERINFLATION, WHEELPOSITION, WHEELNUMBER, FINALTEMP, FINALDISTANCE,"& _ 
                " FINALINFLATION, POSTCONDSTARTDATE, POSTCONDENDDATE, POSTCONDENDTEMP, PASSYN, SE"& _ 
                "RIALDATE, POSTCONDTIME, CERTIFICATIONTYPEID, CERTIFICATENUMBER, CREATEDBY, CREAT"& _ 
                "EDON, MODIFIEDBY, MODIFIEDON, DIAMETERTESTDRUM, PRECONDTIME, PRECONDTEMP, INFLAT"& _ 
                "IONPRESSUREREADJUSTED, CIRCUNFERENCEBEFORETEST, WHEELSPEEDRPM, WHEELSPEEDKMH, CI"& _ 
                "RCUNFERENCEAFTERTEST, ODDIFERENCE, ODDIFERENCETOLERANCE, SERIENOM, FINALJUDGEMEN"& _ 
                "T, APPROVER, PASSATKMH, SPEEDTTESTPASSFAIL, SPEEDTOTALTIME, MAXSPEED, MAXLOAD FR"& _ 
                "OM ICS.HIGHSPEEDHDR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.HIGHSPEEDHDRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.HIGHSPEEDHDRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.HIGHSPEEDHDRDataTable = New EmarkPassengerWithTR.HIGHSPEEDHDRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.HIGHSPEEDHDRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "HIGHSPEEDHDR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal HIGHSPEEDID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUM As Global.System.Nullable(Of Decimal),  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPETIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal MFGWWYY As String,  _
                    ByVal PRECONDSTARTDATE As Global.System.Nullable(Of Date),  _
                    ByVal PRECONDSARTTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal RIMDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal RIMWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECONDENDDATE As Global.System.Nullable(Of Date),  _
                    ByVal PRECONDENDTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal INFLATIONPRESSURE As Global.System.Nullable(Of Decimal),  _
                    ByVal BEFOREDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal AFTERDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal BEFOREINFLATION As Global.System.Nullable(Of Decimal),  _
                    ByVal AFTERINFLATION As Global.System.Nullable(Of Decimal),  _
                    ByVal WHEELPOSITION As Global.System.Nullable(Of Decimal),  _
                    ByVal WHEELNUMBER As Global.System.Nullable(Of Decimal),  _
                    ByVal FINALTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal FINALDISTANCE As Global.System.Nullable(Of Decimal),  _
                    ByVal FINALINFLATION As Global.System.Nullable(Of Decimal),  _
                    ByVal POSTCONDSTARTDATE As Global.System.Nullable(Of Date),  _
                    ByVal POSTCONDENDDATE As Global.System.Nullable(Of Date),  _
                    ByVal POSTCONDENDTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal PASSYN As String,  _
                    ByVal SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal POSTCONDTIME As Global.System.Nullable(Of Decimal),  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal DIAMETERTESTDRUM As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECONDTIME As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECONDTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal p1 As Global.System.Nullable(Of Decimal),  _
                    ByVal p4 As Global.System.Nullable(Of Decimal),  _
                    ByVal WHEELSPEEDRPM As Global.System.Nullable(Of Decimal),  _
                    ByVal WHEELSPEEDKMH As Global.System.Nullable(Of Decimal),  _
                    ByVal p7 As Global.System.Nullable(Of Decimal),  _
                    ByVal ODDIFERENCE As Global.System.Nullable(Of Decimal),  _
                    ByVal ODDIFERENCETOLERANCE As Global.System.Nullable(Of Decimal),  _
                    ByVal SERIENOM As String,  _
                    ByVal FINALJUDGEMENT As String,  _
                    ByVal APPROVER As String,  _
                    ByVal PASSATKMH As Global.System.Nullable(Of Decimal),  _
                    ByVal SPEEDTTESTPASSFAIL As String,  _
                    ByVal SPEEDTOTALTIME As Global.System.Nullable(Of Decimal),  _
                    ByVal MAXSPEED As Global.System.Nullable(Of Decimal),  _
                    ByVal MAXLOAD As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(HIGHSPEEDID,Decimal)
            If (PROJECTNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PROJECTNUMBER,String)
            End If
            If (TIRENUM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TIRENUM.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TESTSPEC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TESTSPEC,String)
            End If
            If (COMPETIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(COMPETIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DOTSERIALNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DOTSERIALNUMBER,String)
            End If
            If (MFGWWYY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MFGWWYY,String)
            End If
            If (PRECONDSTARTDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PRECONDSTARTDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (PRECONDSARTTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PRECONDSARTTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (RIMDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(RIMDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (RIMWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(RIMWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PRECONDENDDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PRECONDENDDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PRECONDENDTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PRECONDENDTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (INFLATIONPRESSURE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(INFLATIONPRESSURE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (BEFOREDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BEFOREDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (AFTERDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(AFTERDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (BEFOREINFLATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(BEFOREINFLATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (AFTERINFLATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(AFTERINFLATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (WHEELPOSITION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(WHEELPOSITION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (WHEELNUMBER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(WHEELNUMBER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (FINALTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(FINALTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (FINALDISTANCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(FINALDISTANCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (FINALINFLATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(FINALINFLATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (POSTCONDSTARTDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(POSTCONDSTARTDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (POSTCONDENDDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(POSTCONDENDDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (POSTCONDENDTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(POSTCONDENDTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PASSYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PASSYN,String)
            End If
            If (SERIALDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(SERIALDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (POSTCONDTIME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(POSTCONDTIME.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(CERTIFICATIONTYPEID,Decimal)
            If (CERTIFICATENUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CERTIFICATENUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CERTIFICATENUMBER,String)
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(MODIFIEDON,Date)
            If (DIAMETERTESTDRUM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(DIAMETERTESTDRUM.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (PRECONDTIME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(PRECONDTIME.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (PRECONDTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PRECONDTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (p1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(p1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (p4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(p4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (WHEELSPEEDRPM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(WHEELSPEEDRPM.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (WHEELSPEEDKMH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(WHEELSPEEDKMH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(p7.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ODDIFERENCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(ODDIFERENCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (ODDIFERENCETOLERANCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(ODDIFERENCETOLERANCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (SERIENOM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(SERIENOM,String)
            End If
            If (FINALJUDGEMENT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(FINALJUDGEMENT,String)
            End If
            If (APPROVER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(APPROVER,String)
            End If
            If (PASSATKMH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(PASSATKMH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SPEEDTTESTPASSFAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(SPEEDTTESTPASSFAIL,String)
            End If
            If (SPEEDTOTALTIME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(SPEEDTOTALTIME.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (MAXSPEED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(MAXSPEED.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (MAXLOAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(MAXLOAD.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MEASUREDTLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MEASUREDTL"
            tableMapping.ColumnMappings.Add("MEASUREID", "MEASUREID")
            tableMapping.ColumnMappings.Add("SECTIONWIDTH", "SECTIONWIDTH")
            tableMapping.ColumnMappings.Add("OVERALLWIDTH", "OVERALLWIDTH")
            tableMapping.ColumnMappings.Add("ITERATION", "ITERATION")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""MEASUREDTL"" (""MEASUREID"", ""SECTIONWIDTH"", ""OVERALLWIDTH"", ""ITE"& _ 
                "RATION"", ""CREATEDBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"") VALUES (:MEASUREI"& _ 
                "D, :SECTIONWIDTH, :OVERALLWIDTH, :ITERATION, :CREATEDBY, :CREATEDON, :MODIFIEDBY"& _ 
                ", :MODIFIEDON)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MEASUREID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MEASUREID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SECTIONWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SECTIONWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("OVERALLWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "OVERALLWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ITERATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ITERATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MEASUREID, SECTIONWIDTH, OVERALLWIDTH, ITERATION, CREATEDBY, CREATEDON, MO"& _ 
                "DIFIEDBY, MODIFIEDON FROM ICS.MEASUREDTL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.MEASUREDTLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.MEASUREDTLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.MEASUREDTLDataTable = New EmarkPassengerWithTR.MEASUREDTLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.MEASUREDTLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "MEASUREDTL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal MEASUREID As Decimal, ByVal SECTIONWIDTH As Global.System.Nullable(Of Decimal), ByVal OVERALLWIDTH As Global.System.Nullable(Of Decimal), ByVal ITERATION As Global.System.Nullable(Of Decimal), ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(MEASUREID,Decimal)
            If (SECTIONWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SECTIONWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (OVERALLWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(OVERALLWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ITERATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ITERATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(MODIFIEDON,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MEASUREHDRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MEASUREHDR"
            tableMapping.ColumnMappings.Add("MEASUREID", "MEASUREID")
            tableMapping.ColumnMappings.Add("PROJECTNUMBER", "PROJECTNUMBER")
            tableMapping.ColumnMappings.Add("TIRENUMBER", "TIRENUMBER")
            tableMapping.ColumnMappings.Add("TESTSPEC", "TESTSPEC")
            tableMapping.ColumnMappings.Add("COMPLETIONDATE", "COMPLETIONDATE")
            tableMapping.ColumnMappings.Add("INFLATIONPRESSURE", "INFLATIONPRESSURE")
            tableMapping.ColumnMappings.Add("MOLDDESIGN", "MOLDDESIGN")
            tableMapping.ColumnMappings.Add("RIMWIDTH", "RIMWIDTH")
            tableMapping.ColumnMappings.Add("DOTSERIALNUMBER", "DOTSERIALNUMBER")
            tableMapping.ColumnMappings.Add("DIAMETER", "DIAMETER")
            tableMapping.ColumnMappings.Add("AVGSECTIONWIDTH", "AVGSECTIONWIDTH")
            tableMapping.ColumnMappings.Add("AVGOVERALLWIDTH", "AVGOVERALLWIDTH")
            tableMapping.ColumnMappings.Add("MAXOVERALLWIDTH", "MAXOVERALLWIDTH")
            tableMapping.ColumnMappings.Add("SIZEFACTOR", "SIZEFACTOR")
            tableMapping.ColumnMappings.Add("MOUNTTIME", "MOUNTTIME")
            tableMapping.ColumnMappings.Add("MOUNTTEMP", "MOUNTTEMP")
            tableMapping.ColumnMappings.Add("SERIALDATE", "SERIALDATE")
            tableMapping.ColumnMappings.Add("ENDTIME", "ENDTIME")
            tableMapping.ColumnMappings.Add("ACTSIZEFACTOR", "ACTSIZEFACTOR")
            tableMapping.ColumnMappings.Add("CERTIFICATIONTYPEID", "CERTIFICATIONTYPEID")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            tableMapping.ColumnMappings.Add("STARTINFLATIONPRESSURE", "STARTINFLATIONPRESSURE")
            tableMapping.ColumnMappings.Add("ENDINFLATIONPRESSURE", "ENDINFLATIONPRESSURE")
            tableMapping.ColumnMappings.Add("ADJUSTMENT", "ADJUSTMENT")
            tableMapping.ColumnMappings.Add("CIRCUNFERENCE", "CIRCUNFERENCE")
            tableMapping.ColumnMappings.Add("NOMINALDIAMETER", "NOMINALDIAMETER")
            tableMapping.ColumnMappings.Add("NOMINALWIDTH", "NOMINALWIDTH")
            tableMapping.ColumnMappings.Add("NOMINALWIDTHPASSFAIL", "NOMINALWIDTHPASSFAIL")
            tableMapping.ColumnMappings.Add("NOMINALWIDTHDIFERENCE", "NOMINALWIDTHDIFERENCE")
            tableMapping.ColumnMappings.Add("NOMINALWIDTHTOLERANCE", "NOMINALWIDTHTOLERANCE")
            tableMapping.ColumnMappings.Add("MAXOVERALLDIAMETER", "MAXOVERALLDIAMETER")
            tableMapping.ColumnMappings.Add("MINOVERALLDIAMETER", "MINOVERALLDIAMETER")
            tableMapping.ColumnMappings.Add("OVERALLWIDTHPASSFAIL", "OVERALLWIDTHPASSFAIL")
            tableMapping.ColumnMappings.Add("OVERALLDIAMETERPASSFAIL", "OVERALLDIAMETERPASSFAIL")
            tableMapping.ColumnMappings.Add("DIAMETERDIFERENCE", "DIAMETERDIFERENCE")
            tableMapping.ColumnMappings.Add("DIAMETERTOLERANCE", "DIAMETERTOLERANCE")
            tableMapping.ColumnMappings.Add("TEMPRESISTANCEGRADING", "TEMPRESISTANCEGRADING")
            tableMapping.ColumnMappings.Add("TENSILESTRENGHT1", "TENSILESTRENGHT1")
            tableMapping.ColumnMappings.Add("TENSILESTRENGHT2", "TENSILESTRENGHT2")
            tableMapping.ColumnMappings.Add("ELONGATION1", "ELONGATION1")
            tableMapping.ColumnMappings.Add("ELONGATION2", "ELONGATION2")
            tableMapping.ColumnMappings.Add("TENSILESTRENGHTAFTERAGE1", "TENSILESTRENGHTAFTERAGE1")
            tableMapping.ColumnMappings.Add("TENSILESTRENGHTAFTERAGE2", "TENSILESTRENGHTAFTERAGE2")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""MEASUREHDR"" (""MEASUREID"", ""PROJECTNUMBER"", ""TIRENUMBER"", ""TEST"& _ 
                "SPEC"", ""COMPLETIONDATE"", ""INFLATIONPRESSURE"", ""MOLDDESIGN"", ""RIMWIDTH"", ""DOTSERI"& _ 
                "ALNUMBER"", ""DIAMETER"", ""AVGSECTIONWIDTH"", ""AVGOVERALLWIDTH"", ""MAXOVERALLWIDTH"", "& _ 
                """SIZEFACTOR"", ""MOUNTTIME"", ""MOUNTTEMP"", ""SERIALDATE"", ""ENDTIME"", ""ACTSIZEFACTOR"""& _ 
                ", ""CERTIFICATIONTYPEID"", ""CERTIFICATENUMBER"", ""CREATEDBY"", ""CREATEDON"", ""MODIFIE"& _ 
                "DBY"", ""MODIFIEDON"", ""STARTINFLATIONPRESSURE"", ""ENDINFLATIONPRESSURE"", ""ADJUSTMEN"& _ 
                "T"", ""CIRCUNFERENCE"", ""NOMINALDIAMETER"", ""NOMINALWIDTH"", ""NOMINALWIDTHPASSFAIL"", "& _ 
                """NOMINALWIDTHDIFERENCE"", ""NOMINALWIDTHTOLERANCE"", ""MAXOVERALLDIAMETER"", ""MINOVER"& _ 
                "ALLDIAMETER"", ""OVERALLWIDTHPASSFAIL"", ""OVERALLDIAMETERPASSFAIL"", ""DIAMETERDIFERE"& _ 
                "NCE"", ""DIAMETERTOLERANCE"", ""TEMPRESISTANCEGRADING"", ""TENSILESTRENGHT1"", ""TENSILE"& _ 
                "STRENGHT2"", ""ELONGATION1"", ""ELONGATION2"", ""TENSILESTRENGHTAFTERAGE1"", ""TENSILEST"& _ 
                "RENGHTAFTERAGE2"") VALUES (:MEASUREID, :PROJECTNUMBER, :TIRENUMBER, :TESTSPEC, :C"& _ 
                "OMPLETIONDATE, :INFLATIONPRESSURE, :MOLDDESIGN, :RIMWIDTH, :DOTSERIALNUMBER, :DI"& _ 
                "AMETER, :AVGSECTIONWIDTH, :AVGOVERALLWIDTH, :MAXOVERALLWIDTH, :SIZEFACTOR, :MOUN"& _ 
                "TTIME, :MOUNTTEMP, :SERIALDATE, :ENDTIME, :ACTSIZEFACTOR, :CERTIFICATIONTYPEID, "& _ 
                ":CERTIFICATENUMBER, :CREATEDBY, :CREATEDON, :MODIFIEDBY, :MODIFIEDON, :p1, :ENDI"& _ 
                "NFLATIONPRESSURE, :ADJUSTMENT, :CIRCUNFERENCE, :NOMINALDIAMETER, :NOMINALWIDTH, "& _ 
                ":NOMINALWIDTHPASSFAIL, :NOMINALWIDTHDIFERENCE, :NOMINALWIDTHTOLERANCE, :MAXOVERA"& _ 
                "LLDIAMETER, :MINOVERALLDIAMETER, :OVERALLWIDTHPASSFAIL, :p4, :DIAMETERDIFERENCE,"& _ 
                " :DIAMETERTOLERANCE, :TEMPRESISTANCEGRADING, :TENSILESTRENGHT1, :TENSILESTRENGHT"& _ 
                "2, :ELONGATION1, :ELONGATION2, :p7, :p10)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MEASUREID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MEASUREID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PROJECTNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PROJECTNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIRENUMBER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TESTSPEC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TESTSPEC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("COMPLETIONDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "COMPLETIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("INFLATIONPRESSURE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "INFLATIONPRESSURE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MOLDDESIGN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MOLDDESIGN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("RIMWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "RIMWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DOTSERIALNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DOTSERIALNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "DIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("AVGSECTIONWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "AVGSECTIONWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("AVGOVERALLWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "AVGOVERALLWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MAXOVERALLWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MAXOVERALLWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SIZEFACTOR", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SIZEFACTOR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MOUNTTIME", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "MOUNTTIME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MOUNTTEMP", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MOUNTTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIALDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ENDTIME", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "ENDTIME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ACTSIZEFACTOR", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ACTSIZEFACTOR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATIONTYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATIONTYPEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "STARTINFLATIONPRESSURE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ENDINFLATIONPRESSURE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ENDINFLATIONPRESSURE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ADJUSTMENT", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ADJUSTMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CIRCUNFERENCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CIRCUNFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMINALDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "NOMINALDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMINALWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "NOMINALWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMINALWIDTHPASSFAIL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMINALWIDTHPASSFAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMINALWIDTHDIFERENCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "NOMINALWIDTHDIFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMINALWIDTHTOLERANCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "NOMINALWIDTHTOLERANCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MAXOVERALLDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MAXOVERALLDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MINOVERALLDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MINOVERALLDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("OVERALLWIDTHPASSFAIL", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "OVERALLWIDTHPASSFAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p4", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "OVERALLDIAMETERPASSFAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DIAMETERDIFERENCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "DIAMETERDIFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DIAMETERTOLERANCE", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "DIAMETERTOLERANCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TEMPRESISTANCEGRADING", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TEMPRESISTANCEGRADING", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TENSILESTRENGHT1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TENSILESTRENGHT1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TENSILESTRENGHT2", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TENSILESTRENGHT2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ELONGATION1", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ELONGATION1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ELONGATION2", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ELONGATION2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p7", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TENSILESTRENGHTAFTERAGE1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("p10", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TENSILESTRENGHTAFTERAGE2", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MEASUREID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, INFLATIONP"& _ 
                "RESSURE, MOLDDESIGN, RIMWIDTH, DOTSERIALNUMBER, DIAMETER, AVGSECTIONWIDTH, AVGOV"& _ 
                "ERALLWIDTH, MAXOVERALLWIDTH, SIZEFACTOR, MOUNTTIME, MOUNTTEMP, SERIALDATE, ENDTI"& _ 
                "ME, ACTSIZEFACTOR, CERTIFICATIONTYPEID, CERTIFICATENUMBER, CREATEDBY, CREATEDON,"& _ 
                " MODIFIEDBY, MODIFIEDON, STARTINFLATIONPRESSURE, ENDINFLATIONPRESSURE, ADJUSTMEN"& _ 
                "T, CIRCUNFERENCE, NOMINALDIAMETER, NOMINALWIDTH, NOMINALWIDTHPASSFAIL, NOMINALWI"& _ 
                "DTHDIFERENCE, NOMINALWIDTHTOLERANCE, MAXOVERALLDIAMETER, MINOVERALLDIAMETER, OVE"& _ 
                "RALLWIDTHPASSFAIL, OVERALLDIAMETERPASSFAIL, DIAMETERDIFERENCE, DIAMETERTOLERANCE"& _ 
                ", TEMPRESISTANCEGRADING, TENSILESTRENGHT1, TENSILESTRENGHT2, ELONGATION1, ELONGA"& _ 
                "TION2, TENSILESTRENGHTAFTERAGE1, TENSILESTRENGHTAFTERAGE2 FROM ICS.MEASUREHDR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.MEASUREHDRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.MEASUREHDRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.MEASUREHDRDataTable = New EmarkPassengerWithTR.MEASUREHDRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.MEASUREHDRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "MEASUREHDR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal MEASUREID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal INFLATIONPRESSURE As Global.System.Nullable(Of Decimal),  _
                    ByVal MOLDDESIGN As String,  _
                    ByVal RIMWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal DIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal AVGSECTIONWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal AVGOVERALLWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal MAXOVERALLWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal SIZEFACTOR As Global.System.Nullable(Of Decimal),  _
                    ByVal MOUNTTIME As Global.System.Nullable(Of Date),  _
                    ByVal MOUNTTEMP As Global.System.Nullable(Of Decimal),  _
                    ByVal SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal ENDTIME As Global.System.Nullable(Of Date),  _
                    ByVal ACTSIZEFACTOR As Global.System.Nullable(Of Decimal),  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal p1 As Global.System.Nullable(Of Decimal),  _
                    ByVal ENDINFLATIONPRESSURE As Global.System.Nullable(Of Decimal),  _
                    ByVal ADJUSTMENT As String,  _
                    ByVal CIRCUNFERENCE As Global.System.Nullable(Of Decimal),  _
                    ByVal NOMINALDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal NOMINALWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal NOMINALWIDTHPASSFAIL As String,  _
                    ByVal NOMINALWIDTHDIFERENCE As Global.System.Nullable(Of Decimal),  _
                    ByVal NOMINALWIDTHTOLERANCE As Global.System.Nullable(Of Decimal),  _
                    ByVal MAXOVERALLDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal MINOVERALLDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal OVERALLWIDTHPASSFAIL As String,  _
                    ByVal p4 As String,  _
                    ByVal DIAMETERDIFERENCE As Global.System.Nullable(Of Decimal),  _
                    ByVal DIAMETERTOLERANCE As Global.System.Nullable(Of Decimal),  _
                    ByVal TEMPRESISTANCEGRADING As Global.System.Nullable(Of Decimal),  _
                    ByVal TENSILESTRENGHT1 As Global.System.Nullable(Of Decimal),  _
                    ByVal TENSILESTRENGHT2 As Global.System.Nullable(Of Decimal),  _
                    ByVal ELONGATION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal ELONGATION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal p7 As Global.System.Nullable(Of Decimal),  _
                    ByVal p10 As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(MEASUREID,Decimal)
            If (PROJECTNUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PROJECTNUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PROJECTNUMBER,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(TIRENUMBER,Decimal)
            If (TESTSPEC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TESTSPEC")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TESTSPEC,String)
            End If
            If (COMPLETIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(COMPLETIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (INFLATIONPRESSURE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(INFLATIONPRESSURE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (MOLDDESIGN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MOLDDESIGN,String)
            End If
            If (RIMWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(RIMWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DOTSERIALNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DOTSERIALNUMBER,String)
            End If
            If (DIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (AVGSECTIONWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(AVGSECTIONWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (AVGOVERALLWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(AVGOVERALLWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (MAXOVERALLWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(MAXOVERALLWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SIZEFACTOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SIZEFACTOR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (MOUNTTIME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(MOUNTTIME.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (MOUNTTEMP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(MOUNTTEMP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (SERIALDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(SERIALDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ENDTIME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ENDTIME.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ACTSIZEFACTOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(ACTSIZEFACTOR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(CERTIFICATIONTYPEID,Decimal)
            If (CERTIFICATENUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CERTIFICATENUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CERTIFICATENUMBER,String)
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(MODIFIEDON,Date)
            If (p1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(p1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ENDINFLATIONPRESSURE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(ENDINFLATIONPRESSURE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (ADJUSTMENT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(ADJUSTMENT,String)
            End If
            If (CIRCUNFERENCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CIRCUNFERENCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (NOMINALDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(NOMINALDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (NOMINALWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(NOMINALWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (NOMINALWIDTHPASSFAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(NOMINALWIDTHPASSFAIL,String)
            End If
            If (NOMINALWIDTHDIFERENCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(NOMINALWIDTHDIFERENCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (NOMINALWIDTHTOLERANCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(NOMINALWIDTHTOLERANCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (MAXOVERALLDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(MAXOVERALLDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (MINOVERALLDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(MINOVERALLDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (OVERALLWIDTHPASSFAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(OVERALLWIDTHPASSFAIL,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(p4,String)
            End If
            If (DIAMETERDIFERENCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(DIAMETERDIFERENCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (DIAMETERTOLERANCE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(DIAMETERTOLERANCE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (TEMPRESISTANCEGRADING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(TEMPRESISTANCEGRADING.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (TENSILESTRENGHT1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(TENSILESTRENGHT1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (TENSILESTRENGHT2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(TENSILESTRENGHT2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ELONGATION1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(ELONGATION1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (ELONGATION2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(ELONGATION2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(p7.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(p10.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PLUNGERDTLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PLUNGERDTL"
            tableMapping.ColumnMappings.Add("PLUNGERID", "PLUNGERID")
            tableMapping.ColumnMappings.Add("BREAKINGENERGY", "BREAKINGENERGY")
            tableMapping.ColumnMappings.Add("ITERATION", "ITERATION")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""PLUNGERDTL"" (""PLUNGERID"", ""BREAKINGENERGY"", ""ITERATION"", ""CREA"& _ 
                "TEDBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"") VALUES (:PLUNGERID, :BREAKINGEN"& _ 
                "ERGY, :ITERATION, :CREATEDBY, :CREATEDON, :MODIFIEDBY, :MODIFIEDON)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PLUNGERID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PLUNGERID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BREAKINGENERGY", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "BREAKINGENERGY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ITERATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ITERATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PLUNGERID, BREAKINGENERGY, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, MO"& _ 
                "DIFIEDON FROM ICS.PLUNGERDTL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.PLUNGERDTLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.PLUNGERDTLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.PLUNGERDTLDataTable = New EmarkPassengerWithTR.PLUNGERDTLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.PLUNGERDTLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "PLUNGERDTL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PLUNGERID As Decimal, ByVal BREAKINGENERGY As Global.System.Nullable(Of Decimal), ByVal ITERATION As Global.System.Nullable(Of Decimal), ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(PLUNGERID,Decimal)
            If (BREAKINGENERGY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(BREAKINGENERGY.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ITERATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ITERATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(MODIFIEDON,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PLUNGERHDRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PLUNGERHDR"
            tableMapping.ColumnMappings.Add("PLUNGERID", "PLUNGERID")
            tableMapping.ColumnMappings.Add("PROJECTNUMBER", "PROJECTNUMBER")
            tableMapping.ColumnMappings.Add("TIRENUMBER", "TIRENUMBER")
            tableMapping.ColumnMappings.Add("TESTSPEC", "TESTSPEC")
            tableMapping.ColumnMappings.Add("COMPLETIONDATE", "COMPLETIONDATE")
            tableMapping.ColumnMappings.Add("DOTSERIALNUMBER", "DOTSERIALNUMBER")
            tableMapping.ColumnMappings.Add("AVGBREAKINGENERGY", "AVGBREAKINGENERGY")
            tableMapping.ColumnMappings.Add("PASSYN", "PASSYN")
            tableMapping.ColumnMappings.Add("CERTIFICATIONTYPEID", "CERTIFICATIONTYPEID")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("SERIALDATE", "SERIALDATE")
            tableMapping.ColumnMappings.Add("MINPLUNGER", "MINPLUNGER")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""PLUNGERHDR"" (""PLUNGERID"", ""PROJECTNUMBER"", ""TIRENUMBER"", ""TEST"& _ 
                "SPEC"", ""COMPLETIONDATE"", ""DOTSERIALNUMBER"", ""AVGBREAKINGENERGY"", ""PASSYN"", ""CERT"& _ 
                "IFICATIONTYPEID"", ""CERTIFICATENUMBER"", ""SERIALDATE"", ""MINPLUNGER"", ""CREATEDON"", "& _ 
                """CREATEDBY"", ""MODIFIEDBY"", ""MODIFIEDON"") VALUES (:PLUNGERID, :PROJECTNUMBER, :TI"& _ 
                "RENUMBER, :TESTSPEC, :COMPLETIONDATE, :DOTSERIALNUMBER, :AVGBREAKINGENERGY, :PAS"& _ 
                "SYN, :CERTIFICATIONTYPEID, :CERTIFICATENUMBER, :SERIALDATE, :MINPLUNGER, :CREATE"& _ 
                "DON, :CREATEDBY, :MODIFIEDBY, :MODIFIEDON)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PLUNGERID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "PLUNGERID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PROJECTNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PROJECTNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIRENUMBER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TESTSPEC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TESTSPEC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("COMPLETIONDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "COMPLETIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DOTSERIALNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DOTSERIALNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("AVGBREAKINGENERGY", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "AVGBREAKINGENERGY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PASSYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PASSYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATIONTYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATIONTYPEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIALDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MINPLUNGER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MINPLUNGER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PLUNGERID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIALN"& _ 
                "UMBER, AVGBREAKINGENERGY, PASSYN, CERTIFICATIONTYPEID, CERTIFICATENUMBER, SERIAL"& _ 
                "DATE, MINPLUNGER, CREATEDON, CREATEDBY, MODIFIEDBY, MODIFIEDON FROM ICS.PLUNGERH"& _ 
                "DR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.PLUNGERHDRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.PLUNGERHDRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.PLUNGERHDRDataTable = New EmarkPassengerWithTR.PLUNGERHDRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.PLUNGERHDRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "PLUNGERHDR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PLUNGERID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Global.System.Nullable(Of Decimal),  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal AVGBREAKINGENERGY As Global.System.Nullable(Of Decimal),  _
                    ByVal PASSYN As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal MINPLUNGER As Global.System.Nullable(Of Decimal),  _
                    ByVal CREATEDON As String,  _
                    ByVal CREATEDBY As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(PLUNGERID,Decimal)
            If (PROJECTNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PROJECTNUMBER,String)
            End If
            If (TIRENUMBER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TIRENUMBER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TESTSPEC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TESTSPEC,String)
            End If
            If (COMPLETIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(COMPLETIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DOTSERIALNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DOTSERIALNUMBER,String)
            End If
            If (AVGBREAKINGENERGY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(AVGBREAKINGENERGY.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PASSYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PASSYN,String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(CERTIFICATIONTYPEID,Decimal)
            If (CERTIFICATENUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CERTIFICATENUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CERTIFICATENUMBER,String)
            End If
            If (SERIALDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SERIALDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MINPLUNGER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(MINPLUNGER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CREATEDON Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDON")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CREATEDON,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(CREATEDBY,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(MODIFIEDON,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TREADWEARHDRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TREADWEARHDR"
            tableMapping.ColumnMappings.Add("TREADWEARID", "TREADWEARID")
            tableMapping.ColumnMappings.Add("PROJECTNUMBER", "PROJECTNUMBER")
            tableMapping.ColumnMappings.Add("TIRENUMBER", "TIRENUMBER")
            tableMapping.ColumnMappings.Add("TESTSPEC", "TESTSPEC")
            tableMapping.ColumnMappings.Add("COMPLETIONDATE", "COMPLETIONDATE")
            tableMapping.ColumnMappings.Add("DOTSERIALNUMBER", "DOTSERIALNUMBER")
            tableMapping.ColumnMappings.Add("LOWESTWEARBAR", "LOWESTWEARBAR")
            tableMapping.ColumnMappings.Add("PASSYN", "PASSYN")
            tableMapping.ColumnMappings.Add("SERIALDATE", "SERIALDATE")
            tableMapping.ColumnMappings.Add("CERTIFICATIONTYPEID", "CERTIFICATIONTYPEID")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            tableMapping.ColumnMappings.Add("INDICATORSREQUIREMENT", "INDICATORSREQUIREMENT")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""TREADWEARHDR"" (""TREADWEARID"", ""PROJECTNUMBER"", ""TIRENUMBER"", """& _ 
                "TESTSPEC"", ""COMPLETIONDATE"", ""DOTSERIALNUMBER"", ""LOWESTWEARBAR"", ""PASSYN"", ""SERI"& _ 
                "ALDATE"", ""CERTIFICATIONTYPEID"", ""CERTIFICATENUMBER"", ""CREATEDBY"", ""CREATEDON"", """& _ 
                "MODIFIEDBY"", ""MODIFIEDON"", ""INDICATORSREQUIREMENT"") VALUES (:TREADWEARID, :PROJE"& _ 
                "CTNUMBER, :TIRENUMBER, :TESTSPEC, :COMPLETIONDATE, :DOTSERIALNUMBER, :LOWESTWEAR"& _ 
                "BAR, :PASSYN, :SERIALDATE, :CERTIFICATIONTYPEID, :CERTIFICATENUMBER, :CREATEDBY,"& _ 
                " :CREATEDON, :MODIFIEDBY, :MODIFIEDON, :INDICATORSREQUIREMENT)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TREADWEARID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TREADWEARID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PROJECTNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PROJECTNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIRENUMBER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TESTSPEC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TESTSPEC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("COMPLETIONDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "COMPLETIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DOTSERIALNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DOTSERIALNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("LOWESTWEARBAR", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "LOWESTWEARBAR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PASSYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PASSYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIALDATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATIONTYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATIONTYPEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CERTIFICATENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CERTIFICATENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("INDICATORSREQUIREMENT", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "INDICATORSREQUIREMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TREADWEARID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIA"& _ 
                "LNUMBER, LOWESTWEARBAR, PASSYN, SERIALDATE, CERTIFICATIONTYPEID, CERTIFICATENUMB"& _ 
                "ER, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, INDICATORSREQUIREMENT FROM ICS"& _ 
                ".TREADWEARHDR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.TREADWEARHDRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.TREADWEARHDRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.TREADWEARHDRDataTable = New EmarkPassengerWithTR.TREADWEARHDRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.TREADWEARHDRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "TREADWEARHDR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal TREADWEARID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal LOWESTWEARBAR As Global.System.Nullable(Of Decimal),  _
                    ByVal PASSYN As String,  _
                    ByVal SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal INDICATORSREQUIREMENT As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(TREADWEARID,Decimal)
            If (PROJECTNUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PROJECTNUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PROJECTNUMBER,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(TIRENUMBER,Decimal)
            If (TESTSPEC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TESTSPEC")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TESTSPEC,String)
            End If
            If (COMPLETIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(COMPLETIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DOTSERIALNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DOTSERIALNUMBER,String)
            End If
            If (LOWESTWEARBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(LOWESTWEARBAR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PASSYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PASSYN,String)
            End If
            If (SERIALDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SERIALDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(CERTIFICATIONTYPEID,Decimal)
            If (CERTIFICATENUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CERTIFICATENUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CERTIFICATENUMBER,String)
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(MODIFIEDON,Date)
            If (INDICATORSREQUIREMENT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(INDICATORSREQUIREMENT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TREADWEARDTLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TREADWEARDTL"
            tableMapping.ColumnMappings.Add("TREADWEARID", "TREADWEARID")
            tableMapping.ColumnMappings.Add("WEARBARHEIGHT", "WEARBARHEIGHT")
            tableMapping.ColumnMappings.Add("ITERATION", "ITERATION")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""TREADWEARDTL"" (""TREADWEARID"", ""WEARBARHEIGHT"", ""ITERATION"", ""C"& _ 
                "REATEDBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"") VALUES (:TREADWEARID, :WEARB"& _ 
                "ARHEIGHT, :ITERATION, :CREATEDBY, :CREATEDON, :MODIFIEDBY, :MODIFIEDON)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TREADWEARID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TREADWEARID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("WEARBARHEIGHT", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "WEARBARHEIGHT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ITERATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ITERATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TREADWEARID, WEARBARHEIGHT, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, M"& _ 
                "ODIFIEDON FROM ICS.TREADWEARDTL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.TREADWEARDTLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.TREADWEARDTLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.TREADWEARDTLDataTable = New EmarkPassengerWithTR.TREADWEARDTLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.TREADWEARDTLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "TREADWEARDTL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal TREADWEARID As Decimal, ByVal WEARBARHEIGHT As Global.System.Nullable(Of Decimal), ByVal ITERATION As Global.System.Nullable(Of Decimal), ByVal CREATEDBY As String, ByVal CREATEDON As Global.System.Nullable(Of Date), ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(TREADWEARID,Decimal)
            If (WEARBARHEIGHT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(WEARBARHEIGHT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ITERATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ITERATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CREATEDBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CREATEDBY,String)
            End If
            If (CREATEDON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CREATEDON.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (MODIFIEDBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MODIFIEDBY,String)
            End If
            If (MODIFIEDON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MODIFIEDON.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPEEDTESTDETAILTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPEEDTESTDETAIL"
            tableMapping.ColumnMappings.Add("ITERATION", "ITERATION")
            tableMapping.ColumnMappings.Add("TIME", "TIME")
            tableMapping.ColumnMappings.Add("SPEED", "SPEED")
            tableMapping.ColumnMappings.Add("HIGHSPEEDID", "HIGHSPEEDID")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""SPEEDTESTDETAIL"" (""ITERATION"", ""TIME"", ""SPEED"", ""HIGHSPEEDID"","& _ 
                " ""CREATEDBY"", ""CREATEDON"", ""MODIFIEDBY"", ""MODIFIEDON"") VALUES (:ITERATION, :TIME"& _ 
                ", :SPEED, :HIGHSPEEDID, :CREATEDBY, :CREATEDON, :MODIFIEDBY, :MODIFIEDON)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ITERATION", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "ITERATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIME", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "TIME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPEED", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SPEED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("HIGHSPEEDID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "HIGHSPEEDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ITERATION, ""TIME"", SPEED, HIGHSPEEDID, CREATEDBY, CREATEDON, MODIFIEDBY, M"& _ 
                "ODIFIEDON FROM ICS.SPEEDTESTDETAIL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.SPEEDTESTDETAILDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.SPEEDTESTDETAILDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.SPEEDTESTDETAILDataTable = New EmarkPassengerWithTR.SPEEDTESTDETAILDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkPassengerWithTR.SPEEDTESTDETAILDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkPassengerWithTR) As Integer
            Return Me.Adapter.Update(dataSet, "SPEEDTESTDETAIL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ITERATION As Global.System.Nullable(Of Decimal), ByVal TIME As Global.System.Nullable(Of Date), ByVal SPEED As Global.System.Nullable(Of Decimal), ByVal HIGHSPEEDID As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As Integer
            If (ITERATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ITERATION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (TIME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TIME.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SPEED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SPEED.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(HIGHSPEEDID,Decimal)
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(MODIFIEDON,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BRAND_VIEWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BRAND_VIEW"
            tableMapping.ColumnMappings.Add("BRANDCODE", "BRANDCODE")
            tableMapping.ColumnMappings.Add("BRANDNAME", "BRANDNAME")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("EXTENSION_EN", "EXTENSION_EN")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT BRANDCODE, BRANDNAME, CERTIFICATENUMBER, EXTENSION_EN FROM ICS.BRAND_VIEW"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.BRAND_VIEWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.BRAND_VIEWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.BRAND_VIEWDataTable = New EmarkPassengerWithTR.BRAND_VIEWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DEFAULTVALUES_VIEWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DEFAULTVALUES_VIEW"
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CERTIFICATENUMBER FROM DEFAULTVALUES_VIEW"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkPassengerWithTR.DEFAULTVALUES_VIEWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkPassengerWithTR.DEFAULTVALUES_VIEWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkPassengerWithTR.DEFAULTVALUES_VIEWDataTable = New EmarkPassengerWithTR.DEFAULTVALUES_VIEWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
