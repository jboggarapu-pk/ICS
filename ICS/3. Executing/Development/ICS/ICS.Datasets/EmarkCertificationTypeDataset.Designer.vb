'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("EmarkCertificationTypeDataset"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class EmarkCertificationTypeDataset
    Inherits Global.System.Data.DataSet
    
    Private tablePRODUCT As PRODUCTDataTable
    
    Private tableEMARKCERTIFICATIONREPORT_VIEW As EMARKCERTIFICATIONREPORT_VIEWDataTable
    
    Private relationEMARKCERTIFICATIONREPORT_VIEW_PRODUCT As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PRODUCT")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTDataTable(ds.Tables("PRODUCT")))
            End If
            If (Not (ds.Tables("EMARKCERTIFICATIONREPORT_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New EMARKCERTIFICATIONREPORT_VIEWDataTable(ds.Tables("EMARKCERTIFICATIONREPORT_VIEW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRODUCT() As PRODUCTDataTable
        Get
            Return Me.tablePRODUCT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EMARKCERTIFICATIONREPORT_VIEW() As EMARKCERTIFICATIONREPORT_VIEWDataTable
        Get
            Return Me.tableEMARKCERTIFICATIONREPORT_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As EmarkCertificationTypeDataset = CType(MyBase.Clone,EmarkCertificationTypeDataset)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("PRODUCT")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTDataTable(ds.Tables("PRODUCT")))
            End If
            If (Not (ds.Tables("EMARKCERTIFICATIONREPORT_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New EMARKCERTIFICATIONREPORT_VIEWDataTable(ds.Tables("EMARKCERTIFICATIONREPORT_VIEW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePRODUCT = CType(MyBase.Tables("PRODUCT"),PRODUCTDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRODUCT) Is Nothing) Then
                Me.tablePRODUCT.InitVars
            End If
        End If
        Me.tableEMARKCERTIFICATIONREPORT_VIEW = CType(MyBase.Tables("EMARKCERTIFICATIONREPORT_VIEW"),EMARKCERTIFICATIONREPORT_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEMARKCERTIFICATIONREPORT_VIEW) Is Nothing) Then
                Me.tableEMARKCERTIFICATIONREPORT_VIEW.InitVars
            End If
        End If
        Me.relationEMARKCERTIFICATIONREPORT_VIEW_PRODUCT = Me.Relations("EMARKCERTIFICATIONREPORT_VIEW_PRODUCT")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "EmarkCertificationTypeDataset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/EmarkCertificationTypeDataset.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePRODUCT = New PRODUCTDataTable()
        MyBase.Tables.Add(Me.tablePRODUCT)
        Me.tableEMARKCERTIFICATIONREPORT_VIEW = New EMARKCERTIFICATIONREPORT_VIEWDataTable()
        MyBase.Tables.Add(Me.tableEMARKCERTIFICATIONREPORT_VIEW)
        Me.relationEMARKCERTIFICATIONREPORT_VIEW_PRODUCT = New Global.System.Data.DataRelation("EMARKCERTIFICATIONREPORT_VIEW_PRODUCT", New Global.System.Data.DataColumn() {Me.tableEMARKCERTIFICATIONREPORT_VIEW.SKUIDColumn}, New Global.System.Data.DataColumn() {Me.tablePRODUCT.SKUIDColumn}, false)
        Me.Relations.Add(Me.relationEMARKCERTIFICATIONREPORT_VIEW_PRODUCT)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePRODUCT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEMARKCERTIFICATIONREPORT_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As EmarkCertificationTypeDataset = New EmarkCertificationTypeDataset()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PRODUCTRowChangeEventHandler(ByVal sender As Object, ByVal e As PRODUCTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub EMARKCERTIFICATIONREPORT_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As EMARKCERTIFICATIONREPORT_VIEWRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRODUCTDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSKUID As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnBRANDCODE As Global.System.Data.DataColumn
        
        Private columnTIRETYPEID As Global.System.Data.DataColumn
        
        Private columnNPRID As Global.System.Data.DataColumn
        
        Private columnSIZESTAMP As Global.System.Data.DataColumn
        
        Private columnDISCONTINUEDDATE As Global.System.Data.DataColumn
        
        Private columnSPECNUMBER As Global.System.Data.DataColumn
        
        Private columnSPEEDRATING As Global.System.Data.DataColumn
        
        Private columnSINGLOADINDEX As Global.System.Data.DataColumn
        
        Private columnDUALLOADINDEX As Global.System.Data.DataColumn
        
        Private columnBELTEDRADIALYN As Global.System.Data.DataColumn
        
        Private columnTUBELESSYN As Global.System.Data.DataColumn
        
        Private columnREINFORCEDYN As Global.System.Data.DataColumn
        
        Private columnEXTRALOADYN As Global.System.Data.DataColumn
        
        Private columnMEASURINGRIM As Global.System.Data.DataColumn
        
        Private columnUTQGTREADWEAR As Global.System.Data.DataColumn
        
        Private columnUTQGTRACTION As Global.System.Data.DataColumn
        
        Private columnUTQGTEMP As Global.System.Data.DataColumn
        
        Private columnMUDSNOWYN As Global.System.Data.DataColumn
        
        Private columnRIMDIAMETER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnBRANDDESC As Global.System.Data.DataColumn
        
        Private columnLOADRANGE As Global.System.Data.DataColumn
        
        Private columnMEARIMWIDTH As Global.System.Data.DataColumn
        
        Private columnREGROOVABLEIND As Global.System.Data.DataColumn
        
        Private columnPLANTPRODUCED As Global.System.Data.DataColumn
        
        Private columnMOSTRECENTTESTDATE As Global.System.Data.DataColumn
        
        Private columnIMARK As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnINFORMENUMBER As Global.System.Data.DataColumn
        
        Private columnFECHADATE As Global.System.Data.DataColumn
        
        Private columnTREADPATTERN As Global.System.Data.DataColumn
        
        Private columnSPECIALPROTECTIVEBAND As Global.System.Data.DataColumn
        
        Private columnNOMINALTIREWIDTH As Global.System.Data.DataColumn
        
        Private columnASPECTRADIO As Global.System.Data.DataColumn
        
        Private columnTREADWEARINDICATORS As Global.System.Data.DataColumn
        
        Private columnNAMEOFMANUFACTURER As Global.System.Data.DataColumn
        
        Private columnFAMILY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRODUCT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRETYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRETYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NPRIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNPRID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIZESTAMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZESTAMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCONTINUEDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCONTINUEDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDRATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDRATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SINGLOADINDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSINGLOADINDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DUALLOADINDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDUALLOADINDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BELTEDRADIALYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBELTEDRADIALYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TUBELESSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTUBELESSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REINFORCEDYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREINFORCEDYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTRALOADYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRALOADYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEASURINGRIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEASURINGRIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTREADWEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTREADWEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTRACTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTRACTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MUDSNOWYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUDSNOWYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADRANGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOADRANGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEARIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEARIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REGROOVABLEINDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGROOVABLEIND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLANTPRODUCEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANTPRODUCED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOSTRECENTTESTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOSTRECENTTESTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFORMENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFORMENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHADATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHADATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADPATTERNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADPATTERN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIALPROTECTIVEBANDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIALPROTECTIVEBAND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALTIREWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALTIREWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASPECTRADIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASPECTRADIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADWEARINDICATORSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADWEARINDICATORS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMEOFMANUFACTURERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMEOFMANUFACTURER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAMILYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRODUCTRow
            Get
                Return CType(Me.Rows(index),PRODUCTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTRowChanging As PRODUCTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTRowChanged As PRODUCTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTRowDeleting As PRODUCTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTRowDeleted As PRODUCTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPRODUCTRow(ByVal row As PRODUCTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPRODUCTRow( _
                    ByVal parentEMARKCERTIFICATIONREPORT_VIEWRowByEMARKCERTIFICATIONREPORT_VIEW_PRODUCT As EMARKCERTIFICATIONREPORT_VIEWRow,  _
                    ByVal SKU As String,  _
                    ByVal BRANDCODE As String,  _
                    ByVal TIRETYPEID As Decimal,  _
                    ByVal NPRID As Decimal,  _
                    ByVal SIZESTAMP As String,  _
                    ByVal DISCONTINUEDDATE As Date,  _
                    ByVal SPECNUMBER As String,  _
                    ByVal SPEEDRATING As String,  _
                    ByVal SINGLOADINDEX As String,  _
                    ByVal DUALLOADINDEX As String,  _
                    ByVal BELTEDRADIALYN As String,  _
                    ByVal TUBELESSYN As String,  _
                    ByVal REINFORCEDYN As String,  _
                    ByVal EXTRALOADYN As String,  _
                    ByVal MEASURINGRIM As String,  _
                    ByVal UTQGTREADWEAR As String,  _
                    ByVal UTQGTRACTION As String,  _
                    ByVal UTQGTEMP As String,  _
                    ByVal MUDSNOWYN As String,  _
                    ByVal RIMDIAMETER As Decimal,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal BRANDDESC As String,  _
                    ByVal LOADRANGE As String,  _
                    ByVal MEARIMWIDTH As Decimal,  _
                    ByVal REGROOVABLEIND As String,  _
                    ByVal PLANTPRODUCED As String,  _
                    ByVal MOSTRECENTTESTDATE As Date,  _
                    ByVal IMARK As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal INFORMENUMBER As String,  _
                    ByVal FECHADATE As Date,  _
                    ByVal TREADPATTERN As String,  _
                    ByVal SPECIALPROTECTIVEBAND As String,  _
                    ByVal NOMINALTIREWIDTH As String,  _
                    ByVal ASPECTRADIO As String,  _
                    ByVal TREADWEARINDICATORS As String,  _
                    ByVal NAMEOFMANUFACTURER As String,  _
                    ByVal FAMILY As String) As PRODUCTRow
            Dim rowPRODUCTRow As PRODUCTRow = CType(Me.NewRow,PRODUCTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SKU, BRANDCODE, TIRETYPEID, NPRID, SIZESTAMP, DISCONTINUEDDATE, SPECNUMBER, SPEEDRATING, SINGLOADINDEX, DUALLOADINDEX, BELTEDRADIALYN, TUBELESSYN, REINFORCEDYN, EXTRALOADYN, MEASURINGRIM, UTQGTREADWEAR, UTQGTRACTION, UTQGTEMP, MUDSNOWYN, RIMDIAMETER, SERIALDATE, BRANDDESC, LOADRANGE, MEARIMWIDTH, REGROOVABLEIND, PLANTPRODUCED, MOSTRECENTTESTDATE, IMARK, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, INFORMENUMBER, FECHADATE, TREADPATTERN, SPECIALPROTECTIVEBAND, NOMINALTIREWIDTH, ASPECTRADIO, TREADWEARINDICATORS, NAMEOFMANUFACTURER, FAMILY}
            If (Not (parentEMARKCERTIFICATIONREPORT_VIEWRowByEMARKCERTIFICATIONREPORT_VIEW_PRODUCT) Is Nothing) Then
                columnValuesArray(0) = parentEMARKCERTIFICATIONREPORT_VIEWRowByEMARKCERTIFICATIONREPORT_VIEW_PRODUCT(0)
            End If
            rowPRODUCTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRODUCTRow)
            Return rowPRODUCTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySKUID(ByVal SKUID As Decimal) As PRODUCTRow
            Return CType(Me.Rows.Find(New Object() {SKUID}),PRODUCTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRODUCTDataTable = CType(MyBase.Clone,PRODUCTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRODUCTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSKUID = MyBase.Columns("SKUID")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnBRANDCODE = MyBase.Columns("BRANDCODE")
            Me.columnTIRETYPEID = MyBase.Columns("TIRETYPEID")
            Me.columnNPRID = MyBase.Columns("NPRID")
            Me.columnSIZESTAMP = MyBase.Columns("SIZESTAMP")
            Me.columnDISCONTINUEDDATE = MyBase.Columns("DISCONTINUEDDATE")
            Me.columnSPECNUMBER = MyBase.Columns("SPECNUMBER")
            Me.columnSPEEDRATING = MyBase.Columns("SPEEDRATING")
            Me.columnSINGLOADINDEX = MyBase.Columns("SINGLOADINDEX")
            Me.columnDUALLOADINDEX = MyBase.Columns("DUALLOADINDEX")
            Me.columnBELTEDRADIALYN = MyBase.Columns("BELTEDRADIALYN")
            Me.columnTUBELESSYN = MyBase.Columns("TUBELESSYN")
            Me.columnREINFORCEDYN = MyBase.Columns("REINFORCEDYN")
            Me.columnEXTRALOADYN = MyBase.Columns("EXTRALOADYN")
            Me.columnMEASURINGRIM = MyBase.Columns("MEASURINGRIM")
            Me.columnUTQGTREADWEAR = MyBase.Columns("UTQGTREADWEAR")
            Me.columnUTQGTRACTION = MyBase.Columns("UTQGTRACTION")
            Me.columnUTQGTEMP = MyBase.Columns("UTQGTEMP")
            Me.columnMUDSNOWYN = MyBase.Columns("MUDSNOWYN")
            Me.columnRIMDIAMETER = MyBase.Columns("RIMDIAMETER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnBRANDDESC = MyBase.Columns("BRANDDESC")
            Me.columnLOADRANGE = MyBase.Columns("LOADRANGE")
            Me.columnMEARIMWIDTH = MyBase.Columns("MEARIMWIDTH")
            Me.columnREGROOVABLEIND = MyBase.Columns("REGROOVABLEIND")
            Me.columnPLANTPRODUCED = MyBase.Columns("PLANTPRODUCED")
            Me.columnMOSTRECENTTESTDATE = MyBase.Columns("MOSTRECENTTESTDATE")
            Me.columnIMARK = MyBase.Columns("IMARK")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnINFORMENUMBER = MyBase.Columns("INFORMENUMBER")
            Me.columnFECHADATE = MyBase.Columns("FECHADATE")
            Me.columnTREADPATTERN = MyBase.Columns("TREADPATTERN")
            Me.columnSPECIALPROTECTIVEBAND = MyBase.Columns("SPECIALPROTECTIVEBAND")
            Me.columnNOMINALTIREWIDTH = MyBase.Columns("NOMINALTIREWIDTH")
            Me.columnASPECTRADIO = MyBase.Columns("ASPECTRADIO")
            Me.columnTREADWEARINDICATORS = MyBase.Columns("TREADWEARINDICATORS")
            Me.columnNAMEOFMANUFACTURER = MyBase.Columns("NAMEOFMANUFACTURER")
            Me.columnFAMILY = MyBase.Columns("FAMILY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSKUID = New Global.System.Data.DataColumn("SKUID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKUID)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnBRANDCODE = New Global.System.Data.DataColumn("BRANDCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDCODE)
            Me.columnTIRETYPEID = New Global.System.Data.DataColumn("TIRETYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRETYPEID)
            Me.columnNPRID = New Global.System.Data.DataColumn("NPRID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNPRID)
            Me.columnSIZESTAMP = New Global.System.Data.DataColumn("SIZESTAMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZESTAMP)
            Me.columnDISCONTINUEDDATE = New Global.System.Data.DataColumn("DISCONTINUEDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCONTINUEDDATE)
            Me.columnSPECNUMBER = New Global.System.Data.DataColumn("SPECNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECNUMBER)
            Me.columnSPEEDRATING = New Global.System.Data.DataColumn("SPEEDRATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDRATING)
            Me.columnSINGLOADINDEX = New Global.System.Data.DataColumn("SINGLOADINDEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSINGLOADINDEX)
            Me.columnDUALLOADINDEX = New Global.System.Data.DataColumn("DUALLOADINDEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDUALLOADINDEX)
            Me.columnBELTEDRADIALYN = New Global.System.Data.DataColumn("BELTEDRADIALYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBELTEDRADIALYN)
            Me.columnTUBELESSYN = New Global.System.Data.DataColumn("TUBELESSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTUBELESSYN)
            Me.columnREINFORCEDYN = New Global.System.Data.DataColumn("REINFORCEDYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREINFORCEDYN)
            Me.columnEXTRALOADYN = New Global.System.Data.DataColumn("EXTRALOADYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRALOADYN)
            Me.columnMEASURINGRIM = New Global.System.Data.DataColumn("MEASURINGRIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEASURINGRIM)
            Me.columnUTQGTREADWEAR = New Global.System.Data.DataColumn("UTQGTREADWEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTREADWEAR)
            Me.columnUTQGTRACTION = New Global.System.Data.DataColumn("UTQGTRACTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTRACTION)
            Me.columnUTQGTEMP = New Global.System.Data.DataColumn("UTQGTEMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTEMP)
            Me.columnMUDSNOWYN = New Global.System.Data.DataColumn("MUDSNOWYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUDSNOWYN)
            Me.columnRIMDIAMETER = New Global.System.Data.DataColumn("RIMDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMDIAMETER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnBRANDDESC = New Global.System.Data.DataColumn("BRANDDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDDESC)
            Me.columnLOADRANGE = New Global.System.Data.DataColumn("LOADRANGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOADRANGE)
            Me.columnMEARIMWIDTH = New Global.System.Data.DataColumn("MEARIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEARIMWIDTH)
            Me.columnREGROOVABLEIND = New Global.System.Data.DataColumn("REGROOVABLEIND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGROOVABLEIND)
            Me.columnPLANTPRODUCED = New Global.System.Data.DataColumn("PLANTPRODUCED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANTPRODUCED)
            Me.columnMOSTRECENTTESTDATE = New Global.System.Data.DataColumn("MOSTRECENTTESTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOSTRECENTTESTDATE)
            Me.columnIMARK = New Global.System.Data.DataColumn("IMARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMARK)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnINFORMENUMBER = New Global.System.Data.DataColumn("INFORMENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFORMENUMBER)
            Me.columnFECHADATE = New Global.System.Data.DataColumn("FECHADATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHADATE)
            Me.columnTREADPATTERN = New Global.System.Data.DataColumn("TREADPATTERN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADPATTERN)
            Me.columnSPECIALPROTECTIVEBAND = New Global.System.Data.DataColumn("SPECIALPROTECTIVEBAND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIALPROTECTIVEBAND)
            Me.columnNOMINALTIREWIDTH = New Global.System.Data.DataColumn("NOMINALTIREWIDTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALTIREWIDTH)
            Me.columnASPECTRADIO = New Global.System.Data.DataColumn("ASPECTRADIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASPECTRADIO)
            Me.columnTREADWEARINDICATORS = New Global.System.Data.DataColumn("TREADWEARINDICATORS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADWEARINDICATORS)
            Me.columnNAMEOFMANUFACTURER = New Global.System.Data.DataColumn("NAMEOFMANUFACTURER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMEOFMANUFACTURER)
            Me.columnFAMILY = New Global.System.Data.DataColumn("FAMILY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILY)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSKUID}, true))
            Me.columnSKUID.AllowDBNull = false
            Me.columnSKUID.Unique = true
            Me.columnSKU.AllowDBNull = false
            Me.columnSKU.MaxLength = 30
            Me.columnBRANDCODE.MaxLength = 10
            Me.columnSIZESTAMP.AllowDBNull = false
            Me.columnSIZESTAMP.MaxLength = 20
            Me.columnSPECNUMBER.MaxLength = 30
            Me.columnSPEEDRATING.MaxLength = 40
            Me.columnSINGLOADINDEX.MaxLength = 40
            Me.columnDUALLOADINDEX.MaxLength = 40
            Me.columnBELTEDRADIALYN.MaxLength = 4
            Me.columnTUBELESSYN.MaxLength = 4
            Me.columnREINFORCEDYN.MaxLength = 4
            Me.columnEXTRALOADYN.MaxLength = 4
            Me.columnMEASURINGRIM.MaxLength = 40
            Me.columnUTQGTREADWEAR.MaxLength = 40
            Me.columnUTQGTRACTION.MaxLength = 40
            Me.columnUTQGTEMP.MaxLength = 40
            Me.columnMUDSNOWYN.MaxLength = 4
            Me.columnBRANDDESC.MaxLength = 400
            Me.columnLOADRANGE.MaxLength = 120
            Me.columnREGROOVABLEIND.MaxLength = 120
            Me.columnPLANTPRODUCED.MaxLength = 200
            Me.columnIMARK.MaxLength = 120
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 50
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 50
            Me.columnMODIFIEDON.AllowDBNull = false
            Me.columnINFORMENUMBER.MaxLength = 50
            Me.columnTREADPATTERN.MaxLength = 50
            Me.columnSPECIALPROTECTIVEBAND.MaxLength = 50
            Me.columnNOMINALTIREWIDTH.MaxLength = 50
            Me.columnASPECTRADIO.MaxLength = 50
            Me.columnTREADWEARINDICATORS.MaxLength = 50
            Me.columnNAMEOFMANUFACTURER.MaxLength = 100
            Me.columnFAMILY.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPRODUCTRow() As PRODUCTRow
            Return CType(Me.NewRow,PRODUCTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRODUCTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRODUCTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRODUCTRowChangedEvent) Is Nothing) Then
                RaiseEvent PRODUCTRowChanged(Me, New PRODUCTRowChangeEvent(CType(e.Row,PRODUCTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRODUCTRowChangingEvent) Is Nothing) Then
                RaiseEvent PRODUCTRowChanging(Me, New PRODUCTRowChangeEvent(CType(e.Row,PRODUCTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRODUCTRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRODUCTRowDeleted(Me, New PRODUCTRowChangeEvent(CType(e.Row,PRODUCTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRODUCTRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRODUCTRowDeleting(Me, New PRODUCTRowChangeEvent(CType(e.Row,PRODUCTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePRODUCTRow(ByVal row As PRODUCTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkCertificationTypeDataset = New EmarkCertificationTypeDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRODUCTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EMARKCERTIFICATIONREPORT_VIEWDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSKUID As Global.System.Data.DataColumn
        
        Private columnACTIVESTATUS As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnDATESUBMITED As Global.System.Data.DataColumn
        
        Private columnDATEASSIGNED_EGI As Global.System.Data.DataColumn
        
        Private columnDATEAPPROVED_CEGI As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALREQUIRED_EI As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALNUMBER_EI As Global.System.Data.DataColumn
        
        Private columnJOBREPORTNUMBER_CEN As Global.System.Data.DataColumn
        
        Private columnEXTENSION_EN As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALEXTENSION_EN As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALMOLDSTAMPING_E As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALDATEASSIGNED_E As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALDATESUBMITTED_E As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALDATEAPPROVED_E As Global.System.Data.DataColumn
        
        Private columnWHEELTESTREFERENCE As Global.System.Data.DataColumn
        
        Private columnNOISETESTREFERENCE As Global.System.Data.DataColumn
        
        Private columnWGTESTREFERENCE As Global.System.Data.DataColumn
        
        Private columnRRTESTREFERENCE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EMARKCERTIFICATIONREPORT_VIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTIVESTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTIVESTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATESUBMITEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATESUBMITED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEASSIGNED_EGIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEASSIGNED_EGI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEAPPROVED_CEGIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEAPPROVED_CEGI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALREQUIRED_EIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALREQUIRED_EI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALNUMBER_EIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALNUMBER_EI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOBREPORTNUMBER_CENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOBREPORTNUMBER_CEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALEXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALMOLDSTAMPING_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALMOLDSTAMPING_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALDATEASSIGNED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALDATEASSIGNED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALDATESUBMITTED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALDATESUBMITTED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALDATEAPPROVED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALDATEAPPROVED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELTESTREFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELTESTREFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOISETESTREFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOISETESTREFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WGTESTREFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWGTESTREFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRTESTREFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRTESTREFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EMARKCERTIFICATIONREPORT_VIEWRow
            Get
                Return CType(Me.Rows(index),EMARKCERTIFICATIONREPORT_VIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EMARKCERTIFICATIONREPORT_VIEWRowChanging As EMARKCERTIFICATIONREPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EMARKCERTIFICATIONREPORT_VIEWRowChanged As EMARKCERTIFICATIONREPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EMARKCERTIFICATIONREPORT_VIEWRowDeleting As EMARKCERTIFICATIONREPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EMARKCERTIFICATIONREPORT_VIEWRowDeleted As EMARKCERTIFICATIONREPORT_VIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEMARKCERTIFICATIONREPORT_VIEWRow(ByVal row As EMARKCERTIFICATIONREPORT_VIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEMARKCERTIFICATIONREPORT_VIEWRow( _
                    ByVal SKUID As Decimal,  _
                    ByVal ACTIVESTATUS As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal DATESUBMITED As Date,  _
                    ByVal DATEASSIGNED_EGI As Date,  _
                    ByVal DATEAPPROVED_CEGI As Date,  _
                    ByVal SUPPLEMENTALREQUIRED_EI As String,  _
                    ByVal SUPPLEMENTALNUMBER_EI As String,  _
                    ByVal JOBREPORTNUMBER_CEN As String,  _
                    ByVal EXTENSION_EN As String,  _
                    ByVal SUPPLEMENTALEXTENSION_EN As String,  _
                    ByVal SUPPLEMENTALMOLDSTAMPING_E As String,  _
                    ByVal SUPPLEMENTALDATEASSIGNED_E As Date,  _
                    ByVal SUPPLEMENTALDATESUBMITTED_E As Date,  _
                    ByVal SUPPLEMENTALDATEAPPROVED_E As Date,  _
                    ByVal WHEELTESTREFERENCE As String,  _
                    ByVal NOISETESTREFERENCE As String,  _
                    ByVal WGTESTREFERENCE As String,  _
                    ByVal RRTESTREFERENCE As String) As EMARKCERTIFICATIONREPORT_VIEWRow
            Dim rowEMARKCERTIFICATIONREPORT_VIEWRow As EMARKCERTIFICATIONREPORT_VIEWRow = CType(Me.NewRow,EMARKCERTIFICATIONREPORT_VIEWRow)
            Dim columnValuesArray() As Object = New Object() {SKUID, ACTIVESTATUS, CERTIFICATIONTYPEID, CERTIFICATENUMBER, DATESUBMITED, DATEASSIGNED_EGI, DATEAPPROVED_CEGI, SUPPLEMENTALREQUIRED_EI, SUPPLEMENTALNUMBER_EI, JOBREPORTNUMBER_CEN, EXTENSION_EN, SUPPLEMENTALEXTENSION_EN, SUPPLEMENTALMOLDSTAMPING_E, SUPPLEMENTALDATEASSIGNED_E, SUPPLEMENTALDATESUBMITTED_E, SUPPLEMENTALDATEAPPROVED_E, WHEELTESTREFERENCE, NOISETESTREFERENCE, WGTESTREFERENCE, RRTESTREFERENCE}
            rowEMARKCERTIFICATIONREPORT_VIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEMARKCERTIFICATIONREPORT_VIEWRow)
            Return rowEMARKCERTIFICATIONREPORT_VIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EMARKCERTIFICATIONREPORT_VIEWDataTable = CType(MyBase.Clone,EMARKCERTIFICATIONREPORT_VIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EMARKCERTIFICATIONREPORT_VIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSKUID = MyBase.Columns("SKUID")
            Me.columnACTIVESTATUS = MyBase.Columns("ACTIVESTATUS")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnDATESUBMITED = MyBase.Columns("DATESUBMITED")
            Me.columnDATEASSIGNED_EGI = MyBase.Columns("DATEASSIGNED_EGI")
            Me.columnDATEAPPROVED_CEGI = MyBase.Columns("DATEAPPROVED_CEGI")
            Me.columnSUPPLEMENTALREQUIRED_EI = MyBase.Columns("SUPPLEMENTALREQUIRED_EI")
            Me.columnSUPPLEMENTALNUMBER_EI = MyBase.Columns("SUPPLEMENTALNUMBER_EI")
            Me.columnJOBREPORTNUMBER_CEN = MyBase.Columns("JOBREPORTNUMBER_CEN")
            Me.columnEXTENSION_EN = MyBase.Columns("EXTENSION_EN")
            Me.columnSUPPLEMENTALEXTENSION_EN = MyBase.Columns("SUPPLEMENTALEXTENSION_EN")
            Me.columnSUPPLEMENTALMOLDSTAMPING_E = MyBase.Columns("SUPPLEMENTALMOLDSTAMPING_E")
            Me.columnSUPPLEMENTALDATEASSIGNED_E = MyBase.Columns("SUPPLEMENTALDATEASSIGNED_E")
            Me.columnSUPPLEMENTALDATESUBMITTED_E = MyBase.Columns("SUPPLEMENTALDATESUBMITTED_E")
            Me.columnSUPPLEMENTALDATEAPPROVED_E = MyBase.Columns("SUPPLEMENTALDATEAPPROVED_E")
            Me.columnWHEELTESTREFERENCE = MyBase.Columns("WHEELTESTREFERENCE")
            Me.columnNOISETESTREFERENCE = MyBase.Columns("NOISETESTREFERENCE")
            Me.columnWGTESTREFERENCE = MyBase.Columns("WGTESTREFERENCE")
            Me.columnRRTESTREFERENCE = MyBase.Columns("RRTESTREFERENCE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSKUID = New Global.System.Data.DataColumn("SKUID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKUID)
            Me.columnACTIVESTATUS = New Global.System.Data.DataColumn("ACTIVESTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTIVESTATUS)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnDATESUBMITED = New Global.System.Data.DataColumn("DATESUBMITED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATESUBMITED)
            Me.columnDATEASSIGNED_EGI = New Global.System.Data.DataColumn("DATEASSIGNED_EGI", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEASSIGNED_EGI)
            Me.columnDATEAPPROVED_CEGI = New Global.System.Data.DataColumn("DATEAPPROVED_CEGI", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEAPPROVED_CEGI)
            Me.columnSUPPLEMENTALREQUIRED_EI = New Global.System.Data.DataColumn("SUPPLEMENTALREQUIRED_EI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALREQUIRED_EI)
            Me.columnSUPPLEMENTALNUMBER_EI = New Global.System.Data.DataColumn("SUPPLEMENTALNUMBER_EI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALNUMBER_EI)
            Me.columnJOBREPORTNUMBER_CEN = New Global.System.Data.DataColumn("JOBREPORTNUMBER_CEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOBREPORTNUMBER_CEN)
            Me.columnEXTENSION_EN = New Global.System.Data.DataColumn("EXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION_EN)
            Me.columnSUPPLEMENTALEXTENSION_EN = New Global.System.Data.DataColumn("SUPPLEMENTALEXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALEXTENSION_EN)
            Me.columnSUPPLEMENTALMOLDSTAMPING_E = New Global.System.Data.DataColumn("SUPPLEMENTALMOLDSTAMPING_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALMOLDSTAMPING_E)
            Me.columnSUPPLEMENTALDATEASSIGNED_E = New Global.System.Data.DataColumn("SUPPLEMENTALDATEASSIGNED_E", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALDATEASSIGNED_E)
            Me.columnSUPPLEMENTALDATESUBMITTED_E = New Global.System.Data.DataColumn("SUPPLEMENTALDATESUBMITTED_E", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALDATESUBMITTED_E)
            Me.columnSUPPLEMENTALDATEAPPROVED_E = New Global.System.Data.DataColumn("SUPPLEMENTALDATEAPPROVED_E", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALDATEAPPROVED_E)
            Me.columnWHEELTESTREFERENCE = New Global.System.Data.DataColumn("WHEELTESTREFERENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELTESTREFERENCE)
            Me.columnNOISETESTREFERENCE = New Global.System.Data.DataColumn("NOISETESTREFERENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOISETESTREFERENCE)
            Me.columnWGTESTREFERENCE = New Global.System.Data.DataColumn("WGTESTREFERENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWGTESTREFERENCE)
            Me.columnRRTESTREFERENCE = New Global.System.Data.DataColumn("RRTESTREFERENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRTESTREFERENCE)
            Me.columnSKUID.AllowDBNull = false
            Me.columnACTIVESTATUS.MaxLength = 1
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnSUPPLEMENTALREQUIRED_EI.MaxLength = 1
            Me.columnSUPPLEMENTALNUMBER_EI.MaxLength = 120
            Me.columnJOBREPORTNUMBER_CEN.MaxLength = 120
            Me.columnEXTENSION_EN.MaxLength = 120
            Me.columnSUPPLEMENTALEXTENSION_EN.MaxLength = 30
            Me.columnSUPPLEMENTALMOLDSTAMPING_E.MaxLength = 120
            Me.columnWHEELTESTREFERENCE.MaxLength = 16
            Me.columnNOISETESTREFERENCE.MaxLength = 16
            Me.columnWGTESTREFERENCE.MaxLength = 16
            Me.columnRRTESTREFERENCE.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEMARKCERTIFICATIONREPORT_VIEWRow() As EMARKCERTIFICATIONREPORT_VIEWRow
            Return CType(Me.NewRow,EMARKCERTIFICATIONREPORT_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EMARKCERTIFICATIONREPORT_VIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EMARKCERTIFICATIONREPORT_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EMARKCERTIFICATIONREPORT_VIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent EMARKCERTIFICATIONREPORT_VIEWRowChanged(Me, New EMARKCERTIFICATIONREPORT_VIEWRowChangeEvent(CType(e.Row,EMARKCERTIFICATIONREPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EMARKCERTIFICATIONREPORT_VIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent EMARKCERTIFICATIONREPORT_VIEWRowChanging(Me, New EMARKCERTIFICATIONREPORT_VIEWRowChangeEvent(CType(e.Row,EMARKCERTIFICATIONREPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EMARKCERTIFICATIONREPORT_VIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent EMARKCERTIFICATIONREPORT_VIEWRowDeleted(Me, New EMARKCERTIFICATIONREPORT_VIEWRowChangeEvent(CType(e.Row,EMARKCERTIFICATIONREPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EMARKCERTIFICATIONREPORT_VIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent EMARKCERTIFICATIONREPORT_VIEWRowDeleting(Me, New EMARKCERTIFICATIONREPORT_VIEWRowChangeEvent(CType(e.Row,EMARKCERTIFICATIONREPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEMARKCERTIFICATIONREPORT_VIEWRow(ByVal row As EMARKCERTIFICATIONREPORT_VIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkCertificationTypeDataset = New EmarkCertificationTypeDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EMARKCERTIFICATIONREPORT_VIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PRODUCTRow
        Inherits Global.System.Data.DataRow
        
        Private tablePRODUCT As PRODUCTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRODUCT = CType(Me.Table,PRODUCTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SKUID() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCT.SKUIDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCT.SKUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SKU() As String
            Get
                Return CType(Me(Me.tablePRODUCT.SKUColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCT.SKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRANDCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.BRANDCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRANDCODE' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.BRANDCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIRETYPEID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.TIRETYPEIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIRETYPEID' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.TIRETYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NPRID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.NPRIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NPRID' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.NPRIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIZESTAMP() As String
            Get
                Return CType(Me(Me.tablePRODUCT.SIZESTAMPColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCT.SIZESTAMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCONTINUEDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.DISCONTINUEDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCONTINUEDDATE' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.DISCONTINUEDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.SPECNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECNUMBER' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.SPECNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEEDRATING() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.SPEEDRATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPEEDRATING' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.SPEEDRATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SINGLOADINDEX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.SINGLOADINDEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SINGLOADINDEX' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.SINGLOADINDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DUALLOADINDEX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.DUALLOADINDEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DUALLOADINDEX' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.DUALLOADINDEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BELTEDRADIALYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.BELTEDRADIALYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BELTEDRADIALYN' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.BELTEDRADIALYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TUBELESSYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.TUBELESSYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TUBELESSYN' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.TUBELESSYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REINFORCEDYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.REINFORCEDYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REINFORCEDYN' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.REINFORCEDYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTRALOADYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.EXTRALOADYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRALOADYN' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.EXTRALOADYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEASURINGRIM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.MEASURINGRIMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEASURINGRIM' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.MEASURINGRIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTQGTREADWEAR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.UTQGTREADWEARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTQGTREADWEAR' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.UTQGTREADWEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTQGTRACTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.UTQGTRACTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTQGTRACTION' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.UTQGTRACTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTQGTEMP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.UTQGTEMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTQGTEMP' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.UTQGTEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MUDSNOWYN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.MUDSNOWYNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MUDSNOWYN' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.MUDSNOWYNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIMDIAMETER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.RIMDIAMETERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIMDIAMETER' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.RIMDIAMETERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERIALDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.SERIALDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIALDATE' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.SERIALDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRANDDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.BRANDDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRANDDESC' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.BRANDDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOADRANGE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.LOADRANGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOADRANGE' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.LOADRANGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEARIMWIDTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.MEARIMWIDTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEARIMWIDTH' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.MEARIMWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REGROOVABLEIND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.REGROOVABLEINDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REGROOVABLEIND' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.REGROOVABLEINDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLANTPRODUCED() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.PLANTPRODUCEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLANTPRODUCED' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.PLANTPRODUCEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOSTRECENTTESTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.MOSTRECENTTESTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOSTRECENTTESTDATE' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.MOSTRECENTTESTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMARK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.IMARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMARK' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.IMARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDBY() As String
            Get
                Return CType(Me(Me.tablePRODUCT.CREATEDBYColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCT.CREATEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATEDON() As Date
            Get
                Return CType(Me(Me.tablePRODUCT.CREATEDONColumn),Date)
            End Get
            Set
                Me(Me.tablePRODUCT.CREATEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDBY() As String
            Get
                Return CType(Me(Me.tablePRODUCT.MODIFIEDBYColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCT.MODIFIEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODIFIEDON() As Date
            Get
                Return CType(Me(Me.tablePRODUCT.MODIFIEDONColumn),Date)
            End Get
            Set
                Me(Me.tablePRODUCT.MODIFIEDONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INFORMENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.INFORMENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFORMENUMBER' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.INFORMENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHADATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.FECHADATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHADATE' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.FECHADATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TREADPATTERN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.TREADPATTERNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TREADPATTERN' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.TREADPATTERNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIALPROTECTIVEBAND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.SPECIALPROTECTIVEBANDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECIALPROTECTIVEBAND' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.SPECIALPROTECTIVEBANDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINALTIREWIDTH() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.NOMINALTIREWIDTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINALTIREWIDTH' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.NOMINALTIREWIDTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ASPECTRADIO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.ASPECTRADIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASPECTRADIO' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.ASPECTRADIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TREADWEARINDICATORS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.TREADWEARINDICATORSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TREADWEARINDICATORS' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.TREADWEARINDICATORSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMEOFMANUFACTURER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.NAMEOFMANUFACTURERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMEOFMANUFACTURER' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.NAMEOFMANUFACTURERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAMILY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCT.FAMILYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAMILY' in table 'PRODUCT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCT.FAMILYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMARKCERTIFICATIONREPORT_VIEWRow() As EMARKCERTIFICATIONREPORT_VIEWRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("EMARKCERTIFICATIONREPORT_VIEW_PRODUCT")),EMARKCERTIFICATIONREPORT_VIEWRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("EMARKCERTIFICATIONREPORT_VIEW_PRODUCT"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRANDCODENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.BRANDCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRANDCODENull()
            Me(Me.tablePRODUCT.BRANDCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIRETYPEIDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.TIRETYPEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIRETYPEIDNull()
            Me(Me.tablePRODUCT.TIRETYPEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNPRIDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.NPRIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNPRIDNull()
            Me(Me.tablePRODUCT.NPRIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCONTINUEDDATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.DISCONTINUEDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCONTINUEDDATENull()
            Me(Me.tablePRODUCT.DISCONTINUEDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECNUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.SPECNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECNUMBERNull()
            Me(Me.tablePRODUCT.SPECNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPEEDRATINGNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.SPEEDRATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPEEDRATINGNull()
            Me(Me.tablePRODUCT.SPEEDRATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSINGLOADINDEXNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.SINGLOADINDEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSINGLOADINDEXNull()
            Me(Me.tablePRODUCT.SINGLOADINDEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDUALLOADINDEXNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.DUALLOADINDEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDUALLOADINDEXNull()
            Me(Me.tablePRODUCT.DUALLOADINDEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBELTEDRADIALYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.BELTEDRADIALYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBELTEDRADIALYNNull()
            Me(Me.tablePRODUCT.BELTEDRADIALYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTUBELESSYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.TUBELESSYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTUBELESSYNNull()
            Me(Me.tablePRODUCT.TUBELESSYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREINFORCEDYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.REINFORCEDYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREINFORCEDYNNull()
            Me(Me.tablePRODUCT.REINFORCEDYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTRALOADYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.EXTRALOADYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTRALOADYNNull()
            Me(Me.tablePRODUCT.EXTRALOADYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEASURINGRIMNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.MEASURINGRIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEASURINGRIMNull()
            Me(Me.tablePRODUCT.MEASURINGRIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTQGTREADWEARNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.UTQGTREADWEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTQGTREADWEARNull()
            Me(Me.tablePRODUCT.UTQGTREADWEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTQGTRACTIONNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.UTQGTRACTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTQGTRACTIONNull()
            Me(Me.tablePRODUCT.UTQGTRACTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTQGTEMPNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.UTQGTEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTQGTEMPNull()
            Me(Me.tablePRODUCT.UTQGTEMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMUDSNOWYNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.MUDSNOWYNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMUDSNOWYNNull()
            Me(Me.tablePRODUCT.MUDSNOWYNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIMDIAMETERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.RIMDIAMETERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIMDIAMETERNull()
            Me(Me.tablePRODUCT.RIMDIAMETERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERIALDATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.SERIALDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERIALDATENull()
            Me(Me.tablePRODUCT.SERIALDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRANDDESCNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.BRANDDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRANDDESCNull()
            Me(Me.tablePRODUCT.BRANDDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOADRANGENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.LOADRANGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOADRANGENull()
            Me(Me.tablePRODUCT.LOADRANGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEARIMWIDTHNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.MEARIMWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEARIMWIDTHNull()
            Me(Me.tablePRODUCT.MEARIMWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREGROOVABLEINDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.REGROOVABLEINDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREGROOVABLEINDNull()
            Me(Me.tablePRODUCT.REGROOVABLEINDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLANTPRODUCEDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.PLANTPRODUCEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLANTPRODUCEDNull()
            Me(Me.tablePRODUCT.PLANTPRODUCEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMOSTRECENTTESTDATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.MOSTRECENTTESTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMOSTRECENTTESTDATENull()
            Me(Me.tablePRODUCT.MOSTRECENTTESTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMARKNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.IMARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMARKNull()
            Me(Me.tablePRODUCT.IMARKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINFORMENUMBERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.INFORMENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINFORMENUMBERNull()
            Me(Me.tablePRODUCT.INFORMENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHADATENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.FECHADATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHADATENull()
            Me(Me.tablePRODUCT.FECHADATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTREADPATTERNNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.TREADPATTERNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTREADPATTERNNull()
            Me(Me.tablePRODUCT.TREADPATTERNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECIALPROTECTIVEBANDNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.SPECIALPROTECTIVEBANDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECIALPROTECTIVEBANDNull()
            Me(Me.tablePRODUCT.SPECIALPROTECTIVEBANDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINALTIREWIDTHNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.NOMINALTIREWIDTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINALTIREWIDTHNull()
            Me(Me.tablePRODUCT.NOMINALTIREWIDTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsASPECTRADIONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.ASPECTRADIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetASPECTRADIONull()
            Me(Me.tablePRODUCT.ASPECTRADIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTREADWEARINDICATORSNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.TREADWEARINDICATORSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTREADWEARINDICATORSNull()
            Me(Me.tablePRODUCT.TREADWEARINDICATORSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMEOFMANUFACTURERNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.NAMEOFMANUFACTURERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMEOFMANUFACTURERNull()
            Me(Me.tablePRODUCT.NAMEOFMANUFACTURERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFAMILYNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCT.FAMILYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFAMILYNull()
            Me(Me.tablePRODUCT.FAMILYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EMARKCERTIFICATIONREPORT_VIEWRow
        Inherits Global.System.Data.DataRow
        
        Private tableEMARKCERTIFICATIONREPORT_VIEW As EMARKCERTIFICATIONREPORT_VIEWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEMARKCERTIFICATIONREPORT_VIEW = CType(Me.Table,EMARKCERTIFICATIONREPORT_VIEWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SKUID() As Decimal
            Get
                Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SKUIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SKUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTIVESTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.ACTIVESTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTIVESTATUS' in table 'EMARKCERTIFICATIONREPORT_VIEW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.ACTIVESTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATIONTYPEID() As Decimal
            Get
                Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.CERTIFICATIONTYPEIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.CERTIFICATIONTYPEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERTIFICATENUMBER() As String
            Get
                Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.CERTIFICATENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.CERTIFICATENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATESUBMITED() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATESUBMITEDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATESUBMITED' in table 'EMARKCERTIFICATIONREPORT_VIEW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATESUBMITEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEASSIGNED_EGI() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATEASSIGNED_EGIColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEASSIGNED_EGI' in table 'EMARKCERTIFICATIONREPORT_VIEW' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATEASSIGNED_EGIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEAPPROVED_CEGI() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATEAPPROVED_CEGIColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEAPPROVED_CEGI' in table 'EMARKCERTIFICATIONREPORT_VIEW'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATEAPPROVED_CEGIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALREQUIRED_EI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALREQUIRED_EIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALREQUIRED_EI' in table 'EMARKCERTIFICATIONREPORT"& _ 
                            "_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALREQUIRED_EIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALNUMBER_EI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALNUMBER_EIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALNUMBER_EI' in table 'EMARKCERTIFICATIONREPORT_V"& _ 
                            "IEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALNUMBER_EIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOBREPORTNUMBER_CEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.JOBREPORTNUMBER_CENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JOBREPORTNUMBER_CEN' in table 'EMARKCERTIFICATIONREPORT_VIE"& _ 
                            "W' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.JOBREPORTNUMBER_CENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTENSION_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.EXTENSION_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENSION_EN' in table 'EMARKCERTIFICATIONREPORT_VIEW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.EXTENSION_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALEXTENSION_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALEXTENSION_EN' in table 'EMARKCERTIFICATIONREPOR"& _ 
                            "T_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALMOLDSTAMPING_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALMOLDSTAMPING_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALMOLDSTAMPING_E' in table 'EMARKCERTIFICATIONREP"& _ 
                            "ORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALMOLDSTAMPING_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALDATEASSIGNED_E() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATEASSIGNED_EColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALDATEASSIGNED_E' in table 'EMARKCERTIFICATIONREP"& _ 
                            "ORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATEASSIGNED_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALDATESUBMITTED_E() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATESUBMITTED_EColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALDATESUBMITTED_E' in table 'EMARKCERTIFICATIONRE"& _ 
                            "PORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATESUBMITTED_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLEMENTALDATEAPPROVED_E() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATEAPPROVED_EColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLEMENTALDATEAPPROVED_E' in table 'EMARKCERTIFICATIONREP"& _ 
                            "ORT_VIEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATEAPPROVED_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WHEELTESTREFERENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.WHEELTESTREFERENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WHEELTESTREFERENCE' in table 'EMARKCERTIFICATIONREPORT_VIEW"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.WHEELTESTREFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOISETESTREFERENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.NOISETESTREFERENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOISETESTREFERENCE' in table 'EMARKCERTIFICATIONREPORT_VIEW"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.NOISETESTREFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WGTESTREFERENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.WGTESTREFERENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WGTESTREFERENCE' in table 'EMARKCERTIFICATIONREPORT_VIEW' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.WGTESTREFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RRTESTREFERENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.RRTESTREFERENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRTESTREFERENCE' in table 'EMARKCERTIFICATIONREPORT_VIEW' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.RRTESTREFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACTIVESTATUSNull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.ACTIVESTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACTIVESTATUSNull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.ACTIVESTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATESUBMITEDNull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATESUBMITEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATESUBMITEDNull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATESUBMITEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEASSIGNED_EGINull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATEASSIGNED_EGIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEASSIGNED_EGINull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATEASSIGNED_EGIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEAPPROVED_CEGINull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATEAPPROVED_CEGIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEAPPROVED_CEGINull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.DATEAPPROVED_CEGIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALREQUIRED_EINull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALREQUIRED_EIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALREQUIRED_EINull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALREQUIRED_EIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALNUMBER_EINull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALNUMBER_EIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALNUMBER_EINull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALNUMBER_EIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOBREPORTNUMBER_CENNull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.JOBREPORTNUMBER_CENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOBREPORTNUMBER_CENNull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.JOBREPORTNUMBER_CENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTENSION_ENNull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.EXTENSION_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTENSION_ENNull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.EXTENSION_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALEXTENSION_ENNull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALEXTENSION_ENNull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALEXTENSION_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALMOLDSTAMPING_ENull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALMOLDSTAMPING_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALMOLDSTAMPING_ENull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALMOLDSTAMPING_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALDATEASSIGNED_ENull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATEASSIGNED_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALDATEASSIGNED_ENull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATEASSIGNED_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALDATESUBMITTED_ENull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATESUBMITTED_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALDATESUBMITTED_ENull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATESUBMITTED_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLEMENTALDATEAPPROVED_ENull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATEAPPROVED_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLEMENTALDATEAPPROVED_ENull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.SUPPLEMENTALDATEAPPROVED_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHEELTESTREFERENCENull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.WHEELTESTREFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHEELTESTREFERENCENull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.WHEELTESTREFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOISETESTREFERENCENull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.NOISETESTREFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOISETESTREFERENCENull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.NOISETESTREFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWGTESTREFERENCENull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.WGTESTREFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWGTESTREFERENCENull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.WGTESTREFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRRTESTREFERENCENull() As Boolean
            Return Me.IsNull(Me.tableEMARKCERTIFICATIONREPORT_VIEW.RRTESTREFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRRTESTREFERENCENull()
            Me(Me.tableEMARKCERTIFICATIONREPORT_VIEW.RRTESTREFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPRODUCTRows() As PRODUCTRow()
            If (Me.Table.ChildRelations("EMARKCERTIFICATIONREPORT_VIEW_PRODUCT") Is Nothing) Then
                Return New PRODUCTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("EMARKCERTIFICATIONREPORT_VIEW_PRODUCT")),PRODUCTRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PRODUCTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PRODUCTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PRODUCTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PRODUCTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class EMARKCERTIFICATIONREPORT_VIEWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EMARKCERTIFICATIONREPORT_VIEWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As EMARKCERTIFICATIONREPORT_VIEWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As EMARKCERTIFICATIONREPORT_VIEWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace EmarkCertificationTypeDatasetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PRODUCTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PRODUCT"
            tableMapping.ColumnMappings.Add("SKUID", "SKUID")
            tableMapping.ColumnMappings.Add("SKU", "SKU")
            tableMapping.ColumnMappings.Add("BRANDCODE", "BRANDCODE")
            tableMapping.ColumnMappings.Add("TIRETYPEID", "TIRETYPEID")
            tableMapping.ColumnMappings.Add("NPRID", "NPRID")
            tableMapping.ColumnMappings.Add("SIZESTAMP", "SIZESTAMP")
            tableMapping.ColumnMappings.Add("DISCONTINUEDDATE", "DISCONTINUEDDATE")
            tableMapping.ColumnMappings.Add("SPECNUMBER", "SPECNUMBER")
            tableMapping.ColumnMappings.Add("SPEEDRATING", "SPEEDRATING")
            tableMapping.ColumnMappings.Add("SINGLOADINDEX", "SINGLOADINDEX")
            tableMapping.ColumnMappings.Add("DUALLOADINDEX", "DUALLOADINDEX")
            tableMapping.ColumnMappings.Add("BELTEDRADIALYN", "BELTEDRADIALYN")
            tableMapping.ColumnMappings.Add("TUBELESSYN", "TUBELESSYN")
            tableMapping.ColumnMappings.Add("REINFORCEDYN", "REINFORCEDYN")
            tableMapping.ColumnMappings.Add("EXTRALOADYN", "EXTRALOADYN")
            tableMapping.ColumnMappings.Add("MEASURINGRIM", "MEASURINGRIM")
            tableMapping.ColumnMappings.Add("UTQGTREADWEAR", "UTQGTREADWEAR")
            tableMapping.ColumnMappings.Add("UTQGTRACTION", "UTQGTRACTION")
            tableMapping.ColumnMappings.Add("UTQGTEMP", "UTQGTEMP")
            tableMapping.ColumnMappings.Add("MUDSNOWYN", "MUDSNOWYN")
            tableMapping.ColumnMappings.Add("RIMDIAMETER", "RIMDIAMETER")
            tableMapping.ColumnMappings.Add("SERIALDATE", "SERIALDATE")
            tableMapping.ColumnMappings.Add("BRANDDESC", "BRANDDESC")
            tableMapping.ColumnMappings.Add("LOADRANGE", "LOADRANGE")
            tableMapping.ColumnMappings.Add("MEARIMWIDTH", "MEARIMWIDTH")
            tableMapping.ColumnMappings.Add("REGROOVABLEIND", "REGROOVABLEIND")
            tableMapping.ColumnMappings.Add("PLANTPRODUCED", "PLANTPRODUCED")
            tableMapping.ColumnMappings.Add("MOSTRECENTTESTDATE", "MOSTRECENTTESTDATE")
            tableMapping.ColumnMappings.Add("IMARK", "IMARK")
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY")
            tableMapping.ColumnMappings.Add("CREATEDON", "CREATEDON")
            tableMapping.ColumnMappings.Add("MODIFIEDBY", "MODIFIEDBY")
            tableMapping.ColumnMappings.Add("MODIFIEDON", "MODIFIEDON")
            tableMapping.ColumnMappings.Add("INFORMENUMBER", "INFORMENUMBER")
            tableMapping.ColumnMappings.Add("FECHADATE", "FECHADATE")
            tableMapping.ColumnMappings.Add("TREADPATTERN", "TREADPATTERN")
            tableMapping.ColumnMappings.Add("SPECIALPROTECTIVEBAND", "SPECIALPROTECTIVEBAND")
            tableMapping.ColumnMappings.Add("NOMINALTIREWIDTH", "NOMINALTIREWIDTH")
            tableMapping.ColumnMappings.Add("ASPECTRADIO", "ASPECTRADIO")
            tableMapping.ColumnMappings.Add("TREADWEARINDICATORS", "TREADWEARINDICATORS")
            tableMapping.ColumnMappings.Add("NAMEOFMANUFACTURER", "NAMEOFMANUFACTURER")
            tableMapping.ColumnMappings.Add("FAMILY", "FAMILY")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""ICS"".""PRODUCT"" WHERE ((""SKUID"" = :Original_SKUID) AND (""SKU"" = :Orig"& _ 
                "inal_SKU) AND ((:IsNull_BRANDCODE = 1 AND ""BRANDCODE"" IS NULL) OR (""BRANDCODE"" ="& _ 
                " :Original_BRANDCODE)) AND ((:IsNull_TIRETYPEID = 1 AND ""TIRETYPEID"" IS NULL) OR"& _ 
                " (""TIRETYPEID"" = :Original_TIRETYPEID)) AND ((:IsNull_NPRID = 1 AND ""NPRID"" IS N"& _ 
                "ULL) OR (""NPRID"" = :Original_NPRID)) AND (""SIZESTAMP"" = :Original_SIZESTAMP) AND"& _ 
                " ((:IsNull_DISCONTINUEDDATE = 1 AND ""DISCONTINUEDDATE"" IS NULL) OR (""DISCONTINUE"& _ 
                "DDATE"" = :Original_DISCONTINUEDDATE)) AND ((:IsNull_SPECNUMBER = 1 AND ""SPECNUMB"& _ 
                "ER"" IS NULL) OR (""SPECNUMBER"" = :Original_SPECNUMBER)) AND ((:IsNull_SPEEDRATING"& _ 
                " = 1 AND ""SPEEDRATING"" IS NULL) OR (""SPEEDRATING"" = :Original_SPEEDRATING)) AND "& _ 
                "((:IsNull_SINGLOADINDEX = 1 AND ""SINGLOADINDEX"" IS NULL) OR (""SINGLOADINDEX"" = :"& _ 
                "Original_SINGLOADINDEX)) AND ((:IsNull_DUALLOADINDEX = 1 AND ""DUALLOADINDEX"" IS "& _ 
                "NULL) OR (""DUALLOADINDEX"" = :Original_DUALLOADINDEX)) AND ((:IsNull_BELTEDRADIAL"& _ 
                "YN = 1 AND ""BELTEDRADIALYN"" IS NULL) OR (""BELTEDRADIALYN"" = :Original_BELTEDRADI"& _ 
                "ALYN)) AND ((:IsNull_TUBELESSYN = 1 AND ""TUBELESSYN"" IS NULL) OR (""TUBELESSYN"" ="& _ 
                " :Original_TUBELESSYN)) AND ((:IsNull_REINFORCEDYN = 1 AND ""REINFORCEDYN"" IS NUL"& _ 
                "L) OR (""REINFORCEDYN"" = :Original_REINFORCEDYN)) AND ((:IsNull_EXTRALOADYN = 1 A"& _ 
                "ND ""EXTRALOADYN"" IS NULL) OR (""EXTRALOADYN"" = :Original_EXTRALOADYN)) AND ((:IsN"& _ 
                "ull_MEASURINGRIM = 1 AND ""MEASURINGRIM"" IS NULL) OR (""MEASURINGRIM"" = :Original_"& _ 
                "MEASURINGRIM)) AND ((:IsNull_UTQGTREADWEAR = 1 AND ""UTQGTREADWEAR"" IS NULL) OR ("& _ 
                """UTQGTREADWEAR"" = :Original_UTQGTREADWEAR)) AND ((:IsNull_UTQGTRACTION = 1 AND """& _ 
                "UTQGTRACTION"" IS NULL) OR (""UTQGTRACTION"" = :Original_UTQGTRACTION)) AND ((:IsNu"& _ 
                "ll_UTQGTEMP = 1 AND ""UTQGTEMP"" IS NULL) OR (""UTQGTEMP"" = :Original_UTQGTEMP)) AN"& _ 
                "D ((:IsNull_MUDSNOWYN = 1 AND ""MUDSNOWYN"" IS NULL) OR (""MUDSNOWYN"" = :Original_M"& _ 
                "UDSNOWYN)) AND ((:IsNull_RIMDIAMETER = 1 AND ""RIMDIAMETER"" IS NULL) OR (""RIMDIAM"& _ 
                "ETER"" = :Original_RIMDIAMETER)) AND ((:IsNull_SERIALDATE = 1 AND ""SERIALDATE"" IS"& _ 
                " NULL) OR (""SERIALDATE"" = :Original_SERIALDATE)) AND ((:IsNull_BRANDDESC = 1 AND"& _ 
                " ""BRANDDESC"" IS NULL) OR (""BRANDDESC"" = :Original_BRANDDESC)) AND ((:IsNull_LOAD"& _ 
                "RANGE = 1 AND ""LOADRANGE"" IS NULL) OR (""LOADRANGE"" = :Original_LOADRANGE)) AND ("& _ 
                "(:IsNull_MEARIMWIDTH = 1 AND ""MEARIMWIDTH"" IS NULL) OR (""MEARIMWIDTH"" = :Origina"& _ 
                "l_MEARIMWIDTH)) AND ((:IsNull_REGROOVABLEIND = 1 AND ""REGROOVABLEIND"" IS NULL) O"& _ 
                "R (""REGROOVABLEIND"" = :Original_REGROOVABLEIND)) AND ((:IsNull_PLANTPRODUCED = 1"& _ 
                " AND ""PLANTPRODUCED"" IS NULL) OR (""PLANTPRODUCED"" = :Original_PLANTPRODUCED)) AN"& _ 
                "D ((:IsNull_MOSTRECENTTESTDATE = 1 AND ""MOSTRECENTTESTDATE"" IS NULL) OR (""MOSTRE"& _ 
                "CENTTESTDATE"" = :Original_MOSTRECENTTESTDATE)) AND ((:IsNull_IMARK = 1 AND ""IMAR"& _ 
                "K"" IS NULL) OR (""IMARK"" = :Original_IMARK)) AND (""CREATEDBY"" = :Original_CREATED"& _ 
                "BY) AND (""CREATEDON"" = :Original_CREATEDON) AND (""MODIFIEDBY"" = :Original_MODIFI"& _ 
                "EDBY) AND (""MODIFIEDON"" = :Original_MODIFIEDON) AND ((:IsNull_INFORMENUMBER = 1 "& _ 
                "AND ""INFORMENUMBER"" IS NULL) OR (""INFORMENUMBER"" = :Original_INFORMENUMBER)) AND"& _ 
                " ((:IsNull_FECHADATE = 1 AND ""FECHADATE"" IS NULL) OR (""FECHADATE"" = :Original_FE"& _ 
                "CHADATE)) AND ((:IsNull_TREADPATTERN = 1 AND ""TREADPATTERN"" IS NULL) OR (""TREADP"& _ 
                "ATTERN"" = :Original_TREADPATTERN)) AND ((:IsNull_SPECIALPROTECTIVEBAND = 1 AND """& _ 
                "SPECIALPROTECTIVEBAND"" IS NULL) OR (""SPECIALPROTECTIVEBAND"" = :Original_SPECIALP"& _ 
                "ROTECTIVEBAND)) AND ((:IsNull_NOMINALTIREWIDTH = 1 AND ""NOMINALTIREWIDTH"" IS NUL"& _ 
                "L) OR (""NOMINALTIREWIDTH"" = :Original_NOMINALTIREWIDTH)) AND ((:IsNull_ASPECTRAD"& _ 
                "IO = 1 AND ""ASPECTRADIO"" IS NULL) OR (""ASPECTRADIO"" = :Original_ASPECTRADIO)) AN"& _ 
                "D ((:IsNull_TREADWEARINDICATORS = 1 AND ""TREADWEARINDICATORS"" IS NULL) OR (""TREA"& _ 
                "DWEARINDICATORS"" = :Original_TREADWEARINDICATORS)) AND ((:IsNull_NAMEOFMANUFACTU"& _ 
                "RER = 1 AND ""NAMEOFMANUFACTURER"" IS NULL) OR (""NAMEOFMANUFACTURER"" = :Original_N"& _ 
                "AMEOFMANUFACTURER)) AND ((:IsNull_FAMILY = 1 AND ""FAMILY"" IS NULL) OR (""FAMILY"" "& _ 
                "= :Original_FAMILY)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SKUID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SKUID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SKU", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SKU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_BRANDCODE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "BRANDCODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_BRANDCODE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BRANDCODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_TIRETYPEID", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "TIRETYPEID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_TIRETYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRETYPEID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NPRID", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NPRID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NPRID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "NPRID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SIZESTAMP", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SIZESTAMP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DISCONTINUEDDATE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DISCONTINUEDDATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DISCONTINUEDDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "DISCONTINUEDDATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SPECNUMBER", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SPECNUMBER", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SPECNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPECNUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SPEEDRATING", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SPEEDRATING", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SPEEDRATING", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPEEDRATING", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SINGLOADINDEX", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SINGLOADINDEX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SINGLOADINDEX", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SINGLOADINDEX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DUALLOADINDEX", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DUALLOADINDEX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DUALLOADINDEX", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DUALLOADINDEX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_BELTEDRADIALYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "BELTEDRADIALYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_BELTEDRADIALYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BELTEDRADIALYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_TUBELESSYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "TUBELESSYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_TUBELESSYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TUBELESSYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_REINFORCEDYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "REINFORCEDYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_REINFORCEDYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "REINFORCEDYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_EXTRALOADYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "EXTRALOADYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_EXTRALOADYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "EXTRALOADYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MEASURINGRIM", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MEASURINGRIM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MEASURINGRIM", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MEASURINGRIM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_UTQGTREADWEAR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "UTQGTREADWEAR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_UTQGTREADWEAR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTREADWEAR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_UTQGTRACTION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "UTQGTRACTION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_UTQGTRACTION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTRACTION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_UTQGTEMP", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "UTQGTEMP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_UTQGTEMP", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTEMP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MUDSNOWYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MUDSNOWYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MUDSNOWYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MUDSNOWYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_RIMDIAMETER", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "RIMDIAMETER", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_RIMDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "RIMDIAMETER", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SERIALDATE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SERIALDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_BRANDDESC", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "BRANDDESC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_BRANDDESC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BRANDDESC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_LOADRANGE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "LOADRANGE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_LOADRANGE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "LOADRANGE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MEARIMWIDTH", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MEARIMWIDTH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MEARIMWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MEARIMWIDTH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_REGROOVABLEIND", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "REGROOVABLEIND", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_REGROOVABLEIND", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "REGROOVABLEIND", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PLANTPRODUCED", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PLANTPRODUCED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PLANTPRODUCED", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PLANTPRODUCED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MOSTRECENTTESTDATE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MOSTRECENTTESTDATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MOSTRECENTTESTDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "MOSTRECENTTESTDATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_IMARK", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "IMARK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IMARK", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IMARK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CREATEDON", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFIEDON", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_INFORMENUMBER", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "INFORMENUMBER", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_INFORMENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "INFORMENUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHADATE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHADATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHADATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "FECHADATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_TREADPATTERN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "TREADPATTERN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_TREADPATTERN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TREADPATTERN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SPECIALPROTECTIVEBAND", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SPECIALPROTECTIVEBAND", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SPECIALPROTECTIVEBAND", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPECIALPROTECTIVEBAND", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMINALTIREWIDTH", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMINALTIREWIDTH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMINALTIREWIDTH", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMINALTIREWIDTH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_ASPECTRADIO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "ASPECTRADIO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ASPECTRADIO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ASPECTRADIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_TREADWEARINDICATORS", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "TREADWEARINDICATORS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_TREADWEARINDICATORS", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TREADWEARINDICATORS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NAMEOFMANUFACTURER", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NAMEOFMANUFACTURER", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NAMEOFMANUFACTURER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NAMEOFMANUFACTURER", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FAMILY", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FAMILY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FAMILY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FAMILY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ICS"".""PRODUCT"" (""SKUID"", ""SKU"", ""BRANDCODE"", ""TIRETYPEID"", ""NPRID"", "& _ 
                """SIZESTAMP"", ""DISCONTINUEDDATE"", ""SPECNUMBER"", ""SPEEDRATING"", ""SINGLOADINDEX"", """& _ 
                "DUALLOADINDEX"", ""BELTEDRADIALYN"", ""TUBELESSYN"", ""REINFORCEDYN"", ""EXTRALOADYN"", """& _ 
                "MEASURINGRIM"", ""UTQGTREADWEAR"", ""UTQGTRACTION"", ""UTQGTEMP"", ""MUDSNOWYN"", ""RIMDIA"& _ 
                "METER"", ""SERIALDATE"", ""BRANDDESC"", ""LOADRANGE"", ""MEARIMWIDTH"", ""REGROOVABLEIND"","& _ 
                " ""PLANTPRODUCED"", ""MOSTRECENTTESTDATE"", ""IMARK"", ""CREATEDBY"", ""CREATEDON"", ""MODI"& _ 
                "FIEDBY"", ""MODIFIEDON"", ""INFORMENUMBER"", ""FECHADATE"", ""TREADPATTERN"", ""SPECIALPRO"& _ 
                "TECTIVEBAND"", ""NOMINALTIREWIDTH"", ""ASPECTRADIO"", ""TREADWEARINDICATORS"", ""NAMEOFM"& _ 
                "ANUFACTURER"", ""FAMILY"") VALUES (:SKUID, :SKU, :BRANDCODE, :TIRETYPEID, :NPRID, :"& _ 
                "SIZESTAMP, :DISCONTINUEDDATE, :SPECNUMBER, :SPEEDRATING, :SINGLOADINDEX, :DUALLO"& _ 
                "ADINDEX, :BELTEDRADIALYN, :TUBELESSYN, :REINFORCEDYN, :EXTRALOADYN, :MEASURINGRI"& _ 
                "M, :UTQGTREADWEAR, :UTQGTRACTION, :UTQGTEMP, :MUDSNOWYN, :RIMDIAMETER, :SERIALDA"& _ 
                "TE, :BRANDDESC, :LOADRANGE, :MEARIMWIDTH, :REGROOVABLEIND, :PLANTPRODUCED, :MOST"& _ 
                "RECENTTESTDATE, :IMARK, :CREATEDBY, :CREATEDON, :MODIFIEDBY, :MODIFIEDON, :INFOR"& _ 
                "MENUMBER, :FECHADATE, :TREADPATTERN, :SPECIALPROTECTIVEBAND, :NOMINALTIREWIDTH, "& _ 
                ":ASPECTRADIO, :TREADWEARINDICATORS, :NAMEOFMANUFACTURER, :FAMILY)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SKUID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SKUID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SKU", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SKU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BRANDCODE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BRANDCODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIRETYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRETYPEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NPRID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "NPRID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SIZESTAMP", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SIZESTAMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DISCONTINUEDDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "DISCONTINUEDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPECNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPECNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPEEDRATING", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPEEDRATING", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SINGLOADINDEX", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SINGLOADINDEX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DUALLOADINDEX", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DUALLOADINDEX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BELTEDRADIALYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BELTEDRADIALYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TUBELESSYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TUBELESSYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("REINFORCEDYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "REINFORCEDYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("EXTRALOADYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "EXTRALOADYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MEASURINGRIM", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MEASURINGRIM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("UTQGTREADWEAR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTREADWEAR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("UTQGTRACTION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTRACTION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("UTQGTEMP", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MUDSNOWYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MUDSNOWYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("RIMDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "RIMDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIALDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BRANDDESC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BRANDDESC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("LOADRANGE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "LOADRANGE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MEARIMWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MEARIMWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("REGROOVABLEIND", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "REGROOVABLEIND", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PLANTPRODUCED", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PLANTPRODUCED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MOSTRECENTTESTDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "MOSTRECENTTESTDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMARK", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IMARK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("INFORMENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "INFORMENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHADATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "FECHADATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TREADPATTERN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TREADPATTERN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPECIALPROTECTIVEBAND", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPECIALPROTECTIVEBAND", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMINALTIREWIDTH", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMINALTIREWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ASPECTRADIO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ASPECTRADIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TREADWEARINDICATORS", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TREADWEARINDICATORS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NAMEOFMANUFACTURER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NAMEOFMANUFACTURER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FAMILY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FAMILY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OracleClient.OracleCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""ICS"".""PRODUCT"" SET ""SKUID"" = :SKUID, ""SKU"" = :SKU, ""BRANDCODE"" = :BRANDCO"& _ 
                "DE, ""TIRETYPEID"" = :TIRETYPEID, ""NPRID"" = :NPRID, ""SIZESTAMP"" = :SIZESTAMP, ""DIS"& _ 
                "CONTINUEDDATE"" = :DISCONTINUEDDATE, ""SPECNUMBER"" = :SPECNUMBER, ""SPEEDRATING"" = "& _ 
                ":SPEEDRATING, ""SINGLOADINDEX"" = :SINGLOADINDEX, ""DUALLOADINDEX"" = :DUALLOADINDEX"& _ 
                ", ""BELTEDRADIALYN"" = :BELTEDRADIALYN, ""TUBELESSYN"" = :TUBELESSYN, ""REINFORCEDYN"""& _ 
                " = :REINFORCEDYN, ""EXTRALOADYN"" = :EXTRALOADYN, ""MEASURINGRIM"" = :MEASURINGRIM, "& _ 
                """UTQGTREADWEAR"" = :UTQGTREADWEAR, ""UTQGTRACTION"" = :UTQGTRACTION, ""UTQGTEMP"" = :"& _ 
                "UTQGTEMP, ""MUDSNOWYN"" = :MUDSNOWYN, ""RIMDIAMETER"" = :RIMDIAMETER, ""SERIALDATE"" ="& _ 
                " :SERIALDATE, ""BRANDDESC"" = :BRANDDESC, ""LOADRANGE"" = :LOADRANGE, ""MEARIMWIDTH"" "& _ 
                "= :MEARIMWIDTH, ""REGROOVABLEIND"" = :REGROOVABLEIND, ""PLANTPRODUCED"" = :PLANTPROD"& _ 
                "UCED, ""MOSTRECENTTESTDATE"" = :MOSTRECENTTESTDATE, ""IMARK"" = :IMARK, ""CREATEDBY"" "& _ 
                "= :CREATEDBY, ""CREATEDON"" = :CREATEDON, ""MODIFIEDBY"" = :MODIFIEDBY, ""MODIFIEDON"""& _ 
                " = :MODIFIEDON, ""INFORMENUMBER"" = :INFORMENUMBER, ""FECHADATE"" = :FECHADATE, ""TRE"& _ 
                "ADPATTERN"" = :TREADPATTERN, ""SPECIALPROTECTIVEBAND"" = :SPECIALPROTECTIVEBAND, ""N"& _ 
                "OMINALTIREWIDTH"" = :NOMINALTIREWIDTH, ""ASPECTRADIO"" = :ASPECTRADIO, ""TREADWEARIN"& _ 
                "DICATORS"" = :TREADWEARINDICATORS, ""NAMEOFMANUFACTURER"" = :NAMEOFMANUFACTURER, ""F"& _ 
                "AMILY"" = :FAMILY WHERE ((""SKUID"" = :Original_SKUID) AND (""SKU"" = :Original_SKU) "& _ 
                "AND ((:IsNull_BRANDCODE = 1 AND ""BRANDCODE"" IS NULL) OR (""BRANDCODE"" = :Original"& _ 
                "_BRANDCODE)) AND ((:IsNull_TIRETYPEID = 1 AND ""TIRETYPEID"" IS NULL) OR (""TIRETYP"& _ 
                "EID"" = :Original_TIRETYPEID)) AND ((:IsNull_NPRID = 1 AND ""NPRID"" IS NULL) OR ("""& _ 
                "NPRID"" = :Original_NPRID)) AND (""SIZESTAMP"" = :Original_SIZESTAMP) AND ((:IsNull"& _ 
                "_DISCONTINUEDDATE = 1 AND ""DISCONTINUEDDATE"" IS NULL) OR (""DISCONTINUEDDATE"" = :"& _ 
                "Original_DISCONTINUEDDATE)) AND ((:IsNull_SPECNUMBER = 1 AND ""SPECNUMBER"" IS NUL"& _ 
                "L) OR (""SPECNUMBER"" = :Original_SPECNUMBER)) AND ((:IsNull_SPEEDRATING = 1 AND """& _ 
                "SPEEDRATING"" IS NULL) OR (""SPEEDRATING"" = :Original_SPEEDRATING)) AND ((:IsNull_"& _ 
                "SINGLOADINDEX = 1 AND ""SINGLOADINDEX"" IS NULL) OR (""SINGLOADINDEX"" = :Original_S"& _ 
                "INGLOADINDEX)) AND ((:IsNull_DUALLOADINDEX = 1 AND ""DUALLOADINDEX"" IS NULL) OR ("& _ 
                """DUALLOADINDEX"" = :Original_DUALLOADINDEX)) AND ((:IsNull_BELTEDRADIALYN = 1 AND"& _ 
                " ""BELTEDRADIALYN"" IS NULL) OR (""BELTEDRADIALYN"" = :Original_BELTEDRADIALYN)) AND"& _ 
                " ((:IsNull_TUBELESSYN = 1 AND ""TUBELESSYN"" IS NULL) OR (""TUBELESSYN"" = :Original"& _ 
                "_TUBELESSYN)) AND ((:IsNull_REINFORCEDYN = 1 AND ""REINFORCEDYN"" IS NULL) OR (""RE"& _ 
                "INFORCEDYN"" = :Original_REINFORCEDYN)) AND ((:IsNull_EXTRALOADYN = 1 AND ""EXTRAL"& _ 
                "OADYN"" IS NULL) OR (""EXTRALOADYN"" = :Original_EXTRALOADYN)) AND ((:IsNull_MEASUR"& _ 
                "INGRIM = 1 AND ""MEASURINGRIM"" IS NULL) OR (""MEASURINGRIM"" = :Original_MEASURINGR"& _ 
                "IM)) AND ((:IsNull_UTQGTREADWEAR = 1 AND ""UTQGTREADWEAR"" IS NULL) OR (""UTQGTREAD"& _ 
                "WEAR"" = :Original_UTQGTREADWEAR)) AND ((:IsNull_UTQGTRACTION = 1 AND ""UTQGTRACTI"& _ 
                "ON"" IS NULL) OR (""UTQGTRACTION"" = :Original_UTQGTRACTION)) AND ((:IsNull_UTQGTEM"& _ 
                "P = 1 AND ""UTQGTEMP"" IS NULL) OR (""UTQGTEMP"" = :Original_UTQGTEMP)) AND ((:IsNul"& _ 
                "l_MUDSNOWYN = 1 AND ""MUDSNOWYN"" IS NULL) OR (""MUDSNOWYN"" = :Original_MUDSNOWYN))"& _ 
                " AND ((:IsNull_RIMDIAMETER = 1 AND ""RIMDIAMETER"" IS NULL) OR (""RIMDIAMETER"" = :O"& _ 
                "riginal_RIMDIAMETER)) AND ((:IsNull_SERIALDATE = 1 AND ""SERIALDATE"" IS NULL) OR "& _ 
                "(""SERIALDATE"" = :Original_SERIALDATE)) AND ((:IsNull_BRANDDESC = 1 AND ""BRANDDES"& _ 
                "C"" IS NULL) OR (""BRANDDESC"" = :Original_BRANDDESC)) AND ((:IsNull_LOADRANGE = 1 "& _ 
                "AND ""LOADRANGE"" IS NULL) OR (""LOADRANGE"" = :Original_LOADRANGE)) AND ((:IsNull_M"& _ 
                "EARIMWIDTH = 1 AND ""MEARIMWIDTH"" IS NULL) OR (""MEARIMWIDTH"" = :Original_MEARIMWI"& _ 
                "DTH)) AND ((:IsNull_REGROOVABLEIND = 1 AND ""REGROOVABLEIND"" IS NULL) OR (""REGROO"& _ 
                "VABLEIND"" = :Original_REGROOVABLEIND)) AND ((:IsNull_PLANTPRODUCED = 1 AND ""PLAN"& _ 
                "TPRODUCED"" IS NULL) OR (""PLANTPRODUCED"" = :Original_PLANTPRODUCED)) AND ((:IsNul"& _ 
                "l_MOSTRECENTTESTDATE = 1 AND ""MOSTRECENTTESTDATE"" IS NULL) OR (""MOSTRECENTTESTDA"& _ 
                "TE"" = :Original_MOSTRECENTTESTDATE)) AND ((:IsNull_IMARK = 1 AND ""IMARK"" IS NULL"& _ 
                ") OR (""IMARK"" = :Original_IMARK)) AND (""CREATEDBY"" = :Original_CREATEDBY) AND ("""& _ 
                "CREATEDON"" = :Original_CREATEDON) AND (""MODIFIEDBY"" = :Original_MODIFIEDBY) AND "& _ 
                "(""MODIFIEDON"" = :Original_MODIFIEDON) AND ((:IsNull_INFORMENUMBER = 1 AND ""INFOR"& _ 
                "MENUMBER"" IS NULL) OR (""INFORMENUMBER"" = :Original_INFORMENUMBER)) AND ((:IsNull"& _ 
                "_FECHADATE = 1 AND ""FECHADATE"" IS NULL) OR (""FECHADATE"" = :Original_FECHADATE)) "& _ 
                "AND ((:IsNull_TREADPATTERN = 1 AND ""TREADPATTERN"" IS NULL) OR (""TREADPATTERN"" = "& _ 
                ":Original_TREADPATTERN)) AND ((:IsNull_SPECIALPROTECTIVEBAND = 1 AND ""SPECIALPRO"& _ 
                "TECTIVEBAND"" IS NULL) OR (""SPECIALPROTECTIVEBAND"" = :Original_SPECIALPROTECTIVEB"& _ 
                "AND)) AND ((:IsNull_NOMINALTIREWIDTH = 1 AND ""NOMINALTIREWIDTH"" IS NULL) OR (""NO"& _ 
                "MINALTIREWIDTH"" = :Original_NOMINALTIREWIDTH)) AND ((:IsNull_ASPECTRADIO = 1 AND"& _ 
                " ""ASPECTRADIO"" IS NULL) OR (""ASPECTRADIO"" = :Original_ASPECTRADIO)) AND ((:IsNul"& _ 
                "l_TREADWEARINDICATORS = 1 AND ""TREADWEARINDICATORS"" IS NULL) OR (""TREADWEARINDIC"& _ 
                "ATORS"" = :Original_TREADWEARINDICATORS)) AND ((:IsNull_NAMEOFMANUFACTURER = 1 AN"& _ 
                "D ""NAMEOFMANUFACTURER"" IS NULL) OR (""NAMEOFMANUFACTURER"" = :Original_NAMEOFMANUF"& _ 
                "ACTURER)) AND ((:IsNull_FAMILY = 1 AND ""FAMILY"" IS NULL) OR (""FAMILY"" = :Origina"& _ 
                "l_FAMILY)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SKUID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SKUID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SKU", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SKU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BRANDCODE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BRANDCODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TIRETYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRETYPEID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NPRID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "NPRID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SIZESTAMP", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SIZESTAMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DISCONTINUEDDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "DISCONTINUEDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPECNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPECNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPEEDRATING", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPEEDRATING", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SINGLOADINDEX", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SINGLOADINDEX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("DUALLOADINDEX", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DUALLOADINDEX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BELTEDRADIALYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BELTEDRADIALYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TUBELESSYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TUBELESSYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("REINFORCEDYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "REINFORCEDYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("EXTRALOADYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "EXTRALOADYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MEASURINGRIM", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MEASURINGRIM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("UTQGTREADWEAR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTREADWEAR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("UTQGTRACTION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTRACTION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("UTQGTEMP", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MUDSNOWYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MUDSNOWYN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("RIMDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "RIMDIAMETER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SERIALDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("BRANDDESC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BRANDDESC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("LOADRANGE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "LOADRANGE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MEARIMWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MEARIMWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("REGROOVABLEIND", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "REGROOVABLEIND", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("PLANTPRODUCED", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PLANTPRODUCED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MOSTRECENTTESTDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "MOSTRECENTTESTDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IMARK", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IMARK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("CREATEDON", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("MODIFIEDON", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("INFORMENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "INFORMENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FECHADATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "FECHADATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TREADPATTERN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TREADPATTERN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("SPECIALPROTECTIVEBAND", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPECIALPROTECTIVEBAND", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NOMINALTIREWIDTH", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMINALTIREWIDTH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("ASPECTRADIO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ASPECTRADIO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("TREADWEARINDICATORS", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TREADWEARINDICATORS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("NAMEOFMANUFACTURER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NAMEOFMANUFACTURER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("FAMILY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FAMILY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SKUID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "SKUID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SKU", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SKU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_BRANDCODE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "BRANDCODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_BRANDCODE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BRANDCODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_TIRETYPEID", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "TIRETYPEID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_TIRETYPEID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "TIRETYPEID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NPRID", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NPRID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NPRID", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "NPRID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SIZESTAMP", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SIZESTAMP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DISCONTINUEDDATE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DISCONTINUEDDATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DISCONTINUEDDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "DISCONTINUEDDATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SPECNUMBER", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SPECNUMBER", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SPECNUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPECNUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SPEEDRATING", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SPEEDRATING", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SPEEDRATING", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPEEDRATING", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SINGLOADINDEX", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SINGLOADINDEX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SINGLOADINDEX", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SINGLOADINDEX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_DUALLOADINDEX", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "DUALLOADINDEX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_DUALLOADINDEX", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "DUALLOADINDEX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_BELTEDRADIALYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "BELTEDRADIALYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_BELTEDRADIALYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BELTEDRADIALYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_TUBELESSYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "TUBELESSYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_TUBELESSYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TUBELESSYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_REINFORCEDYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "REINFORCEDYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_REINFORCEDYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "REINFORCEDYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_EXTRALOADYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "EXTRALOADYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_EXTRALOADYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "EXTRALOADYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MEASURINGRIM", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MEASURINGRIM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MEASURINGRIM", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MEASURINGRIM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_UTQGTREADWEAR", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "UTQGTREADWEAR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_UTQGTREADWEAR", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTREADWEAR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_UTQGTRACTION", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "UTQGTRACTION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_UTQGTRACTION", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTRACTION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_UTQGTEMP", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "UTQGTEMP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_UTQGTEMP", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "UTQGTEMP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MUDSNOWYN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MUDSNOWYN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MUDSNOWYN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MUDSNOWYN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_RIMDIAMETER", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "RIMDIAMETER", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_RIMDIAMETER", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "RIMDIAMETER", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SERIALDATE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SERIALDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "SERIALDATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_BRANDDESC", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "BRANDDESC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_BRANDDESC", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "BRANDDESC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_LOADRANGE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "LOADRANGE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_LOADRANGE", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "LOADRANGE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MEARIMWIDTH", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MEARIMWIDTH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MEARIMWIDTH", Global.System.Data.OracleClient.OracleType.Number, 0, Global.System.Data.ParameterDirection.Input, "MEARIMWIDTH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_REGROOVABLEIND", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "REGROOVABLEIND", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_REGROOVABLEIND", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "REGROOVABLEIND", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_PLANTPRODUCED", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "PLANTPRODUCED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_PLANTPRODUCED", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "PLANTPRODUCED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_MOSTRECENTTESTDATE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "MOSTRECENTTESTDATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MOSTRECENTTESTDATE", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "MOSTRECENTTESTDATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_IMARK", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "IMARK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_IMARK", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "IMARK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CREATEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "CREATEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_CREATEDON", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "CREATEDON", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFIEDBY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDBY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_MODIFIEDON", Global.System.Data.OracleClient.OracleType.DateTime, 0, Global.System.Data.ParameterDirection.Input, "MODIFIEDON", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_INFORMENUMBER", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "INFORMENUMBER", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_INFORMENUMBER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "INFORMENUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FECHADATE", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FECHADATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FECHADATE", Global.System.Data.OracleClient.OracleType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, "FECHADATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_TREADPATTERN", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "TREADPATTERN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_TREADPATTERN", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TREADPATTERN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_SPECIALPROTECTIVEBAND", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "SPECIALPROTECTIVEBAND", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_SPECIALPROTECTIVEBAND", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "SPECIALPROTECTIVEBAND", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NOMINALTIREWIDTH", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NOMINALTIREWIDTH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NOMINALTIREWIDTH", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NOMINALTIREWIDTH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_ASPECTRADIO", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "ASPECTRADIO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_ASPECTRADIO", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "ASPECTRADIO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_TREADWEARINDICATORS", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "TREADWEARINDICATORS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_TREADWEARINDICATORS", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "TREADWEARINDICATORS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_NAMEOFMANUFACTURER", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "NAMEOFMANUFACTURER", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_NAMEOFMANUFACTURER", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "NAMEOFMANUFACTURER", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("IsNull_FAMILY", Global.System.Data.OracleClient.OracleType.Int32, 0, Global.System.Data.ParameterDirection.Input, "FAMILY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OracleClient.OracleParameter("Original_FAMILY", Global.System.Data.OracleClient.OracleType.VarChar, 0, Global.System.Data.ParameterDirection.Input, "FAMILY", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SKUID, SKU, BRANDCODE, TIRETYPEID, NPRID, SIZESTAMP, DISCONTINUEDDATE, SPE"& _ 
                "CNUMBER, SPEEDRATING, SINGLOADINDEX, DUALLOADINDEX, BELTEDRADIALYN, TUBELESSYN, "& _ 
                "REINFORCEDYN, EXTRALOADYN, MEASURINGRIM, UTQGTREADWEAR, UTQGTRACTION, UTQGTEMP, "& _ 
                "MUDSNOWYN, RIMDIAMETER, SERIALDATE, BRANDDESC, LOADRANGE, MEARIMWIDTH, REGROOVAB"& _ 
                "LEIND, PLANTPRODUCED, MOSTRECENTTESTDATE, IMARK, CREATEDBY, CREATEDON, MODIFIEDB"& _ 
                "Y, MODIFIEDON, INFORMENUMBER, FECHADATE, TREADPATTERN, SPECIALPROTECTIVEBAND, NO"& _ 
                "MINALTIREWIDTH, ASPECTRADIO, TREADWEARINDICATORS, NAMEOFMANUFACTURER, FAMILY FRO"& _ 
                "M ICS.PRODUCT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkCertificationTypeDataset.PRODUCTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkCertificationTypeDataset.PRODUCTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkCertificationTypeDataset.PRODUCTDataTable = New EmarkCertificationTypeDataset.PRODUCTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As EmarkCertificationTypeDataset.PRODUCTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As EmarkCertificationTypeDataset) As Integer
            Return Me.Adapter.Update(dataSet, "PRODUCT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_SKUID As Decimal,  _
                    ByVal Original_SKU As String,  _
                    ByVal Original_BRANDCODE As String,  _
                    ByVal Original_TIRETYPEID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NPRID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SIZESTAMP As String,  _
                    ByVal Original_DISCONTINUEDDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_SPECNUMBER As String,  _
                    ByVal Original_SPEEDRATING As String,  _
                    ByVal Original_SINGLOADINDEX As String,  _
                    ByVal Original_DUALLOADINDEX As String,  _
                    ByVal Original_BELTEDRADIALYN As String,  _
                    ByVal Original_TUBELESSYN As String,  _
                    ByVal Original_REINFORCEDYN As String,  _
                    ByVal Original_EXTRALOADYN As String,  _
                    ByVal Original_MEASURINGRIM As String,  _
                    ByVal Original_UTQGTREADWEAR As String,  _
                    ByVal Original_UTQGTRACTION As String,  _
                    ByVal Original_UTQGTEMP As String,  _
                    ByVal Original_MUDSNOWYN As String,  _
                    ByVal Original_RIMDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_BRANDDESC As String,  _
                    ByVal Original_LOADRANGE As String,  _
                    ByVal Original_MEARIMWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_REGROOVABLEIND As String,  _
                    ByVal Original_PLANTPRODUCED As String,  _
                    ByVal Original_MOSTRECENTTESTDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_IMARK As String,  _
                    ByVal Original_CREATEDBY As String,  _
                    ByVal Original_CREATEDON As Date,  _
                    ByVal Original_MODIFIEDBY As String,  _
                    ByVal Original_MODIFIEDON As Date,  _
                    ByVal Original_INFORMENUMBER As String,  _
                    ByVal Original_FECHADATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_TREADPATTERN As String,  _
                    ByVal Original_SPECIALPROTECTIVEBAND As String,  _
                    ByVal Original_NOMINALTIREWIDTH As String,  _
                    ByVal Original_ASPECTRADIO As String,  _
                    ByVal Original_TREADWEARINDICATORS As String,  _
                    ByVal Original_NAMEOFMANUFACTURER As String,  _
                    ByVal Original_FAMILY As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SKUID,Decimal)
            If (Original_SKU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SKU")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SKU,String)
            End If
            If (Original_BRANDCODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_BRANDCODE,String)
            End If
            If (Original_TIRETYPEID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_TIRETYPEID.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_NPRID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_NPRID.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_SIZESTAMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SIZESTAMP")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_SIZESTAMP,String)
            End If
            If (Original_DISCONTINUEDDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DISCONTINUEDDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_SPECNUMBER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_SPECNUMBER,String)
            End If
            If (Original_SPEEDRATING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_SPEEDRATING,String)
            End If
            If (Original_SINGLOADINDEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_SINGLOADINDEX,String)
            End If
            If (Original_DUALLOADINDEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_DUALLOADINDEX,String)
            End If
            If (Original_BELTEDRADIALYN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_BELTEDRADIALYN,String)
            End If
            If (Original_TUBELESSYN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_TUBELESSYN,String)
            End If
            If (Original_REINFORCEDYN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_REINFORCEDYN,String)
            End If
            If (Original_EXTRALOADYN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_EXTRALOADYN,String)
            End If
            If (Original_MEASURINGRIM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_MEASURINGRIM,String)
            End If
            If (Original_UTQGTREADWEAR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_UTQGTREADWEAR,String)
            End If
            If (Original_UTQGTRACTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_UTQGTRACTION,String)
            End If
            If (Original_UTQGTEMP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_UTQGTEMP,String)
            End If
            If (Original_MUDSNOWYN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_MUDSNOWYN,String)
            End If
            If (Original_RIMDIAMETER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_RIMDIAMETER.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_SERIALDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_SERIALDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_BRANDDESC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_BRANDDESC,String)
            End If
            If (Original_LOADRANGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_LOADRANGE,String)
            End If
            If (Original_MEARIMWIDTH.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_MEARIMWIDTH.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_REGROOVABLEIND Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_REGROOVABLEIND,String)
            End If
            If (Original_PLANTPRODUCED Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_PLANTPRODUCED,String)
            End If
            If (Original_MOSTRECENTTESTDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_MOSTRECENTTESTDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_IMARK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_IMARK,String)
            End If
            If (Original_CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CREATEDBY")
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_CREATEDBY,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_CREATEDON,Date)
            If (Original_MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MODIFIEDBY")
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_MODIFIEDBY,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_MODIFIEDON,Date)
            If (Original_INFORMENUMBER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_INFORMENUMBER,String)
            End If
            If (Original_FECHADATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_FECHADATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_TREADPATTERN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_TREADPATTERN,String)
            End If
            If (Original_SPECIALPROTECTIVEBAND Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_SPECIALPROTECTIVEBAND,String)
            End If
            If (Original_NOMINALTIREWIDTH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_NOMINALTIREWIDTH,String)
            End If
            If (Original_ASPECTRADIO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_ASPECTRADIO,String)
            End If
            If (Original_TREADWEARINDICATORS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_TREADWEARINDICATORS,String)
            End If
            If (Original_NAMEOFMANUFACTURER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_NAMEOFMANUFACTURER,String)
            End If
            If (Original_FAMILY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_FAMILY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SKUID As Decimal,  _
                    ByVal SKU As String,  _
                    ByVal BRANDCODE As String,  _
                    ByVal TIRETYPEID As Global.System.Nullable(Of Decimal),  _
                    ByVal NPRID As Global.System.Nullable(Of Decimal),  _
                    ByVal SIZESTAMP As String,  _
                    ByVal DISCONTINUEDDATE As Global.System.Nullable(Of Date),  _
                    ByVal SPECNUMBER As String,  _
                    ByVal SPEEDRATING As String,  _
                    ByVal SINGLOADINDEX As String,  _
                    ByVal DUALLOADINDEX As String,  _
                    ByVal BELTEDRADIALYN As String,  _
                    ByVal TUBELESSYN As String,  _
                    ByVal REINFORCEDYN As String,  _
                    ByVal EXTRALOADYN As String,  _
                    ByVal MEASURINGRIM As String,  _
                    ByVal UTQGTREADWEAR As String,  _
                    ByVal UTQGTRACTION As String,  _
                    ByVal UTQGTEMP As String,  _
                    ByVal MUDSNOWYN As String,  _
                    ByVal RIMDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal BRANDDESC As String,  _
                    ByVal LOADRANGE As String,  _
                    ByVal MEARIMWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal REGROOVABLEIND As String,  _
                    ByVal PLANTPRODUCED As String,  _
                    ByVal MOSTRECENTTESTDATE As Global.System.Nullable(Of Date),  _
                    ByVal IMARK As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal INFORMENUMBER As String,  _
                    ByVal FECHADATE As Global.System.Nullable(Of Date),  _
                    ByVal TREADPATTERN As String,  _
                    ByVal SPECIALPROTECTIVEBAND As String,  _
                    ByVal NOMINALTIREWIDTH As String,  _
                    ByVal ASPECTRADIO As String,  _
                    ByVal TREADWEARINDICATORS As String,  _
                    ByVal NAMEOFMANUFACTURER As String,  _
                    ByVal FAMILY As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SKUID,Decimal)
            If (SKU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SKU")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SKU,String)
            End If
            If (BRANDCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BRANDCODE,String)
            End If
            If (TIRETYPEID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TIRETYPEID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NPRID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NPRID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SIZESTAMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SIZESTAMP")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SIZESTAMP,String)
            End If
            If (DISCONTINUEDDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DISCONTINUEDDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SPECNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SPECNUMBER,String)
            End If
            If (SPEEDRATING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SPEEDRATING,String)
            End If
            If (SINGLOADINDEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SINGLOADINDEX,String)
            End If
            If (DUALLOADINDEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(DUALLOADINDEX,String)
            End If
            If (BELTEDRADIALYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BELTEDRADIALYN,String)
            End If
            If (TUBELESSYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TUBELESSYN,String)
            End If
            If (REINFORCEDYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(REINFORCEDYN,String)
            End If
            If (EXTRALOADYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(EXTRALOADYN,String)
            End If
            If (MEASURINGRIM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(MEASURINGRIM,String)
            End If
            If (UTQGTREADWEAR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(UTQGTREADWEAR,String)
            End If
            If (UTQGTRACTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(UTQGTRACTION,String)
            End If
            If (UTQGTEMP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(UTQGTEMP,String)
            End If
            If (MUDSNOWYN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(MUDSNOWYN,String)
            End If
            If (RIMDIAMETER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(RIMDIAMETER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SERIALDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(SERIALDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (BRANDDESC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(BRANDDESC,String)
            End If
            If (LOADRANGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(LOADRANGE,String)
            End If
            If (MEARIMWIDTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MEARIMWIDTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (REGROOVABLEIND Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(REGROOVABLEIND,String)
            End If
            If (PLANTPRODUCED Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PLANTPRODUCED,String)
            End If
            If (MOSTRECENTTESTDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(MOSTRECENTTESTDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (IMARK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(IMARK,String)
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(MODIFIEDON,Date)
            If (INFORMENUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(INFORMENUMBER,String)
            End If
            If (FECHADATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(FECHADATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (TREADPATTERN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(TREADPATTERN,String)
            End If
            If (SPECIALPROTECTIVEBAND Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(SPECIALPROTECTIVEBAND,String)
            End If
            If (NOMINALTIREWIDTH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(NOMINALTIREWIDTH,String)
            End If
            If (ASPECTRADIO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ASPECTRADIO,String)
            End If
            If (TREADWEARINDICATORS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(TREADWEARINDICATORS,String)
            End If
            If (NAMEOFMANUFACTURER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(NAMEOFMANUFACTURER,String)
            End If
            If (FAMILY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(FAMILY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SKUID As Decimal,  _
                    ByVal SKU As String,  _
                    ByVal BRANDCODE As String,  _
                    ByVal TIRETYPEID As Global.System.Nullable(Of Decimal),  _
                    ByVal NPRID As Global.System.Nullable(Of Decimal),  _
                    ByVal SIZESTAMP As String,  _
                    ByVal DISCONTINUEDDATE As Global.System.Nullable(Of Date),  _
                    ByVal SPECNUMBER As String,  _
                    ByVal SPEEDRATING As String,  _
                    ByVal SINGLOADINDEX As String,  _
                    ByVal DUALLOADINDEX As String,  _
                    ByVal BELTEDRADIALYN As String,  _
                    ByVal TUBELESSYN As String,  _
                    ByVal REINFORCEDYN As String,  _
                    ByVal EXTRALOADYN As String,  _
                    ByVal MEASURINGRIM As String,  _
                    ByVal UTQGTREADWEAR As String,  _
                    ByVal UTQGTRACTION As String,  _
                    ByVal UTQGTEMP As String,  _
                    ByVal MUDSNOWYN As String,  _
                    ByVal RIMDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal BRANDDESC As String,  _
                    ByVal LOADRANGE As String,  _
                    ByVal MEARIMWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal REGROOVABLEIND As String,  _
                    ByVal PLANTPRODUCED As String,  _
                    ByVal MOSTRECENTTESTDATE As Global.System.Nullable(Of Date),  _
                    ByVal IMARK As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal INFORMENUMBER As String,  _
                    ByVal FECHADATE As Global.System.Nullable(Of Date),  _
                    ByVal TREADPATTERN As String,  _
                    ByVal SPECIALPROTECTIVEBAND As String,  _
                    ByVal NOMINALTIREWIDTH As String,  _
                    ByVal ASPECTRADIO As String,  _
                    ByVal TREADWEARINDICATORS As String,  _
                    ByVal NAMEOFMANUFACTURER As String,  _
                    ByVal FAMILY As String,  _
                    ByVal Original_SKUID As Decimal,  _
                    ByVal Original_SKU As String,  _
                    ByVal Original_BRANDCODE As String,  _
                    ByVal Original_TIRETYPEID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NPRID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SIZESTAMP As String,  _
                    ByVal Original_DISCONTINUEDDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_SPECNUMBER As String,  _
                    ByVal Original_SPEEDRATING As String,  _
                    ByVal Original_SINGLOADINDEX As String,  _
                    ByVal Original_DUALLOADINDEX As String,  _
                    ByVal Original_BELTEDRADIALYN As String,  _
                    ByVal Original_TUBELESSYN As String,  _
                    ByVal Original_REINFORCEDYN As String,  _
                    ByVal Original_EXTRALOADYN As String,  _
                    ByVal Original_MEASURINGRIM As String,  _
                    ByVal Original_UTQGTREADWEAR As String,  _
                    ByVal Original_UTQGTRACTION As String,  _
                    ByVal Original_UTQGTEMP As String,  _
                    ByVal Original_MUDSNOWYN As String,  _
                    ByVal Original_RIMDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_BRANDDESC As String,  _
                    ByVal Original_LOADRANGE As String,  _
                    ByVal Original_MEARIMWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_REGROOVABLEIND As String,  _
                    ByVal Original_PLANTPRODUCED As String,  _
                    ByVal Original_MOSTRECENTTESTDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_IMARK As String,  _
                    ByVal Original_CREATEDBY As String,  _
                    ByVal Original_CREATEDON As Date,  _
                    ByVal Original_MODIFIEDBY As String,  _
                    ByVal Original_MODIFIEDON As Date,  _
                    ByVal Original_INFORMENUMBER As String,  _
                    ByVal Original_FECHADATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_TREADPATTERN As String,  _
                    ByVal Original_SPECIALPROTECTIVEBAND As String,  _
                    ByVal Original_NOMINALTIREWIDTH As String,  _
                    ByVal Original_ASPECTRADIO As String,  _
                    ByVal Original_TREADWEARINDICATORS As String,  _
                    ByVal Original_NAMEOFMANUFACTURER As String,  _
                    ByVal Original_FAMILY As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SKUID,Decimal)
            If (SKU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SKU")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SKU,String)
            End If
            If (BRANDCODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(BRANDCODE,String)
            End If
            If (TIRETYPEID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TIRETYPEID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NPRID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NPRID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SIZESTAMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SIZESTAMP")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SIZESTAMP,String)
            End If
            If (DISCONTINUEDDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DISCONTINUEDDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SPECNUMBER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SPECNUMBER,String)
            End If
            If (SPEEDRATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SPEEDRATING,String)
            End If
            If (SINGLOADINDEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SINGLOADINDEX,String)
            End If
            If (DUALLOADINDEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(DUALLOADINDEX,String)
            End If
            If (BELTEDRADIALYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(BELTEDRADIALYN,String)
            End If
            If (TUBELESSYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TUBELESSYN,String)
            End If
            If (REINFORCEDYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(REINFORCEDYN,String)
            End If
            If (EXTRALOADYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(EXTRALOADYN,String)
            End If
            If (MEASURINGRIM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(MEASURINGRIM,String)
            End If
            If (UTQGTREADWEAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(UTQGTREADWEAR,String)
            End If
            If (UTQGTRACTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(UTQGTRACTION,String)
            End If
            If (UTQGTEMP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(UTQGTEMP,String)
            End If
            If (MUDSNOWYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(MUDSNOWYN,String)
            End If
            If (RIMDIAMETER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(RIMDIAMETER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SERIALDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(SERIALDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (BRANDDESC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(BRANDDESC,String)
            End If
            If (LOADRANGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(LOADRANGE,String)
            End If
            If (MEARIMWIDTH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MEARIMWIDTH.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (REGROOVABLEIND Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(REGROOVABLEIND,String)
            End If
            If (PLANTPRODUCED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(PLANTPRODUCED,String)
            End If
            If (MOSTRECENTTESTDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(MOSTRECENTTESTDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (IMARK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(IMARK,String)
            End If
            If (CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CREATEDBY")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CREATEDBY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CREATEDON,Date)
            If (MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODIFIEDBY")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(MODIFIEDBY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(MODIFIEDON,Date)
            If (INFORMENUMBER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(INFORMENUMBER,String)
            End If
            If (FECHADATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(FECHADATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (TREADPATTERN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(TREADPATTERN,String)
            End If
            If (SPECIALPROTECTIVEBAND Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(SPECIALPROTECTIVEBAND,String)
            End If
            If (NOMINALTIREWIDTH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(NOMINALTIREWIDTH,String)
            End If
            If (ASPECTRADIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(ASPECTRADIO,String)
            End If
            If (TREADWEARINDICATORS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(TREADWEARINDICATORS,String)
            End If
            If (NAMEOFMANUFACTURER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(NAMEOFMANUFACTURER,String)
            End If
            If (FAMILY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(FAMILY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_SKUID,Decimal)
            If (Original_SKU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SKU")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_SKU,String)
            End If
            If (Original_BRANDCODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_BRANDCODE,String)
            End If
            If (Original_TIRETYPEID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_TIRETYPEID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_NPRID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_NPRID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_SIZESTAMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SIZESTAMP")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_SIZESTAMP,String)
            End If
            If (Original_DISCONTINUEDDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_DISCONTINUEDDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_SPECNUMBER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_SPECNUMBER,String)
            End If
            If (Original_SPEEDRATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_SPEEDRATING,String)
            End If
            If (Original_SINGLOADINDEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_SINGLOADINDEX,String)
            End If
            If (Original_DUALLOADINDEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_DUALLOADINDEX,String)
            End If
            If (Original_BELTEDRADIALYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_BELTEDRADIALYN,String)
            End If
            If (Original_TUBELESSYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_TUBELESSYN,String)
            End If
            If (Original_REINFORCEDYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_REINFORCEDYN,String)
            End If
            If (Original_EXTRALOADYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_EXTRALOADYN,String)
            End If
            If (Original_MEASURINGRIM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_MEASURINGRIM,String)
            End If
            If (Original_UTQGTREADWEAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_UTQGTREADWEAR,String)
            End If
            If (Original_UTQGTRACTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_UTQGTRACTION,String)
            End If
            If (Original_UTQGTEMP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_UTQGTEMP,String)
            End If
            If (Original_MUDSNOWYN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_MUDSNOWYN,String)
            End If
            If (Original_RIMDIAMETER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_RIMDIAMETER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_SERIALDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_SERIALDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_BRANDDESC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_BRANDDESC,String)
            End If
            If (Original_LOADRANGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_LOADRANGE,String)
            End If
            If (Original_MEARIMWIDTH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_MEARIMWIDTH.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_REGROOVABLEIND Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_REGROOVABLEIND,String)
            End If
            If (Original_PLANTPRODUCED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_PLANTPRODUCED,String)
            End If
            If (Original_MOSTRECENTTESTDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_MOSTRECENTTESTDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_IMARK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_IMARK,String)
            End If
            If (Original_CREATEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CREATEDBY")
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_CREATEDBY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_CREATEDON,Date)
            If (Original_MODIFIEDBY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MODIFIEDBY")
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_MODIFIEDBY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_MODIFIEDON,Date)
            If (Original_INFORMENUMBER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_INFORMENUMBER,String)
            End If
            If (Original_FECHADATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_FECHADATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_TREADPATTERN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_TREADPATTERN,String)
            End If
            If (Original_SPECIALPROTECTIVEBAND Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_SPECIALPROTECTIVEBAND,String)
            End If
            If (Original_NOMINALTIREWIDTH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_NOMINALTIREWIDTH,String)
            End If
            If (Original_ASPECTRADIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_ASPECTRADIO,String)
            End If
            If (Original_TREADWEARINDICATORS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_TREADWEARINDICATORS,String)
            End If
            If (Original_NAMEOFMANUFACTURER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_NAMEOFMANUFACTURER,String)
            End If
            If (Original_FAMILY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_FAMILY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SKU As String,  _
                    ByVal BRANDCODE As String,  _
                    ByVal TIRETYPEID As Global.System.Nullable(Of Decimal),  _
                    ByVal NPRID As Global.System.Nullable(Of Decimal),  _
                    ByVal SIZESTAMP As String,  _
                    ByVal DISCONTINUEDDATE As Global.System.Nullable(Of Date),  _
                    ByVal SPECNUMBER As String,  _
                    ByVal SPEEDRATING As String,  _
                    ByVal SINGLOADINDEX As String,  _
                    ByVal DUALLOADINDEX As String,  _
                    ByVal BELTEDRADIALYN As String,  _
                    ByVal TUBELESSYN As String,  _
                    ByVal REINFORCEDYN As String,  _
                    ByVal EXTRALOADYN As String,  _
                    ByVal MEASURINGRIM As String,  _
                    ByVal UTQGTREADWEAR As String,  _
                    ByVal UTQGTRACTION As String,  _
                    ByVal UTQGTEMP As String,  _
                    ByVal MUDSNOWYN As String,  _
                    ByVal RIMDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal BRANDDESC As String,  _
                    ByVal LOADRANGE As String,  _
                    ByVal MEARIMWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal REGROOVABLEIND As String,  _
                    ByVal PLANTPRODUCED As String,  _
                    ByVal MOSTRECENTTESTDATE As Global.System.Nullable(Of Date),  _
                    ByVal IMARK As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal INFORMENUMBER As String,  _
                    ByVal FECHADATE As Global.System.Nullable(Of Date),  _
                    ByVal TREADPATTERN As String,  _
                    ByVal SPECIALPROTECTIVEBAND As String,  _
                    ByVal NOMINALTIREWIDTH As String,  _
                    ByVal ASPECTRADIO As String,  _
                    ByVal TREADWEARINDICATORS As String,  _
                    ByVal NAMEOFMANUFACTURER As String,  _
                    ByVal FAMILY As String,  _
                    ByVal Original_SKUID As Decimal,  _
                    ByVal Original_SKU As String,  _
                    ByVal Original_BRANDCODE As String,  _
                    ByVal Original_TIRETYPEID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NPRID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SIZESTAMP As String,  _
                    ByVal Original_DISCONTINUEDDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_SPECNUMBER As String,  _
                    ByVal Original_SPEEDRATING As String,  _
                    ByVal Original_SINGLOADINDEX As String,  _
                    ByVal Original_DUALLOADINDEX As String,  _
                    ByVal Original_BELTEDRADIALYN As String,  _
                    ByVal Original_TUBELESSYN As String,  _
                    ByVal Original_REINFORCEDYN As String,  _
                    ByVal Original_EXTRALOADYN As String,  _
                    ByVal Original_MEASURINGRIM As String,  _
                    ByVal Original_UTQGTREADWEAR As String,  _
                    ByVal Original_UTQGTRACTION As String,  _
                    ByVal Original_UTQGTEMP As String,  _
                    ByVal Original_MUDSNOWYN As String,  _
                    ByVal Original_RIMDIAMETER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SERIALDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_BRANDDESC As String,  _
                    ByVal Original_LOADRANGE As String,  _
                    ByVal Original_MEARIMWIDTH As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_REGROOVABLEIND As String,  _
                    ByVal Original_PLANTPRODUCED As String,  _
                    ByVal Original_MOSTRECENTTESTDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_IMARK As String,  _
                    ByVal Original_CREATEDBY As String,  _
                    ByVal Original_CREATEDON As Date,  _
                    ByVal Original_MODIFIEDBY As String,  _
                    ByVal Original_MODIFIEDON As Date,  _
                    ByVal Original_INFORMENUMBER As String,  _
                    ByVal Original_FECHADATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_TREADPATTERN As String,  _
                    ByVal Original_SPECIALPROTECTIVEBAND As String,  _
                    ByVal Original_NOMINALTIREWIDTH As String,  _
                    ByVal Original_ASPECTRADIO As String,  _
                    ByVal Original_TREADWEARINDICATORS As String,  _
                    ByVal Original_NAMEOFMANUFACTURER As String,  _
                    ByVal Original_FAMILY As String) As Integer
            Return Me.Update(Original_SKUID, SKU, BRANDCODE, TIRETYPEID, NPRID, SIZESTAMP, DISCONTINUEDDATE, SPECNUMBER, SPEEDRATING, SINGLOADINDEX, DUALLOADINDEX, BELTEDRADIALYN, TUBELESSYN, REINFORCEDYN, EXTRALOADYN, MEASURINGRIM, UTQGTREADWEAR, UTQGTRACTION, UTQGTEMP, MUDSNOWYN, RIMDIAMETER, SERIALDATE, BRANDDESC, LOADRANGE, MEARIMWIDTH, REGROOVABLEIND, PLANTPRODUCED, MOSTRECENTTESTDATE, IMARK, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, INFORMENUMBER, FECHADATE, TREADPATTERN, SPECIALPROTECTIVEBAND, NOMINALTIREWIDTH, ASPECTRADIO, TREADWEARINDICATORS, NAMEOFMANUFACTURER, FAMILY, Original_SKUID, Original_SKU, Original_BRANDCODE, Original_TIRETYPEID, Original_NPRID, Original_SIZESTAMP, Original_DISCONTINUEDDATE, Original_SPECNUMBER, Original_SPEEDRATING, Original_SINGLOADINDEX, Original_DUALLOADINDEX, Original_BELTEDRADIALYN, Original_TUBELESSYN, Original_REINFORCEDYN, Original_EXTRALOADYN, Original_MEASURINGRIM, Original_UTQGTREADWEAR, Original_UTQGTRACTION, Original_UTQGTEMP, Original_MUDSNOWYN, Original_RIMDIAMETER, Original_SERIALDATE, Original_BRANDDESC, Original_LOADRANGE, Original_MEARIMWIDTH, Original_REGROOVABLEIND, Original_PLANTPRODUCED, Original_MOSTRECENTTESTDATE, Original_IMARK, Original_CREATEDBY, Original_CREATEDON, Original_MODIFIEDBY, Original_MODIFIEDON, Original_INFORMENUMBER, Original_FECHADATE, Original_TREADPATTERN, Original_SPECIALPROTECTIVEBAND, Original_NOMINALTIREWIDTH, Original_ASPECTRADIO, Original_TREADWEARINDICATORS, Original_NAMEOFMANUFACTURER, Original_FAMILY)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class EMARKCERTIFICATIONREPORT_VIEWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OracleClient.OracleDataAdapter
        
        Private _connection As Global.System.Data.OracleClient.OracleConnection
        
        Private _commandCollection() As Global.System.Data.OracleClient.OracleCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OracleClient.OracleDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OracleClient.OracleConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OracleClient.OracleCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OracleClient.OracleCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OracleClient.OracleDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "EMARKCERTIFICATIONREPORT_VIEW"
            tableMapping.ColumnMappings.Add("SKUID", "SKUID")
            tableMapping.ColumnMappings.Add("ACTIVESTATUS", "ACTIVESTATUS")
            tableMapping.ColumnMappings.Add("CERTIFICATIONTYPEID", "CERTIFICATIONTYPEID")
            tableMapping.ColumnMappings.Add("CERTIFICATENUMBER", "CERTIFICATENUMBER")
            tableMapping.ColumnMappings.Add("DATESUBMITED", "DATESUBMITED")
            tableMapping.ColumnMappings.Add("DATEASSIGNED_EGI", "DATEASSIGNED_EGI")
            tableMapping.ColumnMappings.Add("DATEAPPROVED_CEGI", "DATEAPPROVED_CEGI")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALREQUIRED_EI", "SUPPLEMENTALREQUIRED_EI")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALNUMBER_EI", "SUPPLEMENTALNUMBER_EI")
            tableMapping.ColumnMappings.Add("JOBREPORTNUMBER_CEN", "JOBREPORTNUMBER_CEN")
            tableMapping.ColumnMappings.Add("EXTENSION_EN", "EXTENSION_EN")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALEXTENSION_EN", "SUPPLEMENTALEXTENSION_EN")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALMOLDSTAMPING_E", "SUPPLEMENTALMOLDSTAMPING_E")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALDATEASSIGNED_E", "SUPPLEMENTALDATEASSIGNED_E")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALDATESUBMITTED_E", "SUPPLEMENTALDATESUBMITTED_E")
            tableMapping.ColumnMappings.Add("SUPPLEMENTALDATEAPPROVED_E", "SUPPLEMENTALDATEAPPROVED_E")
            tableMapping.ColumnMappings.Add("WHEELTESTREFERENCE", "WHEELTESTREFERENCE")
            tableMapping.ColumnMappings.Add("NOISETESTREFERENCE", "NOISETESTREFERENCE")
            tableMapping.ColumnMappings.Add("WGTESTREFERENCE", "WGTESTREFERENCE")
            tableMapping.ColumnMappings.Add("RRTESTREFERENCE", "RRTESTREFERENCE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OracleClient.OracleConnection()
            Me._connection.ConnectionString = Global.CooperTire.ICS.Datasets.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OracleClient.OracleCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OracleClient.OracleCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SKUID, ACTIVESTATUS, CERTIFICATIONTYPEID, CERTIFICATENUMBER, DATESUBMITED,"& _ 
                " DATEASSIGNED_EGI, DATEAPPROVED_CEGI, SUPPLEMENTALREQUIRED_EI, SUPPLEMENTALNUMBE"& _ 
                "R_EI, JOBREPORTNUMBER_CEN, EXTENSION_EN, SUPPLEMENTALEXTENSION_EN, SUPPLEMENTALM"& _ 
                "OLDSTAMPING_E, SUPPLEMENTALDATEASSIGNED_E, SUPPLEMENTALDATESUBMITTED_E, SUPPLEME"& _ 
                "NTALDATEAPPROVED_E, WHEELTESTREFERENCE, NOISETESTREFERENCE, WGTESTREFERENCE, RRT"& _ 
                "ESTREFERENCE FROM ICS.EMARKCERTIFICATIONREPORT_VIEW"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EmarkCertificationTypeDataset.EMARKCERTIFICATIONREPORT_VIEWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As EmarkCertificationTypeDataset.EMARKCERTIFICATIONREPORT_VIEWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As EmarkCertificationTypeDataset.EMARKCERTIFICATIONREPORT_VIEWDataTable = New EmarkCertificationTypeDataset.EMARKCERTIFICATIONREPORT_VIEWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
